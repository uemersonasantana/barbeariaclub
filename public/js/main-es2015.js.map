{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth-interceptor.ts","./src/app/components/agendamento/agendamento.component.ts","./src/app/components/agendamento/agendamento.component.html","./src/app/components/barbeiro/barbeiro.component.ts","./src/app/components/barbeiro/barbeiro.component.html","./src/app/components/ce/ce-agendamento/ce-agendamento.component.ts","./src/app/components/ce/ce-agendamento/ce-agendamento.component.html","./src/app/components/ce/ce-barbeiro/ce-barbeiro.component.ts","./src/app/components/ce/ce-barbeiro/ce-barbeiro.component.html","./src/app/components/ce/ce-cliente/ce-cliente.component.ts","./src/app/components/ce/ce-cliente/ce-cliente.component.html","./src/app/components/ce/ce-usuario/ce-usuario.component.ts","./src/app/components/ce/ce-usuario/ce-usuario.component.html","./src/app/components/cliente/cliente.component.ts","./src/app/components/cliente/cliente.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/password/request-reset/request-reset.component.ts","./src/app/components/password/request-reset/request-reset.component.html","./src/app/components/password/response-reset/response-reset.component.ts","./src/app/components/password/response-reset/response-reset.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/components/usuario/usuario.component.ts","./src/app/components/usuario/usuario.component.html","./src/app/global-constants.ts","./src/app/services/after-login.service.ts","./src/app/services/agendamento.service.ts","./src/app/services/auth.service.ts","./src/app/services/barbeiro.service.ts","./src/app/services/before-login.service.ts","./src/app/services/cliente.service.ts","./src/app/services/jarwis.service.ts","./src/app/services/municipio.service.ts","./src/app/services/token.service.ts","./src/app/services/uf.service.ts","./src/app/services/usuario.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule, Component} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './components/login/login.component';\nimport {SignupComponent} from './components/signup/signup.component';\nimport {RequestResetComponent} from './components/password/request-reset/request-reset.component';\nimport {ResponseResetComponent} from './components/password/response-reset/response-reset.component';\nimport {BeforeLoginService} from './services/before-login.service';\nimport {AfterLoginService} from './services/after-login.service';\nimport {AgendamentoComponent} from './components/agendamento/agendamento.component';\nimport {BarbeiroComponent} from './components/barbeiro/barbeiro.component';\nimport {ClienteComponent} from './components/cliente/cliente.component';\nimport {UsuarioComponent} from './components/usuario/usuario.component';\n\nconst appRoutes: Routes = [\n  {path: '', canActivate:[BeforeLoginService], children: [\n    { path : '', component: LoginComponent },\n    { path : 'login', component: LoginComponent },\n    { path : 'signup', component : SignupComponent},\n    { path : 'request-password-reset', component: RequestResetComponent },\n    { path : 'response-password-reset', component: ResponseResetComponent }\n  ]}\n  ,\n  {path: '', canActivate:[AfterLoginService], children: [\n    { path : 'agendamentos', component: AgendamentoComponent },\n    { path : 'barbeiros', component : BarbeiroComponent},\n    { path : 'clientes', component: ClienteComponent },\n    { path : 'usuarios', component: UsuarioComponent }\n  ]}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n    //,RouterModule.forChild(appRoutesChildren)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}","import { Component } from '@angular/core';\nimport {AuthService} from './services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-app';\n  \n  public loggedIn: boolean;\n\n  constructor(\n    private Auth: AuthService,\n    private router: Router\n  ) {\n    this.Auth.authStatus.subscribe(value => this.loggedIn = value);\n    \n    if (this.loggedIn) {\n      this.router.navigateByUrl('/agendamentos');\n    } \n\n  }\n  \n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>\n<ng-snotify></ng-snotify>","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {AppRoutingModule} from './/app-routing.module';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport {AgendamentoService} from './services/agendamento.service';\nimport {BarbeiroService} from './services/barbeiro.service';\n\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {SignupComponent} from './components/signup/signup.component';\nimport {RequestResetComponent} from './components/password/request-reset/request-reset.component';\nimport {ResponseResetComponent} from './components/password/response-reset/response-reset.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\n\nimport {JarwisService} from './services/jarwis.service';\nimport {TokenService} from './services/token.service';\nimport {AuthService} from './services/auth.service';\nimport {AfterLoginService} from './services/after-login.service';\nimport {BeforeLoginService} from './services/before-login.service';\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {SnotifyModule, SnotifyService, ToastDefaults} from 'ng-snotify';\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\n//import {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatCardModule} from '@angular/material/card';\n\nimport { NgxMaskModule, IConfig } from 'ngx-mask';\nexport const options: Partial<IConfig> | (() => Partial<IConfig>) = {}\n\nimport {AgendamentoComponent} from './components/agendamento/agendamento.component';\nimport {BarbeiroComponent} from './components/barbeiro/barbeiro.component';\nimport {ClienteComponent} from './components/cliente/cliente.component';\n\nimport {CeAgendamentoComponent} from './components/ce/ce-agendamento/ce-agendamento.component';\nimport {CeBarbeiroComponent} from './components/ce/ce-barbeiro/ce-barbeiro.component';\nimport {CeClienteComponent} from './components/ce/ce-cliente/ce-cliente.component';\nimport { AuthInterceptor } from './auth-interceptor';\nimport { UsuarioComponent } from './components/usuario/usuario.component';\nimport { CeUsuarioComponent } from './components/ce/ce-usuario/ce-usuario.component';\n\n//import {FormsModule, ReactiveFormsModule} from '@angular/forms';\n//import {OverlayModule} from '@angular/cdk/overlay';\n\n\n//registerLocaleData(localePt);\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    RequestResetComponent,\n    ResponseResetComponent,\n    NavbarComponent,\n    AgendamentoComponent,\n    BarbeiroComponent,\n    ClienteComponent,\n    CeAgendamentoComponent,\n    CeBarbeiroComponent,\n    CeClienteComponent,\n    UsuarioComponent,\n    CeUsuarioComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule, \n    HttpClientModule,\n    AppRoutingModule,\n    SnotifyModule,\n    AutocompleteLibModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    NgxMaskModule.forRoot(options),\n  ],\n  providers: [\n    AgendamentoService,\n    BarbeiroService,\n    JarwisService,\n    TokenService,\n    AuthService, \n    AfterLoginService, \n    BeforeLoginService,\n    NavbarComponent,\n    [\n      {\n       provide: HTTP_INTERCEPTORS,\n       useClass: AuthInterceptor,\n       multi: true,\n     },\n     ],\n    //[{provide: LOCALE_ID, useValue: 'pt-BR'}]\n    {provide: 'SnotifyToastConfig', useValue: ToastDefaults},\n    SnotifyService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n","import {Component,Inject,Injectable} from \"@angular/core\";\nimport {HttpEvent, HttpHandler, HttpRequest} from \"@angular/common/http\";\nimport {HttpInterceptor} from \"@angular/common/http\";\nimport { Observable } from 'rxjs/Observable';\nimport {Router} from \"@angular/router\";\nimport {GlobalConstants} from './global-constants';\n\n\nimport { TokenService } from './services/token.service';\nimport { AuthService } from './services/auth.service';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor\n{\n    private baseUrl:string = GlobalConstants.API_URL;\n\n    constructor(\n        private router: Router,\n        private Token: TokenService,\n        private Auth: AuthService,\n        public dialogRef: MatDialog\n    ) {}\n\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n    {\n        let token = localStorage.getItem('token');\n        \n        //const lanaguageInj= this.injector.get(RefreshToken2);\n        \n        if (token) {\n            req = req.clone({\n                setHeaders: {\n                    'Authorization': 'Bearer '+token\n                }\n            } );\n        }\n            \n        return next.handle(req).catch(err => {\n            if (err.status === 401) {\n                // Redireciona para login quando expirar a sessão.\n                \n                console.log('foi22')\n                this.Token.remove();\n                this.Auth.changeAuthStatus(false);\n                this.dialogRef.closeAll();\n                this.router.navigateByUrl('/login');\n            }\n            return Observable.throw(err);\n        });\n    }\n}","import {Component, Injectable, ViewChild} from '@angular/core';\nimport {Agendamento, AgendamentoService} from '../../services/agendamento.service';\nimport {Cliente, ClienteService} from '../../services/cliente.service';\nimport {Barbeiro, BarbeiroService} from '../../services/barbeiro.service';\nimport {NgbDate, NgbCalendar, NgbDateParserFormatter,NgbDatepickerI18n, NgbDateStruct, NgbDateAdapter} from '@ng-bootstrap/ng-bootstrap';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {CeAgendamentoComponent} from '../ce/ce-agendamento/ce-agendamento.component'\nimport 'rxjs/Rx';\n\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst I18N_VALUES = {\n  'pt': {\n    weekdays: ['Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab', 'Dom'],\n    months: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\n }\n  // other languages you would support\n};\n\n// Define a service holding the language. You probably already have one if your app is i18ned. Or you could also\n// use the Angular LOCALE_ID value\n@Injectable()\nexport class I18n {\n  language = 'pt';\n}\n\n// Define custom service providing the months and weekdays translations\n@Injectable()\nexport class CustomDatepickerI18n extends NgbDatepickerI18n {\n\n  constructor(private _i18n: I18n) {\n    super();\n }\n\n  getWeekdayShortName(weekday: number): string {\n    return I18N_VALUES[this._i18n.language].weekdays[weekday - 1];\n }\n  getMonthShortName(month: number): string {\n    return I18N_VALUES[this._i18n.language].months[month - 1];\n }\n  getMonthFullName(month: number): string {\n    return this.getMonthShortName(month);\n }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${date.day}-${date.month}-${date.year}`;\n }\n}\n\n/**\n * This Service handles how the date is represented in scripts i.e. ngModel.\n */\n@Injectable()\nexport class CustomAdapter extends NgbDateAdapter<string> {\n\n  readonly DELIMITER = '-';\n\n  fromModel(value: string | null): NgbDateStruct | null {\n    if (value) {\n      let date = value.split(this.DELIMITER);\n      return {\n        day : parseInt(date[0], 10),\n        month : parseInt(date[1], 10),\n        year : parseInt(date[2], 10)\n     };\n   }\n    return null;\n }\n\n  toModel(date: NgbDateStruct | null): string | null {\n    return date ? date.day + this.DELIMITER + date.month + this.DELIMITER + date.year : null;\n }\n}\n\n/**\n * This Service handles how the date is rendered and parsed from keyboard i.e. in the bound input field.\n */\n@Injectable()\nexport class CustomDateParserFormatter extends NgbDateParserFormatter {\n\n  readonly DELIMITER = '/';\n\n  parse(value: string): NgbDateStruct | null {\n    if (value) {\n      let date = value.split(this.DELIMITER);\n      return {\n        day : parseInt(date[0], 10),\n        month : parseInt(date[1], 10),\n        year : parseInt(date[2], 10)\n     };\n   }\n    return null;\n }\n\n  format(date: NgbDateStruct | null): string {\n    return date ? date.day + this.DELIMITER + date.month + this.DELIMITER + date.year : '';\n }\n}\n\n@Component({\n  selector: 'app-agendamento',\n  templateUrl: './agendamento.component.html',\n  styleUrls: ['./agendamento.component.css'],\n  providers: [\n    I18n\n    ,{provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n}\n    ,{provide: NgbDateAdapter, useClass: CustomAdapter}\n    ,{provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter}\n  ] // define custom NgbDatepickerI18n provider\n})\nexport class AgendamentoComponent {\n  \n  agendamentos: Agendamento[];\n  NotifyAgendamentos: Agendamento[];\n  clientes: Cliente[];\n  barbeiros: Barbeiro[];\n  \n  errorMessage: string;\n  config = {\n    format: \"DD/MM/YYYY\"\n  };\n\n  tempo: any[] = [\n    {id: 0, nome: 'Todos'},\n    {id: 1, nome: 'Hoje'},\n    {id: 2, nome: 'Esta semana'},\n    {id: 3, nome: 'Este mês'},\n    {id: 4, nome: 'Últimos 30 dias'},\n    {id: 5, nome: 'Escolha o período'}\n  ];\n\n  keyword = 'nome';\n  duedates:boolean = false;\n\n  hoveredDate: NgbDate | null = null;\n  fromDate: NgbDate | null;\n  toDate: NgbDate | null;\n\n  public form = {\n      cliente_id:'',\n      barbeiro_id:0,\n      tempo:0,\n      dataInicial: null,\n      dataFinal: null\n  };\n\n  CurrentDate = new Date().toJSON().slice(0,19).replace(/-/g,'-').replace(/T/g,' ');\n\n  displayedColumns: string[] = ['id', 'data', 'hora', 'servico', 'cliente', 'barbearia', 'actions'];\n  dataSource: MatTableDataSource<Agendamento>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  //@Input() sorting: MatSortable;\n  isLoading = true;\n\n  isLoadingResult: boolean;\n\n  constructor(\n    private AgendamentoService: AgendamentoService,\n    private ClienteService: ClienteService,\n    private BarbeiroService: BarbeiroService,\n    private calendar: NgbCalendar, \n    public formatter: NgbDateParserFormatter,\n    public dialog: MatDialog\n    //,private _i18n: I18n\n  ) {}\n  \n  ngOnInit() {\n    this.BarbeiroService.getBarbeiros().subscribe( data => { this.barbeiros = data })\n    \n    this.AgendamentoService.getAgendamentos()\n       .subscribe(\n        data => {\n          this.isLoading = false;\n          this.agendamentos = data;\n          // Assign the data to the data source for the table to render\n          this.dataSource =  new MatTableDataSource(this.agendamentos)\n          this.dataSource.paginator = this.paginator;\n          this.sort.sort(({ id: 'dataagendamento', start: 'desc'}) as MatSortable)\n          this.dataSource.sort = this.sort;\n        }, \n        error => this.isLoading = false\n    )\n  }\n\n  ngOnDestroy() {\n    this.agendamentos = null;\n    this.barbeiros    = null;\n    this.clientes     = null;\n  }\n\n  getServerResponseClientes(event) {\n    this.isLoadingResult = true;\n    this.ClienteService.getBuscaClientes(event).subscribe(\n      data => { \n        if (data[0]['nome'] == undefined) {\n          this.clientes = []\n        } else {\n          this.clientes = data\n        }\n        this.isLoadingResult = false;\n      })\n  }\n\n  searchClearedClientes() {\n    this.clientes = [];\n  }\n\n  addRowInTable(data){\n    this.agendamentos.push(data[0]);\n    this.dataSource._updateChangeSubscription()\n  }\n  updateRowInTable(data) {\n    let i = this.agendamentos.findIndex((d) => d.id == data[0].id);\n    if (i>=0) {\n      this.agendamentos[i] = data[0] \n    }\n    this.dataSource._updateChangeSubscription()\n  }\n  delRowInTable(id) {\n    let i = this.agendamentos.findIndex((d) => d.id == id);\n    if (i>=0) {\n      this.agendamentos.splice(i,1)\n    }\n    this.dataSource._updateChangeSubscription()\n    this.AgendamentoService.apagar(id);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  getAgendamentos(value?:any) {\n    this.AgendamentoService\n        .getAgendamentos(value)\n        .subscribe(\n            agendamentos => {\n              this.agendamentos = []\n              for(let t of agendamentos) { \n                this.agendamentos.push(t);\n              }\n              // Assign the data to the data source for the table to render\n              this.dataSource =  new MatTableDataSource(this.agendamentos)\n              this.dataSource.paginator = this.paginator;\n              this.dataSource.sort = this.sort;\n            },\n            error => this.handleError(error)\n        )\n }\n\n  onSubmit() {\n    if (this.fromDate) {\n      this.form.dataInicial = this.fromDate.day+'/'+this.fromDate.month+'/'+this.fromDate.year;\n   } else {\n      this.form.dataInicial = ''\n   }\n    if (this.toDate) {\n      this.form.dataFinal = this.toDate.day+'/'+this.toDate.month+'/'+this.toDate.year;\n   } else {\n      this.form.dataFinal = ''\n   }\n    \n    // Ao invés de enviar o objeto, enviamos apenas o id do cliente.\n    let c:any;\n    if (this.form.cliente_id) {\n      c = this.form.cliente_id;\n      \n      if ( c['id'] > 0 ) {\n        this.form.cliente_id = c['id']\n     }\n   }\n\n    this.errorMessage = null;\n    this.getAgendamentos(this.form);\n    \n    if (this.form.cliente_id) {\n      this.form.cliente_id = c['nome']\n   }\n }\n\n  handleError(error) {\n    this.errorMessage = '<table>'; \n    for(let e of Object.keys(error.error.errors) ) {\n      this.errorMessage += \"<tr><td><div class='alert alert-danger'>\"+error.error.errors[e][0]+\"</div></td></tr>\";\n   }\n    this.errorMessage += '<table>';\n }\n\n  onBoxDueDates(value) {\n    if (value==5) {\n      this.duedates = true\n   } else {\n      this.form.dataInicial = null\n      this.form.dataFinal = null\n      this.duedates = false\n   }\n }\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n   } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\n      this.toDate = date;\n   } else {\n      this.toDate = null;\n      this.fromDate = date;\n   }\n }\n\n  isHovered(date: NgbDate) {\n    return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\n }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n }\n\n  isRange(date: NgbDate) {\n    return date.equals(this.fromDate) || (this.toDate && date.equals(this.toDate)) || this.isInside(date) || this.isHovered(date);\n }\n\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed)) ? NgbDate.from(parsed) : currentValue;\n }\n\n  openModal(id?:number) {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n        id: id\n    };\n\n    const dialogRef = this.dialog.open(CeAgendamentoComponent,dialogConfig);\n    \n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          if ( result[0].modo == 'editar' ) {\n            this.updateRowInTable(result);\n          } else {\n            this.addRowInTable(result);\n          }\n       }\n     }\n    );\n }\n\n apagarAgendamento(id:number) {\n    this.AgendamentoService.apagar(id);\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <form #agendamentosForm=ngForm (ngSubmit)=\"onSubmit()\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-4 CustomCol center texto-branco bg-gray\"><b style=\"color: #444;\">Cliente</b></div>\n                    <div class=\"col-4 CustomCol center texto-branco bg-gray\"><b style=\"color: #444;\">Barbeiro</b></div>\n                    <div class=\"col-4 CustomCol center texto-branco bg-gray\"><b style=\"color: #444;\">Tempo</b></div>\n                </div>                    \n                <div class=\"row\">\n                  <div class=\"col-4 CustomCol\">\n                    <div class=\"ng-autocomplete\">\n                        <ng-autocomplete\n                            name=\"form.cliente_id\"\n                            [(ngModel)]=\"form.cliente_id\"\n                            [data]=\"clientes\"\n                            [searchKeyword]=\"keyword\"\n                            placeHolder=\"Digite o nome do cliente\"\n                            minQueryLength=\"2\"\n                            (inputChanged)='getServerResponseClientes($event)' \n                            (inputCleared)='searchClearedClientes()'\n                            [isLoading]=\"isLoadingResult\" \n                            [itemTemplate]=\"itemTemplate\"\n                            [notFoundTemplate]=\"notFoundTemplate\">\n                        </ng-autocomplete>\n                      \n                        <ng-template #itemTemplate let-item>\n                          <a [innerHTML]=\"item.nome\"></a>\n                        </ng-template>\n                      \n                        <ng-template #notFoundTemplate let-notFound><div style=\"color:black;padding:10px;\">Cliente não encontrado.</div></ng-template>\n                      </div>                      \n                  </div>\n                  <div class=\"col-4 CustomCol\">\n                    <select class=\"custom-select\" name=\"barbeiro_id\" [(ngModel)]=\"form.barbeiro_id\">\n                        <option [value]=\"0\">Todos</option>\n                        <option *ngFor=\"let b of barbeiros\" [value]=\"b.id\">{{b.nome}}</option>\n                    </select>\n                  </div>\n                  <div class=\"col-4 CustomCol text-center\">\n                    <select class=\"custom-select\" name=\"tempo\" [(ngModel)]=\"form.tempo\" (change)=\"onBoxDueDates($event.target.value)\">\n                        <option [value]=\"t.id\" *ngFor=\"let t of tempo\">{{t.nome}}</option>\n                    </select>\n                    <div class=\"container\" *ngIf=\"duedates\">\n                        <div class=\"row\">\n                            <div class=\"form-group hidden\">\n                                <div class=\"input-group\">\n                                  <input name=\"datepicker\" style=\"border:0;\"\n                                         class=\"form-control\"\n                                         ngbDatepicker\n                                         #datepicker=\"ngbDatepicker\"\n                                         [autoClose]=\"'outside'\"\n                                         (dateSelect)=\"onDateSelection($event)\"\n                                         [displayMonths]=\"2\"\n                                         [dayTemplate]=\"t\"\n                                         outsideDays=\"hidden\"\n                                         [startDate]=\"fromDate!\">\n                                  <ng-template #t let-date let-focused=\"focused\">\n                                    <span class=\"custom-day\"\n                                          [class.focused]=\"focused\"\n                                          [class.range]=\"isRange(date)\"\n                                          [class.faded]=\"isHovered(date) || isInside(date)\"\n                                          (mouseenter)=\"hoveredDate = date\"\n                                          (mouseleave)=\"hoveredDate = null\">\n                                      {{ date.day }}\n                                    </span>\n                                  </ng-template>\n                                </div>\n                            </div>\n\n                            <div class=\"col-6 text-left\" style=\"margin-top:10px;margin-right:-50px;\">\n                                <input #dataInicial\n                                        class=\"form-control col-sm-10\" placeholder=\"Inicial\"\n                                        name=\"dataInicial\"\n                                        autocomplete=\"off\"\n                                        readonly\n                                        [(ngModel)]=\"form.dataInicial\"\n                                        [value]=\"formatter.format(fromDate)\"\n                                        (input)=\"fromDate = validateInput(fromDate, dataInicial.value)\">\n                            </div>\n                            <div class=\"col-1 text-left\" style=\"margin-top:10px;\">\n                                <button class=\"btn btn-outline-secondary\" style=\"padding:4px;\" (click)=\"datepicker.toggle()\" type=\"button\"><i class=\"far fa-calendar-alt\"></i></button>\n                            </div>\n                            <div class=\"col-6 text-left\" style=\"margin-top:10px;margin-right:-50px;\">\n                                <input #dataFinal\n                                        class=\"form-control col-sm-10\" placeholder=\"Final\"\n                                        name=\"dataFinal\"\n                                        autocomplete=\"off\"\n                                        readonly\n                                        [(ngModel)]=\"form.dataFinal\"\n                                        [value]=\"formatter.format(toDate)\"\n                                        (input)=\"toDate = validateInput(toDate, dataFinal.value)\">\n                            </div>\n                            <div class=\"col-1 text-left\" style=\"margin-top:10px;\">\n                                <button class=\"btn btn-outline-secondary\" style=\"padding:4px;\" (click)=\"datepicker.toggle()\" type=\"button\"><i class=\"far fa-calendar-alt\"></i></button>\n                            </div>\n                        </div>\n                    </div> \n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col CustomCol text-center\">\n                    <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"onSubmit()\">Pesquisar</button>\n                  </div>\n                </div>\n                <div class=\"row\" [innerHtml]=\"errorMessage\" [hidden]=\"!errorMessage\"></div>\n              </div>\n        </form>\n    </div>\n</div>\n<div class=\"card\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal()\">Novo agendamento</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"card\">\n    <div class=\"card-body\">\n        <mat-form-field>\n            <mat-label>Buscar</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\">\n          </mat-form-field>\n          \n          <table mat-table [dataSource]=\"dataSource\" matSort>\n            <ng-container matColumnDef=\"id\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\n              <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"data\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Data</th>\n              <td mat-cell *matCellDef=\"let row\">\n                <span class=\"badge badge-warning\" *ngIf=\"row.dataagendamento < CurrentDate\">Antigo</span>  \n                {{ row.dataagendamento | date: 'dd/MM/yyyy' }}</td>\n            </ng-container>\n          \n            <ng-container matColumnDef=\"hora\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Hora</th>\n              <td mat-cell *matCellDef=\"let row\">{{ row.dataagendamento | date: 'HH:mm' }}</td>\n            </ng-container>\n    \n            <ng-container matColumnDef=\"servico\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Serviço</th>\n              <td mat-cell *matCellDef=\"let row\">{{row.descricao}}</td>\n            </ng-container>\n    \n            <ng-container matColumnDef=\"cliente\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Cliente</th>\n              <td mat-cell *matCellDef=\"let row\">{{row.cliente.nome}}</td>\n            </ng-container>\n    \n            <ng-container matColumnDef=\"barbearia\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Barbearia</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.barbeiro.nome}}</td>\n              </ng-container>\n\n            <ng-container matColumnDef=\"actions\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n              <td mat-cell *matCellDef=\"let row\">\n                <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"openModal(row.id)\">Editar</button>\n                <button type=\"button\" class=\"btn btn-danger btn-space\" (click)=\"delRowInTable(row.id)\">Apagar</button>\n              </td>\n            </ng-container>\n            \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n            </tr>\n          </table>\n          <mat-card *ngIf=\"isLoading\" \n            style=\"display: flex; justify-content: center; align-items: center\">\n            <mat-progress-spinner \n              color=\"primary\" \n              mode=\"indeterminate\">\n            </mat-progress-spinner>\n          </mat-card>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n    </div>\n</div>","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Barbeiro, BarbeiroService} from '../../services/barbeiro.service';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {CeBarbeiroComponent} from '../ce/ce-barbeiro/ce-barbeiro.component';\n\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-barbeiro',\n  templateUrl: './barbeiro.component.html',\n  styleUrls: ['./barbeiro.component.css']\n})\nexport class BarbeiroComponent implements OnInit {\n  barbeiros: Barbeiro[];\n  \n  displayedColumns: string[] = ['id', 'nome', 'fone', 'email', 'actions'];\n  dataSource: MatTableDataSource<Barbeiro>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  isLoading = true;\n\n  constructor(\n    private BarbeiroService: BarbeiroService\n    ,public dialog: MatDialog\n    ) {}\n\n  ngOnInit() {\n    this.BarbeiroService.getBarbeiros()\n       .subscribe(\n        data => {\n          this.isLoading = false;\n          this.barbeiros = data;\n          // Assign the data to the data source for the table to render\n          this.dataSource =  new MatTableDataSource(this.barbeiros)\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        }, \n        error => this.isLoading = false\n    )\n  }\n\n  ngOnDestroy() {\n    this.barbeiros = null;\n  }\n\n  addRowInTable(data){\n    this.barbeiros.push(data[0]);\n    this.dataSource._updateChangeSubscription() \n  }\n  updateRowInTable(data) {\n    let i = this.barbeiros.findIndex((d) => d.id == data[0].id);\n    if (i>=0) {\n      this.barbeiros[i] = data[0] \n    }\n    this.dataSource._updateChangeSubscription()\n  }\n  delRowInTable(id) {\n    let i = this.barbeiros.findIndex((d) => d.id == id);\n    if (i>=0) {\n      this.barbeiros.splice(i,1)\n    }\n    this.dataSource._updateChangeSubscription()\n    this.BarbeiroService.apagar(id);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  openModal(id?:number) {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n        id: id\n    };\n\n    const dialogRef = this.dialog.open(CeBarbeiroComponent,dialogConfig);\n    \n    dialogRef.afterClosed().subscribe(\n        (result) => {\n          if (result) {\n            if ( result[0].modo == 'editar' ) {\n              this.updateRowInTable(result);\n            } else {\n              this.addRowInTable(result);\n            }\n          }\n        }\n      )\n    }\n}","<div class=\"card card-center col-10\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal()\">Novo barbeiro</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"card card-center col-10\">\n    <div class=\"card-body\">\n      <mat-form-field>\n        <mat-label>Buscar</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\">\n      </mat-form-field>\n      \n      <table mat-table [dataSource]=\"dataSource\" matSort>\n        <ng-container matColumnDef=\"id\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n          <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n        </ng-container>\n      \n        <ng-container matColumnDef=\"nome\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Nome</th>\n          <td mat-cell *matCellDef=\"let row\"> {{row.nome}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"fone\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Fone</th>\n          <td mat-cell *matCellDef=\"let row\"> {{row.fone}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>E-mail</th>\n          <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n          <td mat-cell *matCellDef=\"let row\">\n            <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"openModal(row.id)\">Editar</button>\n            <button type=\"button\" class=\"btn btn-danger btn-space\" (click)=\"delRowInTable(row.id)\">Apagar</button>\n          </td>\n        </ng-container>\n        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n        </tr>\n      </table>\n      <mat-card *ngIf=\"isLoading\" \n        style=\"display: flex; justify-content: center; align-items: center\">\n        <mat-progress-spinner \n          color=\"primary\" \n          mode=\"indeterminate\">\n        </mat-progress-spinner>\n      </mat-card>\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n    </div>\n</div>","import {Component, OnInit, Inject, Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Agendamento, AgendamentoService } from '../../../services/agendamento.service';\nimport { Cliente, ClienteService } from '../../../services/cliente.service';\nimport { Barbeiro, BarbeiroService } from '../../../services/barbeiro.service';\nimport {NgbDateStruct,NgbTimeStruct,NgbDate,NgbDateParserFormatter} from '@ng-bootstrap/ng-bootstrap';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {GlobalConstants} from '../../../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n/**\n * This Service handles how the date is rendered and parsed from keyboard i.e. in the bound input field.\n */\n@Injectable()\nexport class CustomDateParserFormatter extends NgbDateParserFormatter {\n  readonly DELIMITER = '-';\n  readonly DELIMITER_SHOW = '/';\n  readonly DELIMITER_TIME = ':';\n\n  parse(value: string): NgbDateStruct | null {\n    if (value) {\n      let date = value.split(this.DELIMITER);\n      return {\n        day : parseInt(date[2], 10),\n        month : parseInt(date[1], 10),\n        year : parseInt(date[0], 10)\n     };\n   }\n    return null;\n }\n\n  format(date: NgbDateStruct | null): string {\n    return date ? date.day + this.DELIMITER_SHOW + date.month + this.DELIMITER_SHOW + date.year : '';\n }\n}\n\n@Component({\n  selector: 'app-ce-agendamento',\n  templateUrl: './ce-agendamento.component.html',\n  styleUrls: ['./ce-agendamento.component.css'],\n  providers: [\n    {provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter}\n  ]\n})\nexport class CeAgendamentoComponent implements OnInit {\n\n  error:any;\n  fromDate:any;\n  fromTime:any;\n  tempClienteNome:string;\n\n  keyword = 'nome';\n  duedates:boolean = false;\n  \n  agendamento: Agendamento[]  = [\n      {\n        id:null,\n        descricao:'',\n        cliente_id:null,\n        barbeiro_id:null,\n        dataagendamento:null\n      }\n  ];\n\n  clientes: Cliente[];\n  barbeiros: Barbeiro[];\n\n  config = {\n    format: \"DD/MM/YYYY HH:mm\"\n  };\n\n  servicos: any[] = [\n    { nome: 'BARBA' },\n    { nome: 'CABELO' },\n    { nome: 'BARBA+CABELO' }\n  ]\n\n  modo:any;\n  isLoadingResult:boolean;\n\n  constructor(\n    public dialogRef: MatDialogRef<CeAgendamentoComponent>,\n    private AgendamentoService: AgendamentoService,\n    private ClienteService: ClienteService,\n    private BarbeiroService: BarbeiroService,\n    private _http: HttpClient,\n    public formatter: NgbDateParserFormatter,\n    @Inject(MAT_DIALOG_DATA) data) {\n      if ( data.id != null ) {\n        this.modo = 'Editar'\n\n        let formID = {\n          id:data.id\n        }\n        this._http.post(API_URL + '/agendamentos/find', formID).subscribe(\n          (agendamento: any[]) => {\n            this.agendamento = [];\n            for(let p of agendamento) {\n              let c = p.cliente;\n              this.tempClienteNome = c.nome\n              this.fromDate = NgbDate.from(this.formatter.parse(p.dataagendamento))\n              this.fromTime = this.parseTime(p.dataagendamento.substr(11,5))\n\n              this.agendamento.push(p);\n            }\n          }\n        )\n      } else {\n        this.modo = 'Novo'\n      }\n    }\n\n  ngOnInit(): void {\n    this.getClientes();\n    this.getBarbeiros();\n  }\n\n  parseTime(value: string): NgbTimeStruct | null {\n      if (value) {\n        let time = value.split(':');\n        return {\n          hour : parseInt(time[0], 10)\n          ,minute : parseInt(time[1], 10)\n          ,second : 0\n      };\n    }\n  }\n\n  getAgendamento(value?:any) {\n    this.AgendamentoService\n        .getAgendamentos(value)\n        .subscribe(\n            agendamento => this.agendamento = agendamento,\n            error => this.handleError(error)\n        );\n  }\n\n  postAgendamento(value?:any) {\n    this.AgendamentoService\n        .postAgendamento(value)\n        .subscribe(\n            agendamento => {\n              this.dialogRef.close(agendamento);\n            },\n            error => {\n              this.handleError(error)\n            }\n        );\n  }\n\n  getClientes() {\n    this.ClienteService\n        .getClientes()\n        .subscribe(\n            clientes => this.clientes = clientes,\n            error => this.error = <any>error\n        );\n  }\n\n  getBarbeiros() {\n    this.BarbeiroService\n        .getBarbeiros()\n        .subscribe(\n            barbeiros => this.barbeiros = barbeiros,\n            error => this.error = <any>error\n        );\n  }\n\n  pad(num:number, size:number): string {\n      let s = num+\"\";\n      while (s.length < size) s = \"0\" + s;\n      return s;\n  }\n  \n  onSubmit() {\n    let tempData:any;\n\n    for(let d of Object.keys(this.fromDate) ) {\n      if ( d === \"year\" ) {\n        tempData = this.fromDate[d]\n      }\n      if ( d === \"month\" ) {\n        tempData += '-'+this.fromDate[d]\n      }\n      if ( d === \"day\" ) {\n        tempData += '-'+this.fromDate[d]\n      }\n    }\n\n    if ( this.fromDate && this.fromTime ) {\n      this.agendamento[0].dataagendamento = new Date(tempData + ' ' + this.pad(this.fromTime.hour,2) + ':' + this.pad(this.fromTime.minute,2))\n    } else {\n      this.agendamento[0].dataagendamento = null\n    }\n    this.error = null;\n    this.postAgendamento(this.agendamento[0]);\n  }\n  \n  cancelar() {\n    this.dialogRef.close(null);\n  }\n\n  handleError(error) {\n    this.error = '<table>'; \n    for(let e of Object.keys(error.error.errors) ) {\n      this.error += \"<tr><td><div class='alert alert-danger'>\"+error.error.errors[e][0]+\"</div></td></tr>\";\n    }\n    this.error += '<table>';\n  }\n\n  getServerResponseClientes(event) {\n    this.isLoadingResult = true;\n    this.ClienteService.getBuscaClientes(event).subscribe(\n      data => { \n        if (data[0]['nome'] == undefined) {\n          this.clientes = []\n        } else {\n          this.clientes = data\n        }\n        this.isLoadingResult = false;\n      })\n  }\n\n  searchClearedClientes() {\n    this.agendamento[0].cliente_id = 0;\n    this.clientes = [];\n  }\n\n  selectEvent(item) {\n    if (item) {\n      let id_cliente = item.id\n      this.agendamento[0].cliente_id = id_cliente\n    }\n  }\n}\n","<div class=\"modal-header\">\n    <h5 class=\"modal-title\">{{modo}}</h5>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"cancelar()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <form #agendamentosForm=ngForm (ngSubmit)=\"onSubmit()\">\n        <div class=\"container\">                 \n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>Cliente</label>  \n                    <div class=\"ng-autocomplete\">\n                        <ng-autocomplete\n                            name=\"tempClienteNome\"\n                            required\n                            [(ngModel)]=\"tempClienteNome\"\n                            [data]=\"clientes\"\n                            [searchKeyword]=\"keyword\"\n                            placeHolder=\"Digite o nome do cliente\"\n                            (selected)='selectEvent($event)'\n                            (closed)='selectEvent($event)'\n                            minQueryLength=\"2\"\n                            (inputChanged)='getServerResponseClientes($event)' \n                            (inputCleared)='searchClearedClientes()'\n                            [isLoading]=\"isLoadingResult\" \n                            [itemTemplate]=\"itemTemplate\"\n                            [notFoundTemplate]=\"notFoundTemplate\">\n                        </ng-autocomplete>\n                        \n                        <ng-template #itemTemplate let-item>\n                            <a [innerHTML]=\"item.nome\"></a>\n                        </ng-template>\n                        \n                        <ng-template #notFoundTemplate let-notFound><div style=\"color:black;padding:10px;\">Cliente não encontrado.</div></ng-template>\n                    </div>\n                </div>\n            </div>           \n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>Barbeiros</label>\n                    <select class=\"custom-select\" name=\"barbeiro_id\" required [(ngModel)]=\"agendamento[0].barbeiro_id\">\n                        <option *ngFor=\"let b of barbeiros\" [value]=\"b.id\">{{b.nome}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>Serviços:</label>\n                    <select class=\"custom-select\" name=\"descricao\" required [(ngModel)]=\"agendamento[0].descricao\">\n                        <option *ngFor=\"let s of servicos\" [value]=\"s.nome\">{{s.nome}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>Data:</label>\n                    <div class=\"input-group\">\n                      <input class=\"form-control col-sm-5\" required autocomplete=\"off\" placeholder=\"Data\" name=\"dataagendamento\" \n                      [(ngModel)]=\"fromDate\" [value]=\"formatter.format(fromDate)\" ngbDatepicker #dataagendamento=\"ngbDatepicker\">\n                      <div class=\"input-group-append\">\n                        <button class=\"btn btn-outline-secondary\" (click)=\"dataagendamento.toggle()\" type=\"button\"><i class=\"far fa-calendar-alt\"></i></button>\n                      </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <label>Hora:</label>\n                <div class=\"form-group\">\n                    <ngb-timepicker name=\"fromTime\" required [(ngModel)]=\"fromTime\" style=\"border-left:0;\"></ngb-timepicker>\n                    \n                    <!--<input class=\"form-control col-sm-10\" name=\"dataagendamento\" autocomplete=\"off\" required [(ngModel)]=\"agendamento[0].dataagendamento\" mode=\"daytime\" [dpDayPicker]=\"config\" />-->\n                </div>\n            </div>\n            <div class=\"row\" [innerHtml]=\"error\" [hidden]=\"!error\"></div>\n        </div>\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"onSubmit()\">Salvar</button>\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import {Component, OnInit, Inject} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BarbeiroService, Barbeiro} from 'src/app/services/barbeiro.service';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {GlobalConstants} from '../../../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n@Component({\n  selector: 'app-ce-barbeiro',\n  templateUrl: './ce-barbeiro.component.html',\n  styleUrls: ['./ce-barbeiro.component.css']\n})\nexport class CeBarbeiroComponent implements OnInit {\n\n  barbeiro: Barbeiro[]  = [\n    {\n      id:null,\n      nome:null,\n      fone:null,\n      email:null\n    }\n  ];\n\n  error:any;\n  modo:any;\n\n  constructor(\n    public dialogRef: MatDialogRef<CeBarbeiroComponent>,\n    private BarbeiroService: BarbeiroService,\n    private _http: HttpClient,\n    @Inject(MAT_DIALOG_DATA) data) {\n      if ( data.id != null ) {\n        this.modo = 'Editar'\n\n        let formID = {\n          id:data.id\n        }\n        this._http.post(API_URL + '/barbeiro/edit', formID).subscribe(\n          (barbeiro: Barbeiro[]) => {\n            this.barbeiro = barbeiro\n          }\n        )\n      } else {\n        this.modo = 'Novo'\n      }\n    }\n\n  ngOnInit(): void {\n  }\n\n  cancelar() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    this.error = null;\n    this.post(this.barbeiro[0]);\n  }\n  \n  post(value?:any) {\n    this.BarbeiroService\n        .post(value)\n        .subscribe(\n            barbeiro => {\n              this.dialogRef.close(barbeiro);\n            },\n            error => {\n              this.handleError(error)\n            }\n        );\n   }\n\n  handleError(error:any) {\n    this.error = '<table>'; \n    for(let e of Object.keys(error.error.errors) ) {\n      this.error += \"<tr><td><div class='alert alert-danger'>\"+error.error.errors[e][0]+\"</div></td></tr>\";\n    }\n    this.error += '<table>';\n  }\n}\n","<div class=\"modal-header\">\n    <h5 class=\"modal-title\">{{modo}}</h5>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"cancelar()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n\n\n<div class=\"modal-body\">\n    <form #barbeiroForm=ngForm (ngSubmit)=\"onSubmit()\">\n        <div class=\"container\">                 \n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>Barbeiro</label>\n                    <input type=\"text\" class=\"form-control\" required name=\"nome\" [(ngModel)]=\"barbeiro[0].nome\">\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>Fone</label>\n                    <input type=\"tel\" class=\"form-control\" required name=\"fone\" [(ngModel)]=\"barbeiro[0].fone\">\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>E-mail</label>\n                    <input type=\"email\" class=\"form-control\" required name=\"email\" [(ngModel)]=\"barbeiro[0].email\">\n                </div>\n            </div>\n            <div class=\"row\" [innerHtml]=\"error\" [hidden]=\"!error\"></div>\n        </div>\n    </form>\n</div>\n\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"onSubmit()\">Salvar</button>\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import {Component, OnInit, Inject} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Cliente,Endereco,ClienteService} from 'src/app/services/cliente.service';\nimport {Uf, UfService} from '../../../services/uf.service';\nimport {Municipio, MunicipioService} from '../../../services/municipio.service';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {GlobalConstants} from '../../../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n@Component({\n  selector: 'app-ce-cliente',\n  templateUrl: './ce-cliente.component.html',\n  styleUrls: ['./ce-cliente.component.css']\n})\nexport class CeClienteComponent implements OnInit {\n\n  cliente: Cliente[]  = [\n    {\n      id:null,\n      nome:null,\n      sobrenome:null,\n      apelido:null,\n      cpf:null,\n      fone1:null,\n      fone2:null,\n      email:null\n    }\n  ];\n\n  endereco: Endereco[]  = [\n    {\n      id:null,\n      logradouro: null,\n      numero: null,\n      complemento: null,\n      bairro: null,\n      municipio_id: null,\n      cep: null\n    }\n  ];\n  \n  ufs: Uf[];\n  municipios: Municipio[];\n\n  uf:number;\n  municipio:number;\n\n  error:any;\n  panelOpenState = false;\n\n  modo:string;\n\n  constructor(\n    public dialogRef: MatDialogRef<CeClienteComponent>,\n    private ClienteService: ClienteService\n    ,private UfService: UfService\n    ,private MunicipiosService: MunicipioService\n    ,private _http: HttpClient\n    ,@Inject(MAT_DIALOG_DATA) data) {\n      if ( data.id != null ) {\n        this.modo = 'Editar'\n        \n        let formID = {\n          id:data.id\n        }\n        \n        this._http.post(API_URL + '/cliente/edit', formID).subscribe(\n          (cliente: Cliente[]) => {\n            this.cliente  = cliente\n            \n            if ( cliente[0]['endereco_id']) {\n              this.endereco = [\n                {\n                  id:cliente[0]['endereco_id'],\n                  logradouro: cliente[0]['logradouro'],\n                  numero: cliente[0]['numero'],\n                  complemento: cliente[0]['complemento'],\n                  bairro: cliente[0]['bairro'],\n                  municipio_id: cliente[0]['municipio_id'],\n                  cep: cliente[0]['cep']\n                }\n              ]\n              this.uf = cliente[0]['uf_id'];\n              this.municipio = cliente[0]['municipio_id'];\n              if ( this.uf ) {\n                this.selectMunicipio(this.uf)\n              }\n            }\n          }\n        )\n\n      } else {\n        this.modo = 'Novo'\n      }\n    }\n\n  ngOnInit(): void {\n    this.ufs        = this.UfService.ufs;\n  }\n\n  selectMunicipio(uf_id:number) {\n    if ( uf_id ) { \n      this.municipios = [\n        {\n          id:0\n          ,nome:'Carregando...'\n        }\n      ];\n\n      this.MunicipiosService\n        .getMunicipios(uf_id)\n        .subscribe(\n            municipios => this.municipios = municipios,\n            error => this.handleError(error)\n        );\n    } else {\n      this.municipios = null;\n    }\n  }\n\n\n  cancelar() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    this.error = null;\n\n    this.cliente[0]['logradouro'] = this.endereco[0]['logradouro']\n    this.cliente[0]['numero'] = this.endereco[0]['numero']\n    this.cliente[0]['complemento'] = this.endereco[0]['complemento']\n    this.cliente[0]['bairro'] = this.endereco[0]['bairro']\n    this.cliente[0]['municipio_id'] = this.municipio\n    this.cliente[0]['cep'] = this.endereco[0]['cep']\n    this.cliente[0]['uf_id'] = this.uf\n    \n    this.cliente[0]['modo'] = this.modo\n\n    this.post(this.cliente[0]);\n  }\n  \n  post(value?:any) {\n    this.ClienteService\n        .post(value)\n        .subscribe(\n            data => {\n              this.dialogRef.close(data);\n            },\n            error => {\n              this.handleError(error)\n            }\n        );\n   }\n\n  handleError(error:any) {\n    this.error = '<table>'; \n    for(let e of Object.keys(error.error.errors) ) {\n      this.error += \"<tr><td><div class='alert alert-danger'>\"+error.error.errors[e][0]+\"</div></td></tr>\";\n    }\n    this.error += '<table>';\n  }\n\n}\n","<div class=\"modal-header\">\n    <h5 class=\"modal-title\">{{modo}}</h5>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"cancelar()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n\n\n<div class=\"modal-body\">\n    <form #barbeiroForm=ngForm (ngSubmit)=\"onSubmit()\">\n        <mat-tab-group dynamicHeight>\n            <mat-tab label=\"Perfil\">\n              <div class=\"tap-large-box mat-elevation-z4\">\n                <div class=\"container\">                 \n                    <div class=\"row\">\n                        <div class=\"form-group\">\n                            <label>Nome</label>\n                            <input type=\"text\" class=\"form-control\" required name=\"nome\" [(ngModel)]=\"cliente[0].nome\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Sobrenome</label>\n                            <input type=\"text\" class=\"form-control\" name=\"sobrenome\" [(ngModel)]=\"cliente[0].sobrenome\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group\">\n                            <label>CPF</label>\n                            <input type=\"text\" class=\"form-control\" name=\"cpf\" [(ngModel)]=\"cliente[0].cpf\" mask=\"000.000.000-00\" >\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group\">\n                            <label>Fone 1</label>\n                            <input type=\"text\" class=\"form-control\" name=\"fone1\" [(ngModel)]=\"cliente[0].fone1\" mask=\"(00) 00000-0000\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Fone 2</label>\n                            <input type=\"text\" class=\"form-control\" name=\"fone2\" [(ngModel)]=\"cliente[0].fone2\" mask=\"(00) 00000-0000\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group\">\n                            <label>E-mail</label>\n                            <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"cliente[0].email\">\n                        </div>\n                    </div>\n                </div>\n              </div>\n            </mat-tab>\n            <mat-tab label=\"Endereço\">\n              <div class=\"tap-large-box mat-elevation-z4\">\n                <div class=\"container\">                 \n                    <div class=\"row\">\n                        <div class=\"form-group\">\n                            <label>Rua</label>\n                            <input type=\"text\" class=\"form-control\" name=\"logradouro\" [(ngModel)]=\"endereco[0].logradouro\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Bairro</label>\n                            <input type=\"text\" class=\"form-control\" name=\"bairro\" [(ngModel)]=\"endereco[0].bairro\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Número</label>\n                            <input type=\"number\" class=\"form-control col-4\" name=\"numero\" [(ngModel)]=\"endereco[0].numero\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group\">\n                            <label>Compl.</label>\n                            <input type=\"text\" class=\"form-control\" name=\"complemento\" [(ngModel)]=\"endereco[0].complemento\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Cep</label>\n                            <input type=\"text\" class=\"form-control col-6\" name=\"cep\" [(ngModel)]=\"endereco[0].cep\" mask=\"00000-000\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group\">\n                            <label>UF</label>\n                            <select class=\"custom-select\" name=\"uf\" [(ngModel)]=\"uf\" (change)=\"selectMunicipio($event.target.value)\">\n                                <option [value]=\"0\"></option>\n                                <option *ngFor=\"let uf of ufs\" [value]=\"uf.id\">{{uf.nome}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Município</label>\n                            <select class=\"custom-select\" name=\"municipio\" [(ngModel)]=\"municipio\">\n                                <option [value]=\"0\"></option>\n                                <option *ngFor=\"let m of municipios\" [value]=\"m.id\">{{m.nome}}</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n              </div>\n            </mat-tab>\n        </mat-tab-group>\n\n        <div class=\"row\" [innerHtml]=\"error\" [hidden]=\"!error\"></div>\n    </form>\n</div>\n\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"onSubmit()\">Salvar</button>\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import {Component, OnInit, Inject} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Usuario, UsuarioService} from '../../../services/usuario.service';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {GlobalConstants} from '../../../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n@Component({\n  selector: 'app-ce-usuario',\n  templateUrl: './ce-usuario.component.html',\n  styleUrls: ['./ce-usuario.component.css']\n})\nexport class CeUsuarioComponent implements OnInit {\n\n  usuario: Usuario[]  = [\n    {\n      id:null,\n      name:null,\n      email:null,\n      password:null\n    }\n  ];\n\n  public form = {\n    editPassword: null,\n    password_confirmation: null\n  };\n\n  error:any;\n  modo:any;\n\n  constructor(\n    public dialogRef: MatDialogRef<CeUsuarioComponent>,\n    private UsuarioService: UsuarioService,\n    private _http: HttpClient,\n    @Inject(MAT_DIALOG_DATA) data) {\n      if ( data.id != null ) {\n        this.modo = 'Editar'\n\n        let formID = {\n          id:data.id\n        }\n        this._http.post(API_URL + '/usuario/edit', formID).subscribe(\n          (usuario: Usuario[]) => {\n            this.usuario = usuario\n          }\n        )\n      } else {\n        this.modo = 'Novo'\n        this.form.editPassword = true\n      }\n    }\n\n  ngOnInit(): void {\n  }\n\n  cancelar() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    this.error = null;\n\n    this.usuario[0]['editPassword'] = this.form['editPassword'];\n    this.usuario[0]['password_confirmation'] = this.form['password_confirmation'];\n    this.post(this.usuario[0]);\n  }\n  \n  post(value?:any) {\n    this.UsuarioService\n        .post(value)\n        .subscribe(\n            data => {\n              this.dialogRef.close(data);\n            },\n            error => {\n              this.handleError(error)\n            }\n        );\n   }\n\n  handleError(error:any) {\n    this.error = '<table>'; \n    for(let e of Object.keys(error.error.errors) ) {\n      this.error += \"<tr><td><div class='alert alert-danger'>\"+error.error.errors[e][0]+\"</div></td></tr>\";\n    }\n    this.error += '<table>';\n  }\n}\n","<div class=\"modal-header\">\n    <h5 class=\"modal-title\">{{modo}}</h5>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"cancelar()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n\n\n<div class=\"modal-body\">\n    <form #barbeiroForm=ngForm (ngSubmit)=\"onSubmit()\">\n        <div class=\"container\">                 \n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>Usuário</label>\n                    <input type=\"text\" class=\"form-control\" required name=\"name\" [(ngModel)]=\"usuario[0].name\">\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>E-mail</label>\n                    <input type=\"email\" class=\"form-control\" required name=\"email\" [(ngModel)]=\"usuario[0].email\">\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"usuario[0].id\">\n                <div class=\"custom-control custom-checkbox\">\n                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"editPassword\" name=\"editPassword\" [(ngModel)]=\"form.editPassword\" [value]=\"true\">\n                    <label class=\"custom-control-label\" for=\"editPassword\">Mudar senha</label>\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"form.editPassword\">\n                <div class=\"form-group\">\n                    <label>Senha</label>\n                    <input type=\"password\" class=\"form-control\" required name=\"password\" [(ngModel)]=\"usuario[0].password\">\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"form.editPassword\">\n                <div class=\"form-group\">\n                    <label>Confirmação de Senha</label>\n                    <input type=\"password\" class=\"form-control\" required name=\"password_confirmation\" [(ngModel)]=\"form.password_confirmation\">\n                </div>\n            </div>\n            <div class=\"row\" [innerHtml]=\"error\" [hidden]=\"!error\"></div>\n        </div>\n    </form>\n</div>\n\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"onSubmit()\">Salvar</button>\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {Cliente, ClienteService} from '../../services/cliente.service';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {CeClienteComponent} from '../ce/ce-cliente/ce-cliente.component';\n\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html',\n  styleUrls: ['./cliente.component.css']\n})\nexport class ClienteComponent implements OnInit {\n  clientes: Cliente[];\n\n  displayedColumns: string[] = ['id', 'nome', 'fone', 'email', 'actions'];\n  dataSource: MatTableDataSource<Cliente>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  isLoading = true;\n\n  constructor(\n    private ClienteService: ClienteService\n    ,public dialog: MatDialog\n    ) { }\n\n  ngOnInit(): void {\n    this.ClienteService.getClientes()\n       .subscribe(\n        data => {\n          this.isLoading = false;\n          this.clientes = data;\n          // Assign the data to the data source for the table to render\n          this.dataSource =  new MatTableDataSource(this.clientes)\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        }, \n        error => this.isLoading = false\n    )\n  }\n\n  ngOnDestroy() {\n    this.clientes = null;\n  }\n\n  addRowInTable(data){\n    this.clientes.push(data[0]);\n    this.dataSource._updateChangeSubscription() \n  }\n  updateRowInTable(data) {\n    let i = this.clientes.findIndex((d) => d.id == data[0].id);\n    if (i>=0) {\n      this.clientes[i] = data[0] \n    }\n    this.dataSource._updateChangeSubscription()\n  }\n  delRowInTable(id) {\n    let i = this.clientes.findIndex((d) => d.id == id);\n    if (i>=0) {\n      this.clientes.splice(i,1)\n    }\n    this.dataSource._updateChangeSubscription()\n    this.ClienteService.apagar(id);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  openModal(id?:number) {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n        id: id\n    };\n\n    const dialogRef = this.dialog.open(CeClienteComponent,dialogConfig);\n    \n    dialogRef.afterClosed().subscribe(\n        (result) => {\n          if (result) {\n            if ( result[0].modo == 'editar' ) {\n              this.updateRowInTable(result);\n            } else {\n              this.addRowInTable(result);\n            }\n          }\n        }\n      )\n    }\n}\n","<div class=\"card card-center col-10\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal()\">Novo cliente</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"card card-center col-10\">\n    <div class=\"card-body\">\n        <mat-form-field>\n            <mat-label>Buscar</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\">\n        </mat-form-field>\n        \n        <table mat-table [dataSource]=\"dataSource\" matSort>\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n        </ng-container>\n        \n        <ng-container matColumnDef=\"nome\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Nome</th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.nome}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"fone\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Fone</th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.fone}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>E-mail</th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n            <td mat-cell *matCellDef=\"let row\">\n            <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"openModal(row.id)\">Editar</button>\n            <button type=\"button\" class=\"btn btn-danger btn-space\" (click)=\"delRowInTable(row.id)\">Apagar</button>\n            </td>\n        </ng-container>\n        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n        </tr>\n        </table>\n        <mat-card *ngIf=\"isLoading\" \n        style=\"display: flex; justify-content: center; align-items: center\">\n        <mat-progress-spinner \n            color=\"primary\" \n            mode=\"indeterminate\">\n        </mat-progress-spinner>\n        </mat-card>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { JarwisService } from '../../services/jarwis.service';\nimport { TokenService } from '../../services/token.service';\nimport { Router } from '@angular/router';\nimport {UsuarioService} from '../../services/usuario.service';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public form = {\n    email: null,\n    password: null\n  };\n\n  public error = null;\n\n  constructor(\n    private Jarwis: JarwisService,\n    private Token: TokenService,\n    private router: Router,\n    private Auth: AuthService,\n    private UsuarioService: UsuarioService\n  ) { }\n\n  onSubmit() {\n    this.Jarwis.login(this.form).subscribe(\n      data => this.handleResponse(data),\n      error => this.handleError(error)\n    );\n  }\n\n  handleResponse(data) {\n    this.Token.handle(data.access_token);\n    this.Auth.changeAuthStatus(true);\n    this.UsuarioService.me()\n    this.router.navigateByUrl('/agendamentos');\n  }\n\n  handleError(error) {\n    this.error = error.error.error;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"mt-4 col-8 offset-2\">\n  <div class=\"card\">\n    <div class=\"card-header\">Entre aqui</div>\n    <div class=\"card-body\">\n      <form #loginForm=ngForm (ngSubmit)=\"onSubmit()\">\n\n        <div class=\"alert alert-danger\" [hidden]=\"!error\">\n          {{error}}\n        </div>\n        <div class=\"form-group row\">\n          <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Email</label>\n          <div class=\"col-sm-10\">\n            <input type=\"email\" name=\"email\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Email\" [(ngModel)]=\"form.email\" required>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">Senha</label>\n          <div class=\"col-sm-10\">\n            <input type=\"password\" name=\"password\" class=\"form-control\" id=\"inputPassword3\" placeholder=\"Password\" [(ngModel)]=\"form.password\"\n              required>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-sm-10 offset-2\">\n\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!loginForm.valid\">Entrar</button>\n\n            <!--<a routerLink=\"/signup\" class=\"btn btn-info float-right\">Cadastre-se</a>-->\n\n          </div>\n        </div>\n        <small class=float-right>\n          <a routerLink=\"/request-password-reset\">Esqueci minha senha</a>\n        </small>\n      </form>\n    </div>\n  </div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {JarwisService} from '../../services/jarwis.service';\nimport {TokenService } from '../../services/token.service';\n//import {Usuario,UsuarioService} from '../../services/usuario.service';\nimport { SnotifyService } from 'ng-snotify';\nimport {GlobalConstants} from '../../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  \n  public loggedIn: boolean;\n  collapsed = true;\n  \n  //userLogged: Usuario[] = [];\n\n  constructor(\n    private Auth: AuthService,\n    private router: Router,\n    private Jarwis: JarwisService,\n    private Token: TokenService,\n    //private UsuarioService: UsuarioService,\n    private Notfiy:SnotifyService\n  ) {}\n\n  ngOnInit() {\n    this.Auth.authStatus.subscribe(value => this.loggedIn = value);\n    \n    /*if (this.loggedIn) {\n      this.userLogged = this.UsuarioService.userLogged\n    }*/\n  }\n\n  logout(event: MouseEvent) {\n    this.Jarwis.logout();\n    event.preventDefault();\n    this.Token.remove();\n    this.Auth.changeAuthStatus(false);\n    this.Notfiy.clear()\n    this.router.navigateByUrl('/login');\n  }\n}","<!--<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">BarbeariaClub</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/agendamentos']\" [routerLinkActive]=\"['active']\" routerLink=\"agendamentos\" *ngIf=\"loggedIn\">Agendamentos</a>\n      </li>\n      <li class=\"nav-item\" [routerLink]=\"['/barbeiros']\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" routerLink=\"barbeiros\" *ngIf=\"loggedIn\">Barbeiros</a>\n      </li>\n      <li class=\"nav-item\" [routerLink]=\"['/clientes']\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" routerLink=\"clientes\" *ngIf=\"loggedIn\">Clientes</a>\n      </li>\n      \n      \n\n    </ul>\n  </div>\n</nav>-->\n\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" [routerLink]=\"['/agendamentos']\">BarbeariaClub</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/agendamentos']\" [routerLinkActive]=\"['active']\" routerLink=\"agendamentos\" *ngIf=\"loggedIn\">Agendamentos</a>\n      </li>\n      <li class=\"nav-item\" [routerLink]=\"['/barbeiros']\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" routerLink=\"/barbeiros\" *ngIf=\"loggedIn\">Barbeiros</a>\n      </li>\n      <li class=\"nav-item\" [routerLink]=\"['/clientes']\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" routerLink=\"/clientes\" *ngIf=\"loggedIn\">Clientes</a>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"navbar-collapse\" [class.collapse]=\"collapsed\" id=\"navbarContent\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li *ngIf=\"!loggedIn\">\n        <div>\n          <a class=\"nav-link\" [routerLink]=\"['/login']\" [routerLinkActive]=\"['active']\" routerLink=\"login\">Entrar</a>\n        </div>\n      </li>\n      <li *ngIf=\"loggedIn\" class=\"nav-item\" ngbDropdown display=\"dynamic\" placement=\"bottom-right\">\n        <a class=\"nav-link\" style=\"color:white;cursor: pointer\" ngbDropdownToggle id=\"navbarDropdown3\" role=\"button\">\n          Configurações\n        </a>\n        <div ngbDropdownMenu aria-labelledby=\"navbarDropdown3\" class=\"dropdown-menu\">\n          <a ngbDropdownItem [routerLink]=\"['/usuarios']\" [routerLinkActive]=\"['active']\" routerLink=\"/usuarios\">Usuários</a>\n          <a ngbDropdownItem href=\"#\" (click)=\"logout($event)\">Sair</a>\n        </div>\n      </li>\n    </ul>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { JarwisService } from '../../../services/jarwis.service';\nimport { SnotifyService } from 'ng-snotify';\n\n@Component({\n  selector: 'app-request-reset',\n  templateUrl: './request-reset.component.html',\n  styleUrls: ['./request-reset.component.css']\n})\nexport class RequestResetComponent implements OnInit {\n  public form = {\n    email: null\n  };\n\n\n  constructor(\n    private Jarvis: JarwisService,\n    private notify: SnotifyService,\n    private Notfiy:SnotifyService\n  ) { }\n\n  ngOnInit() {\n  }\n\n\n  onSubmit() {\n    this.Notfiy.info('Wait...' ,{timeout:5000})\n    this.Jarvis.sendPasswordResetLink(this.form).subscribe(\n      data => this.handleResponse(data),\n      error => this.notify.error(error.error.error)\n    );\n  }\n\n  handleResponse(res) {\n    this.Notfiy.success(res.data,{timeout:0});\n    this.form.email = null;\n  }\n\n}","<div class=\"mt-4 col-8 offset-2\">\n<div class=\"card\">\n    <div class=\"card-header\">Enviar email para redefinir senha</div>\n    <div class=\"card-body\">\n    <form #RequestResetForm=ngForm (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group row\">\n        <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">E-mail</label>\n        <div class=\"col-sm-10\">\n            <input type=\"email\" name=\"email\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Email\" [(ngModel)]=\"form.email\" required>\n        </div>\n        </div>\n\n        <div class=\"form-group row\">\n        <div class=\"col-sm-10 offset-2\">\n\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!RequestResetForm.valid\">Solicitar</button>\n\n        </div>\n        </div>\n    </form>\n    </div>\n</div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {JarwisService} from '../../../services/jarwis.service';\nimport {SnotifyService} from 'ng-snotify';\n\n@Component({\n  selector: 'app-response-reset',\n  templateUrl: './response-reset.component.html',\n  styleUrls: ['./response-reset.component.css']\n})\nexport class ResponseResetComponent implements OnInit {\n  public error:any=[];\n  public form = {\n    email : null,\n    password : null,\n    password_confirmation:null,\n    resetToken :null\n  }\n  constructor(\n    private route:ActivatedRoute,\n    private Jarwis: JarwisService,\n    private router:Router,\n    private Notify:SnotifyService\n  ) { \n    route.queryParams.subscribe(params => {\n      this.form.resetToken = params['token']\n    });\n  }\n\n  onSubmit(){\n   this.Jarwis.changePassword(this.form).subscribe(\n     data => this.handleResponse(data),\n     error => this.handleError(error)\n   )\n  }\n  handleResponse(data){\n\n    let _router = this.router;\n    this.Notify.confirm('Done!, Now login with new Password', {\n      buttons:[\n        {text: 'Okay', \n        action: toster =>{\n           _router.navigateByUrl('/login'),\n           this.Notify.remove(toster.id)\n          }\n      },\n      ]\n    })\n    \n  }\n\n  handleError(error){\n    this.error = error.error.errors;\n  }\n  ngOnInit() {\n  }\n\n}","<div class=\"mt-4 col-8 offset-2\">\n    <div class=\"card\">\n      <div class=\"card-header\">Redefinir senha</div>\n      <div class=\"card-body\">\n        <form #ResetPasswordForm=ngForm (ngSubmit)=\"onSubmit()\">\n  \n          <div class=\"form-group row\">\n            <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">E-mail</label>\n            <div class=\"col-sm-10\">\n              <input type=\"email\" name=\"email\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Email\" [(ngModel)]=\"form.email\" required>\n              <span class=\"text-danger\" [hidden]=\"!error.email\">{{error.email}}</span>\n            </div>\n          </div>\n  \n          <div class=\"form-group row\">\n            <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">Senha</label>\n            <div class=\"col-sm-10\">\n              <input type=\"password\" name=\"password\" class=\"form-control\" id=\"inputPassword3\" placeholder=\"Password\" [(ngModel)]=\"form.password\"\n                required>\n                <span class=\"text-danger\" [hidden]=\"!error.password\">{{error.password}}</span>\n            </div>\n          </div>\n          \n          <div class=\"form-group row\">\n            <label for=\"inputPassword4\" class=\"col-sm-2 col-form-label\">Repita senha</label>\n            <div class=\"col-sm-10\">\n              <input type=\"password\" name=\"password_confirmation\" class=\"form-control\" id=\"inputPassword4\" placeholder=\"Confirm Password\" [(ngModel)]=\"form.password_confirmation\"\n                required>\n                <span class=\"text-danger\" [hidden]=\"!error.password_confirmation\">{{error.password_confirmation}}</span>\n            </div>\n          </div>\n  \n          <div class=\"form-group row\">\n            <div class=\"col-sm-10 offset-2\">\n  \n              <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!ResetPasswordForm.valid\">Confirmar</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { JarwisService } from '../../services/jarwis.service';\nimport { TokenService } from '../../services/token.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  public form = {\n    email: null,\n    name: null,\n    password: null,\n    password_confirmation: null\n  };\n  public error:any = [];\n\n  constructor(\n    private Jarwis: JarwisService,\n    private Token: TokenService,\n    private router: Router\n  ) { }\n\n  onSubmit() {\n    this.Jarwis.signup(this.form).subscribe(\n      data => this.handleResponse(data),\n      error => this.handleError(error)\n    );\n  }\n  handleResponse(data) {\n    this.Token.handle(data.access_token);\n    this.router.navigateByUrl('/agendamentos');\n  }\n\n  handleError(error) {\n    this.error = error.error.errors;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"mt-4 col-8 offset-2\">\n  <div class=\"card\">\n    <div class=\"card-header\">Register Here</div>\n    <div class=\"card-body\">\n      <form #signupForm=ngForm (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group row\">\n          <label for=\"inputName3\" class=\"col-sm-2 col-form-label\">Name</label>\n          <div class=\"col-sm-10\">\n            <input type=\"text\" name=\"name\" class=\"form-control\" id=\"inputname3\" placeholder=\"Name\" [(ngModel)]=\"form.name\" required>\n            <div class=\"alert alert-danger\" [hidden]=\"!error.name\">\n              {{error.name}}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Email</label>\n          <div class=\"col-sm-10\">\n            <input type=\"email\" name=\"email\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Email\" [(ngModel)]=\"form.email\" required>\n            <div class=\"alert alert-danger\" [hidden]=\"!error.email\">\n              {{error.email}}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"inputPasswordConfirmation3\" class=\"col-sm-2 col-form-label\">Password</label>\n          <div class=\"col-sm-10\">\n            <input type=\"password\" name=\"password\" class=\"form-control\" id=\"inputPasswordConfirmation3\" placeholder=\"Confirm Password\"\n              [(ngModel)]=\"form.password\" required>\n            <div class=\"alert alert-danger\" [hidden]=\"!error.password\">\n              {{error.password}}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">Confirm Password</label>\n          <div class=\"col-sm-10\">\n            <input type=\"password\" name=\"password_confirmation\" class=\"form-control\" id=\"inputPassword3\" placeholder=\"Password\" [(ngModel)]=\"form.password_confirmation\"\n              required>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-sm-10 offset-2\">\n\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!signupForm.valid\">Sign Up</button>\n\n            <a routerLink=\"/login\" class=\"btn btn-info float-right\">Sign in</a>\n\n          </div>\n        </div>\n\n      </form>\n    </div>\n  </div>\n</div>","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Usuario, UsuarioService} from '../../services/usuario.service';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {CeUsuarioComponent} from '../ce/ce-usuario/ce-usuario.component';\n\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent implements OnInit {\n\n  usuarios: Usuario[];\n\n  displayedColumns: string[] = ['id', 'nome', 'email', 'actions'];\n  dataSource: MatTableDataSource<Usuario>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  isLoading = true;\n\n  constructor(\n    private UsuarioService: UsuarioService\n    ,public dialog: MatDialog\n    ) { }\n\n  ngOnInit(): void {\n    this.UsuarioService.getUsuarios()\n       .subscribe(\n        data => {\n          this.isLoading = false;\n          this.usuarios = data;\n          // Assign the data to the data source for the table to render\n          this.dataSource =  new MatTableDataSource(this.usuarios)\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        }, \n        error => this.isLoading = false\n    )\n  }\n  ngOnDestroy() {\n    this.usuarios = null;\n  }\n\n  addRowInTable(data){\n    this.usuarios.push(data[0]);\n    this.dataSource._updateChangeSubscription() \n  }\n  updateRowInTable(data) {\n    let i = this.usuarios.findIndex((d) => d.id == data[0].id);\n    if (i>=0) {\n      this.usuarios[i] = data[0] \n    }\n    this.dataSource._updateChangeSubscription()\n  }\n  delRowInTable(id) {\n    let i = this.usuarios.findIndex((d) => d.id == id);\n    if (i>=0) {\n      this.usuarios.splice(i,1)\n    }\n    this.dataSource._updateChangeSubscription()\n    this.UsuarioService.apagar(id);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  openModal(id?:number) {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n        id: id\n    };\n\n    const dialogRef = this.dialog.open(CeUsuarioComponent,dialogConfig);\n    \n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          if ( result[0].modo == 'editar' ) {\n            this.updateRowInTable(result);\n          } else {\n            this.addRowInTable(result);\n          }\n        }\n      }\n      );\n    }\n\n  apagar(id:number) {\n    this.UsuarioService.apagar(id);\n  }\n}\n","<div class=\"card card-center col-10\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal()\">Novo usuario</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"card card-center col-10\">\n    <div class=\"card-body\">\n        <mat-form-field>\n            <mat-label>Buscar</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\">\n        </mat-form-field>\n        \n        <table mat-table [dataSource]=\"dataSource\" matSort>\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n        </ng-container>\n        \n        <ng-container matColumnDef=\"nome\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Nome</th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>E-mail</th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n            <td mat-cell *matCellDef=\"let row\">\n            <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"openModal(row.id)\">Editar</button>\n            <button type=\"button\" class=\"btn btn-danger btn-space\" (click)=\"delRowInTable(row.id)\">Apagar</button>\n            </td>\n        </ng-container>\n        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n        </tr>\n        </table>\n        <mat-card *ngIf=\"isLoading\" \n        style=\"display: flex; justify-content: center; align-items: center\">\n        <mat-progress-spinner \n            color=\"primary\" \n            mode=\"indeterminate\">\n        </mat-progress-spinner>\n        </mat-card>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n    </div>\n</div>","export class GlobalConstants {\n    public static API_URL: string = 'http://barbeariaclub.local/api';\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AfterLoginService implements CanActivate {\n\n  constructor(private Token: TokenService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\n    return this.Token.loggedIn();\n  }\n}","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {map, catchError} from 'rxjs/operators';\nimport { SnotifyService } from 'ng-snotify';\nimport {GlobalConstants} from '../global-constants';\n\nexport interface Agendamento {\n  id: number,\n  descricao: string,\n  dataagendamento: Date,\n  cliente_id: number,\n  barbeiro_id: number,\n  empresa_id?: number,\n  user_id?: number\n}\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgendamentoService {\n\n  public agendamentos: Agendamento[] = [];\n  public NotifyAgendamentos: Agendamento[] = [];\n  public res:any;\n\n  constructor(\n    private _http: HttpClient,\n    private Notfiy:SnotifyService\n    ) {\n      this.getNotifyAgendamentos()\n  }\n\n  getNotifyAgendamentos(): void {\n    let tempForm = {\n      tempo:6\n    }\n\n    this._http.post(API_URL + '/agendamentos/find', tempForm).subscribe(\n      (data: any[]) => {\n        for(let d of data) {\n          //console.log(d.cliente.sobrenome.length)\n          let sobrenome:string = ''\n          let Fone2:string = ''\n\n          if ( d.cliente.sobrenome ) {\n            sobrenome = d.cliente.sobrenome.substr(0,6)\n            if ( d.cliente.sobrenome.length > 6 ) {\n              sobrenome += '...'\n            } \n          } else {\n            sobrenome = ''\n          }\n\n          if (Fone2) {\n            Fone2 = ' | '+'Fone 2: '+d.cliente.fone2\n          }\n          \n          this.Notfiy.confirm('Fone 1: '+d.cliente.fone1 + Fone2, d.cliente.nome + ' ' + sobrenome, {\n            showProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            buttons: [\n              {text: 'Fechar', action: (toast) => {this.Notfiy.remove(toast.id); }, bold: false},\n            ]\n          });\n        }\n      }\n    )\n  }\n\n  /*\n    * explanation of observable response object\n    * \n    * resData = {\n    *      data: <object>,\n    *      statusCode: <number>,\n    *      response: <jwres>,\n    *      error: <undefined>\n    * }\n    * \n    * error = {\n    *      data: null,\n    *      statusCode: <number>,\n    *      response: <jwres>,\n    *      error: <jwres.error>\n    * }\n    */\n\n  getAgendamentos(params?:any): Observable<Agendamento[]> {\n    return this._http.post(API_URL + '/agendamentos/find', params)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        return throwError(error);\n      })\n      \n      );\n  }\n\n  postAgendamento(agendamento): Observable<Agendamento[]> {\n    let tipoForm:string;\n\n    if ( agendamento.id == null ) {\n      tipoForm = 'new'\n    } else { \n      tipoForm = 'edit'\n      //delete agendamento['cliente'];\n    }\n\n    return this._http.post(API_URL + '/agendamento/'+tipoForm, agendamento)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        console.log(error)\n        return throwError(error);\n      })\n      \n      );\n  }\n  \n  apagar(id: number) {\n    this._http.delete(API_URL + '/agendamento/' + id).subscribe()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loggedIn = new BehaviorSubject<boolean>(this.Token.loggedIn());\n  authStatus = this.loggedIn.asObservable();\n\n  changeAuthStatus(value: boolean) {\n    this.loggedIn.next(value);\n  }\n\n  constructor(private Token: TokenService) { }\n}","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport {Observable, throwError} from 'rxjs';\nimport {map, catchError} from 'rxjs/operators';\nimport {GlobalConstants} from '../global-constants';\n\nexport interface Barbeiro {\n  id: string,\n  nome: string,\n  fone: string,\n  email: string\n}\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BarbeiroService {\n\n  constructor(private _http: HttpClient) {}\n\n  getBarbeiros(): Observable<Barbeiro[]> {\n    return this._http.post(API_URL + '/barbeiros',null)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        return throwError(error);\n      })\n      \n      );\n  }\n\n  post(barbeiro: Barbeiro): Observable<Barbeiro[]> {\n    let tipoForm:string;\n\n    if ( barbeiro.id == null ) {\n      tipoForm = 'store'\n    } else { \n      tipoForm = 'update'\n    }\n    \n    return this._http.post(API_URL + '/barbeiro/'+tipoForm, barbeiro)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        return throwError(error);\n      })\n      \n      );\n  }\n\n  apagar(id:number) {\n    this._http.delete(API_URL + '/barbeiro/' + id).subscribe()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BeforeLoginService implements CanActivate {\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\n    return !this.Token.loggedIn();\n  }\n  constructor(private Token: TokenService) { }\n\n}","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport {Observable, throwError} from 'rxjs';\nimport {map, catchError} from 'rxjs/operators';\nimport {GlobalConstants} from '../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\nexport interface Cliente {\n  id: number,\n  nome: string,\n  sobrenome: string,\n  apelido: string,\n  cpf: string,\n  fone1: string,\n  fone2: string,\n  email: string,\n}\n\nexport interface Endereco {\n  id: number,\n  logradouro: string,\n  numero: number,\n  complemento: string,\n  bairro: string,\n  municipio_id: number,\n  cep: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ClienteService {\n\n  public clientes: Cliente[] = [];\n  public res:any;\n\n  constructor(private _http: HttpClient) {}\n\n  getBuscaClientes(q): Observable<Cliente[]> {\n    return this._http.get(API_URL + '/clientes/buscar/'+q)\n    .pipe(\n        map((response: any) => {\n          return response; \n        }),\n        catchError(error => {\n          return throwError(error);\n        })\n      )\n  }\n\n  getClientes(): Observable<Cliente[]> {\n    return this._http.post(API_URL + '/clientes',null)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        return throwError(error);\n      })\n      \n      );\n  }\n\n  post(barbeiro: Cliente): Observable<Cliente[]> {\n    let tipoForm:string;\n\n    if ( barbeiro.id == null ) {\n      tipoForm = 'store'\n    } else { \n      tipoForm = 'update'\n    }\n    \n    return this._http.post(API_URL + '/cliente/'+tipoForm, barbeiro)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        console.log(error)\n        return throwError(error);\n      })\n      \n      );\n  }\n\n  apagar(id:any) {\n    this._http.delete(API_URL + '/cliente/' + id).subscribe()\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalConstants} from '../global-constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JarwisService {\n  private baseUrl:string = GlobalConstants.API_URL;\n\n  constructor(\n    private http: HttpClient,\n    private _http: HttpClient  \n  ) { }\n\n  signup(data) {\n    return this.http.post(`${this.baseUrl}/signup`, data)\n  }\n\n  login(data) {\n    return this.http.post(`${this.baseUrl}/login`, data)\n  }\n  \n  logout(): void {\n    this.http.post(`${this.baseUrl}/logout`, null).subscribe()\n  }\n\n  sendPasswordResetLink(data) {\n    return this.http.post(`${this.baseUrl}/sendPasswordResetLink`, data)\n  }\n  \n  changePassword(data) {\n    return this.http.post(`${this.baseUrl}/resetPassword`, data)\n  }\n}","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport {Observable, throwError} from 'rxjs';\nimport {map, catchError} from 'rxjs/operators';\nimport {GlobalConstants} from '../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\nexport interface Municipio {\n  id: number,\n  nome: string,\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MunicipioService {\n\n  public municipios: Municipio[] = [];\n\n  constructor(private _http: HttpClient) {}\n\n  getMunicipios(uf_id:any): Observable<Municipio[]> {\n    return this._http.get(API_URL + '/municipios/'+uf_id)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        return throwError(error);\n      })\n      \n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalConstants} from '../global-constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  private baseUrl:string = GlobalConstants.API_URL;\n\n  private iss = {\n    login: this.baseUrl+'/login',\n    signup: this.baseUrl+'/signup'\n  };\n\n  constructor(private _http: HttpClient ) { }\n  \n  \n  refreshToken() {\n    return this._http.post(`${this.baseUrl}/ufs`, null);\n  }\n\n  handle(token) {\n    this.set(token);\n  }\n\n  set(token) {\n    localStorage.setItem('token', token);\n  }\n  get() {\n    return localStorage.getItem('token');\n  }\n\n  remove() {\n    localStorage.removeItem('token');\n  }\n\n  isValid() {\n    const token = this.get();\n    if (token) {\n      const payload = this.payload(token);\n      if (payload) {\n        return Object.values(this.iss).indexOf(payload.iss) > -1 ? true : false;\n      }\n    }\n    return false;\n  }\n\n  payload(token) {\n    const payload = token.split('.')[1];\n    return this.decode(payload);\n  }\n\n  decode(payload) {\n    return JSON.parse(atob(payload));\n  }\n\n  loggedIn() {\n    return this.isValid();\n  }\n}","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport {GlobalConstants} from '../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\nexport interface Uf {\n  id: number,\n  nome: string,\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UfService {\n\n  public ufs: Uf[] = [];\n\n  constructor(\n    private _http: HttpClient\n  ) { \n    this._http.post(API_URL + '/ufs', null).subscribe(\n      (data: any[]) => {\n        for(let d of data) {\n          this.ufs.push(d);\n        }\n      }\n    )\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport {Observable, throwError} from 'rxjs';\nimport {map, catchError} from 'rxjs/operators';\nimport {GlobalConstants} from '../global-constants';\n\nexport interface Usuario {\n  id: string,\n  name: string,\n  email: string,\n  password: string\n}\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  public usuarios: Usuario[] = [];\n  public userLogged: Usuario[] = [];\n\n  constructor(private _http: HttpClient) {}\n  \n  me(): void { \n    this.userLogged = []\n    this._http.get(API_URL + '/me').subscribe(\n      (data: any[]) => {\n        this.userLogged.push(data['user'])\n      })\n  }\n\n  getUsuarios(): Observable<Usuario[]> {\n    return this._http.post(API_URL + '/usuarios',null)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        return throwError(error);\n      })\n      \n      );\n  }\n\n  post(usuario: Usuario): Observable<Usuario[]> {\n    let tipoForm:string;\n\n    if ( usuario.id == null ) {\n      tipoForm = 'store'\n    } else { \n      tipoForm = 'update'\n    }\n    \n    return this._http.post(API_URL + '/usuario/'+tipoForm, usuario)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        return throwError(error);\n      })\n      \n      );\n  }\n\n  apagar(id:any) {\n    this._http.delete(API_URL + '/usuario/' + id).subscribe();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}