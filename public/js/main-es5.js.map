{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth-interceptor.ts","webpack:///src/app/components/agendamento/agendamento.component.ts","webpack:///src/app/components/agendamento/agendamento.component.html","webpack:///src/app/components/barbeiro/barbeiro.component.ts","webpack:///src/app/components/barbeiro/barbeiro.component.html","webpack:///src/app/components/ce/ce-agendamento/ce-agendamento.component.ts","webpack:///src/app/components/ce/ce-agendamento/ce-agendamento.component.html","webpack:///src/app/components/ce/ce-barbeiro/ce-barbeiro.component.ts","webpack:///src/app/components/ce/ce-barbeiro/ce-barbeiro.component.html","webpack:///src/app/components/ce/ce-cliente/ce-cliente.component.ts","webpack:///src/app/components/ce/ce-cliente/ce-cliente.component.html","webpack:///src/app/components/ce/ce-usuario/ce-usuario.component.ts","webpack:///src/app/components/ce/ce-usuario/ce-usuario.component.html","webpack:///src/app/components/cliente/cliente.component.ts","webpack:///src/app/components/cliente/cliente.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/password/request-reset/request-reset.component.ts","webpack:///src/app/components/password/request-reset/request-reset.component.html","webpack:///src/app/components/password/response-reset/response-reset.component.ts","webpack:///src/app/components/password/response-reset/response-reset.component.html","webpack:///src/app/components/signup/signup.component.ts","webpack:///src/app/components/signup/signup.component.html","webpack:///src/app/components/usuario/usuario.component.ts","webpack:///src/app/components/usuario/usuario.component.html","webpack:///src/app/global-constants.ts","webpack:///src/app/services/after-login.service.ts","webpack:///src/app/services/agendamento.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/barbeiro.service.ts","webpack:///src/app/services/before-login.service.ts","webpack:///src/app/services/cliente.service.ts","webpack:///src/app/services/jarwis.service.ts","webpack:///src/app/services/municipio.service.ts","webpack:///src/app/services/token.service.ts","webpack:///src/app/services/uf.service.ts","webpack:///src/app/services/usuario.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","appRoutes","path","canActivate","children","component","AppRoutingModule","forRoot","imports","AppComponent","Auth","router","title","authStatus","subscribe","value","loggedIn","navigateByUrl","selector","templateUrl","styleUrls","options","AppModule","provide","useClass","multi","useValue","declarations","providers","bootstrap","AuthInterceptor","Token","dialogRef","baseUrl","API_URL","next","token","localStorage","getItem","clone","setHeaders","handle","err","status","console","log","remove","changeAuthStatus","closeAll","I18N_VALUES","weekdays","months","I18n","language","CustomDatepickerI18n","_i18n","weekday","month","getMonthShortName","date","day","year","CustomAdapter","DELIMITER","split","parseInt","CustomDateParserFormatter","AgendamentoComponent","AgendamentoService","ClienteService","BarbeiroService","calendar","formatter","dialog","config","format","tempo","nome","keyword","duedates","hoveredDate","form","cliente_id","barbeiro_id","dataInicial","dataFinal","CurrentDate","Date","toLocaleString","timeZone","displayedColumns","isLoading","getBarbeiros","data","barbeiros","getAgendamentos","agendamentos","dataSource","paginator","sort","start","error","clientes","event","isLoadingResult","getBuscaClientes","undefined","push","_updateChangeSubscription","i","findIndex","d","splice","apagar","filterValue","target","filter","trim","toLowerCase","firstPage","t","handleError","fromDate","toDate","c","errorMessage","Object","errors","after","before","equals","isInside","isHovered","currentValue","input","parsed","parse","isValid","from","dialogConfig","open","afterClosed","result","modo","updateRowInTable","addRowInTable","onSubmit","getServerResponseClientes","searchClearedClientes","onBoxDueDates","openModal","applyFilter","BarbeiroComponent","DELIMITER_SHOW","DELIMITER_TIME","CeAgendamentoComponent","_http","agendamento","descricao","dataagendamento","servicos","formID","post","p","cliente","tempClienteNome","fromTime","parseTime","substr","getClientes","time","hour","minute","second","postAgendamento","close","num","size","s","length","tempData","pad","item","id_cliente","cancelar","selectEvent","CeBarbeiroComponent","barbeiro","fone","email","CeClienteComponent","UfService","MunicipiosService","sobrenome","apelido","cpf","fone1","fone2","endereco","logradouro","numero","complemento","bairro","municipio_id","cep","panelOpenState","uf","municipio","selectMunicipio","ufs","uf_id","municipios","getMunicipios","password","CeUsuarioComponent","UsuarioService","usuario","name","editPassword","password_confirmation","ClienteComponent","LoginComponent","Jarwis","login","handleResponse","access_token","me","NavbarComponent","Notfiy","collapsed","logout","preventDefault","clear","RequestResetComponent","Jarvis","notify","info","timeout","sendPasswordResetLink","res","success","ResponseResetComponent","route","Notify","resetToken","queryParams","params","changePassword","_router","confirm","buttons","text","action","toster","SignupComponent","signup","UsuarioComponent","getUsuarios","usuarios","GlobalConstants","AfterLoginService","state","providedIn","NotifyAgendamentos","getNotifyAgendamentos","tempForm","Fone2","showProgressBar","closeOnClick","pauseOnHover","toast","bold","pipe","response","tipoForm","AuthService","asObservable","BeforeLoginService","q","get","JarwisService","http","MunicipioService","TokenService","iss","set","setItem","removeItem","payload","values","indexOf","decode","JSON","atob","userLogged","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAaA,QAAMC,SAAS,GAAW,CACxB;AAACC,UAAI,EAAE,EAAP;AAAWC,iBAAW,EAAC,CAAC,iFAAD,CAAvB;AAA6CC,cAAQ,EAAE,CACrD;AAAEF,YAAI,EAAG,EAAT;AAAaG,iBAAS,EAAE;AAAxB,OADqD,EAErD;AAAEH,YAAI,EAAG,OAAT;AAAkBG,iBAAS,EAAE;AAA7B,OAFqD,EAGrD;AAAEH,YAAI,EAAG,QAAT;AAAmBG,iBAAS,EAAG;AAA/B,OAHqD,EAIrD;AAAEH,YAAI,EAAG,wBAAT;AAAmCG,iBAAS,EAAE;AAA9C,OAJqD,EAKrD;AAAEH,YAAI,EAAG,yBAAT;AAAoCG,iBAAS,EAAE;AAA/C,OALqD;AAAvD,KADwB,EASxB;AAACH,UAAI,EAAE,EAAP;AAAWC,iBAAW,EAAC,CAAC,+EAAD,CAAvB;AAA4CC,cAAQ,EAAE,CACpD;AAAEF,YAAI,EAAG,cAAT;AAAyBG,iBAAS,EAAE;AAApC,OADoD,EAEpD;AAAEH,YAAI,EAAG,WAAT;AAAsBG,iBAAS,EAAG;AAAlC,OAFoD,EAGpD;AAAEH,YAAI,EAAG,UAAT;AAAqBG,iBAAS,EAAE;AAAhC,OAHoD,EAIpD;AAAEH,YAAI,EAAG,UAAT;AAAqBG,iBAAS,EAAE;AAAhC,OAJoD;AAAtD,KATwB,CAA1B;;QAwBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBANlB,CACP,6DAAaC,OAAb,CAAqBN,SAArB,CADO,CAEP;AAFO,OAMkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAP5B,sDAO4B;eAPnB;AACRE,iBAAO,EAAE,CACP,6DAAaD,OAAb,CAAqBN,SAArB,CADO,CAEP;AAFO,WADD;AAKRF,iBAAO,EAAE,CAAC,4DAAD;AALD,S;AAOmB,Q;;;;;;;;;;;;;;;;;;ACrC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaU,Y,GAKX,sBACUC,IADV,EAEUC,MAFV,EAEwB;AAAA;;AAAA;;AADd,WAAAD,IAAA,GAAAA,IAAA;AACA,WAAAC,MAAA,GAAAA,MAAA;AANV,WAAAC,KAAA,GAAQ,aAAR;AAQE,WAAKF,IAAL,CAAUG,UAAV,CAAqBC,SAArB,CAA+B,UAAAC,KAAK;AAAA,eAAI,KAAI,CAACC,QAAL,GAAgBD,KAApB;AAAA,OAApC;;AAEA,UAAI,KAAKC,QAAT,EAAmB;AACjB,aAAKL,MAAL,CAAYM,aAAZ,CAA0B,eAA1B;AACD;AAEF,K;;;uBAfUR,Y,EAAY,mI,EAAA,uH;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,gC;AAAA;AAAA;ACTzB;;AACA;;AACI;;AACJ;;AACA;;;;;;;;;sEDKaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTS,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;AETzkE,CAiCA;;;AAMO,QAAMC,OAAO,GAAgD,EAA7D,C,CAaP;AACA;;QA8DaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAtBT,CACT,gFADS,EAET,0EAFS,EAGT,uEAHS,EAIT,qEAJS,EAKT,mEALS,EAMT,gFANS,EAOT,kFAPS,EAQT,oFARS,EAST,CACE;AACCC,eAAO,EAAE,sEADV;AAECC,gBAAQ,EAAE,kEAFX;AAGCC,aAAK,EAAE;AAHR,OADF,CATS,EAgBT;AACA;AAACF,eAAO,EAAE,oBAAV;AAAgCG,gBAAQ,EAAE;AAA1C,OAjBS,EAkBT,0DAlBS,C;AAmBV,gBAvCQ,CACP,uEADO,EAEP,0DAFO,EAGP,qEAHO,EAIP,oEAJO,EAKP,yDALO,EAMP,8EANO,EAOP,qEAPO,EAQP,6FARO,EASP,yEATO,EAUP,+EAVO,EAWP,qEAXO,EAYP,uEAZO,EAaP,+EAbO,EAcP,qEAdO,EAeP,uEAfO,EAgBP,4FAhBO,EAiBP,qEAjBO,EAkBP,wDAAcnB,OAAd,CAAsBc,OAAtB,CAlBO,CAuCR;;;;0HAGUC,S,EAAS;AAAA,uBAzDlB,2DAyDkB,EAxDlB,gFAwDkB,EAvDlB,mFAuDkB,EAtDlB,iHAsDkB,EArDlB,oHAqDkB,EApDlB,oFAoDkB,EAnDlB,mGAmDkB,EAlDlB,0FAkDkB,EAjDlB,uFAiDkB,EAhDlB,8GAgDkB,EA/ClB,qGA+CkB,EA9ClB,kGA8CkB,EA7ClB,uFA6CkB,EA5ClB,kGA4CkB;AA5CA,kBAGlB,uEAHkB,EAIlB,0DAJkB,EAKlB,qEALkB,EAMlB,oEANkB,EAOlB,yDAPkB,EAQlB,8EARkB,EASlB,qEATkB,EAUlB,6FAVkB,EAWlB,yEAXkB,EAYlB,+EAZkB,EAalB,qEAbkB,EAclB,uEAdkB,EAelB,+EAfkB,EAgBlB,qEAhBkB,EAiBlB,uEAjBkB,EAkBlB,4FAlBkB,EAmBlB,qEAnBkB,EAmBL,uDAnBK;AA4CA,O;AAzBL,K;;;;;sEAyBJA,S,EAAS;cA3DrB,sDA2DqB;eA3DZ;AACRK,sBAAY,EAAE,CACZ,2DADY,EAEZ,gFAFY,EAGZ,mFAHY,EAIZ,iHAJY,EAKZ,oHALY,EAMZ,oFANY,EAOZ,mGAPY,EAQZ,0FARY,EASZ,uFATY,EAUZ,8GAVY,EAWZ,qGAXY,EAYZ,kGAZY,EAaZ,uFAbY,EAcZ,kGAdY,CADN;AAiBRnB,iBAAO,EAAE,CACP,uEADO,EAEP,0DAFO,EAGP,qEAHO,EAIP,oEAJO,EAKP,yDALO,EAMP,8EANO,EAOP,qEAPO,EAQP,6FARO,EASP,yEATO,EAUP,+EAVO,EAWP,qEAXO,EAYP,uEAZO,EAaP,+EAbO,EAcP,qEAdO,EAeP,uEAfO,EAgBP,4FAhBO,EAiBP,qEAjBO,EAkBP,wDAAcD,OAAd,CAAsBc,OAAtB,CAlBO,CAjBD;AAqCRO,mBAAS,EAAE,CACT,gFADS,EAET,0EAFS,EAGT,uEAHS,EAIT,qEAJS,EAKT,mEALS,EAMT,gFANS,EAOT,kFAPS,EAQT,oFARS,EAST,CACE;AACCL,mBAAO,EAAE,sEADV;AAECC,oBAAQ,EAAE,kEAFX;AAGCC,iBAAK,EAAE;AAHR,WADF,CATS,EAgBT;AACA;AAACF,mBAAO,EAAE,oBAAV;AAAgCG,oBAAQ,EAAE;AAA1C,WAjBS,EAkBT,0DAlBS,CArCH;AAyDRG,mBAAS,EAAE,CAAC,2DAAD;AAzDH,S;AA2DY,Q;;;;;;;;;;;;;;;;;;ACnHtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaC,e;AAIT,+BACYnB,MADZ,EAEYoB,KAFZ,EAGYrB,IAHZ,EAIWsB,SAJX,EAI+B;AAAA;;AAHnB,aAAArB,MAAA,GAAAA,MAAA;AACA,aAAAoB,KAAA,GAAAA,KAAA;AACA,aAAArB,IAAA,GAAAA,IAAA;AACD,aAAAsB,SAAA,GAAAA,SAAA;AANH,aAAAC,OAAA,GAAiB,kEAAgBC,OAAjC;AAOJ;;;;kCAGM5C,G,EAAuB6C,I,EAAiB;AAAA;;AAE9C,cAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ,CAF8C,CAI9C;;AAEA,cAAIF,KAAJ,EAAW;AACP9C,eAAG,GAAGA,GAAG,CAACiD,KAAJ,CAAU;AACZC,wBAAU,EAAE;AACR,iCAAiB,YAAUJ;AADnB;AADA,aAAV,CAAN;AAKH;;AAED,iBAAOD,IAAI,CAACM,MAAL,CAAYnD,GAAZ,WAAuB,UAAAoD,GAAG,EAAI;AACjC,gBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB;AAEAC,qBAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,oBAAI,CAACd,KAAL,CAAWe,MAAX;;AACA,oBAAI,CAACpC,IAAL,CAAUqC,gBAAV,CAA2B,KAA3B;;AACA,oBAAI,CAACf,SAAL,CAAegB,QAAf;;AACA,oBAAI,CAACrC,MAAL,CAAYM,aAAZ,CAA0B,QAA1B;AACH;;AACD,mBAAO,oEAAiByB,GAAjB,CAAP;AACH,WAXM,CAAP;AAYH;;;;;;;uBAtCQZ,e,EAAe,8G,EAAA,4H,EAAA,0H,EAAA,0H;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe;;;;;sEAAfA,e,EAAe;cAD3B;AAC2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACduC;;AAAuC;;AAAuB;;;;;;AAM1G;;AAAmD;;AAAU;;;;;;AAAzB;;AAAe;;AAAA;;;;;;AAKnD;;AAA+C;;AAAU;;;;;;AAAjD;;AAAuC;;AAAA;;;;;;;;AAiBnC;;AAIM;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAiC,YAAjC,EAAiC;AAAA;;AAAA;;AAAA,uCACL,IADK;AACD,SADhC;;AAEJ;;AACF;;;;;;;;;AANM,0FAAyB,OAAzB,EAAyB,yBAAzB,EAAyB,OAAzB,EAAyB,yDAAzB;;AAKJ;;AAAA;;;;;;;;AArBlB;;AACI;;AACI;;AACI;;AACE;;AAKO;AAAA;;AAAA;;AAAA;AAAA;;AALP;;AAUA;;AAUF;;AACJ;;AAEA;;AACI;;AAKQ;AAAA;;AAAA;;AAAA;AAAA,WAA8B,OAA9B,EAA8B;AAAA;;AAAA;;AAAA;;AAAA;AAAA,SAA9B;;AALR;;AAQJ;;AACA;;AACI;;AAA+D;AAAA;;AAAA;;AAAA,iBAAS,aAAT;AAA4B,SAA5B;;AAA4C;;AAAmC;;AAClJ;;AACA;;AACI;;AAKQ;AAAA;;AAAA;;AAAA;AAAA,WAA4B,OAA5B,EAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA,SAA5B;;AALR;;AAQJ;;AACA;;AACI;;AAA+D;AAAA;;AAAA;;AAAA,iBAAS,aAAT;AAA4B,SAA5B;;AAA4C;;AAAmC;;AAClJ;;AACJ;;AACJ;;;;;;;;AA9CqB;;AAAA,yFAAuB,eAAvB,EAAuB,CAAvB,EAAuB,aAAvB,EAAuB,IAAvB,EAAuB,WAAvB,EAAuB,gBAAvB;;AAyBD;;AAAA,sGAA8B,OAA9B,EAA8B,0CAA9B;;AAaA;;AAAA,oGAA4B,OAA5B,EAA4B,wCAA5B;;;;;;AAuC1B;;AAAsD;;AAAC;;;;;;;;;;;;AACvD;;;;AAA0H;;AAAU;;;;;;;;AAAjG;;AAAuF;;AAAA;;;;;;AAI1H;;AAAsD;;AAAI;;;;;;AAExD;;AAAyG;;AAAM;;;;;;AADjH;;;;AACE;;;;AACA;;;;AAA8C;;;;;;;;AAFb;;AACC;;AAAA;;AAClC;;AAAA;;;;;;AAIF;;AAAsD;;AAAI;;;;;;AAC1D;;;;AAA0H;;;;AAAyC;;;;;;;;AAAhI;;AAAuF;;AAAA;;;;;;AAI1H;;AAAsD;;AAAO;;;;;;AAC7D;;;;AAA0H;;AAAiB;;;;;;;;AAAxG;;AAAuF;;AAAA;;;;;;AAI1H;;AAAsD;;AAAO;;;;;;AAC7D;;;;AAA0H;;AAAoB;;;;;;;;AAA3G;;AAAuF;;AAAA;;;;;;AAIxH;;AAAsD;;AAAS;;;;;;AAC/D;;;;AAA0H;;AAAqB;;;;;;;;AAA5G;;AAAuF;;AAAA;;;;;;AAI5H;;;;;;;;AACA;;;;AACE;;AAAqD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAM;;AACvF;;AAAuD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAM;;AAC/F;;;;;;;;AAHmC;;;;;;AAMrC;;;;;;AACA;;;;;;AAGF;;AAEE;;AAIF;;;;;;;;AD7JV,QAAMmB,WAAW,GAAG;AAClB,YAAM;AACJC,gBAAQ,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CADN;AAEJC,cAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E;AAFJ,OADY,CAKlB;;AALkB,KAApB,C,CAQA;AACA;;QAEaC,I,GADb;AAAA;;AAEE,WAAAC,QAAA,GAAW,IAAX;AACD,K;;;uBAFYD,I;AAAI,K;;;aAAJA,I;AAAI,eAAJA,IAAI;;;;;sEAAJA,I,EAAI;cADhB;AACgB,Q;UAIjB;;;QAEaE,oB;;;;;AAEX,oCAAoBC,KAApB,EAAiC;AAAA;;AAAA;;AAC/B;AADkB,eAAAA,KAAA,GAAAA,KAAA;AAAa;AAEjC;;;;4CAEoBC,O,EAAe;AACjC,iBAAOP,WAAW,CAAC,KAAKM,KAAL,CAAWF,QAAZ,CAAX,CAAiCH,QAAjC,CAA0CM,OAAO,GAAG,CAApD,CAAP;AACF;;;0CACkBC,K,EAAa;AAC7B,iBAAOR,WAAW,CAAC,KAAKM,KAAL,CAAWF,QAAZ,CAAX,CAAiCF,MAAjC,CAAwCM,KAAK,GAAG,CAAhD,CAAP;AACF;;;yCACiBA,K,EAAa;AAC5B,iBAAO,KAAKC,iBAAL,CAAuBD,KAAvB,CAAP;AACF;;;wCAEgBE,I,EAAmB;AACjC,2BAAUA,IAAI,CAACC,GAAf,cAAsBD,IAAI,CAACF,KAA3B,cAAoCE,IAAI,CAACE,IAAzC;AACF;;;;MAlBwC,4E;;;uBAA7BP,oB,EAAoB,uDAEJF,IAFI,C;AAEA,K;;;aAFpBE,oB;AAAoB,eAApBA,oBAAoB;;;;;sEAApBA,oB,EAAoB;cADhC;AACgC,Q;;gBAEJF;;AAAI,O,EAAA,I;AAAA,K;AAmBjC;;;;;QAIaU,a;;;;;AADb;AAAA;;AAAA;;;AAGW,eAAAC,SAAA,GAAY,GAAZ;AAHX;AAoBC;;;;kCAfWhD,K,EAAoB;AAC5B,cAAIA,KAAJ,EAAW;AACT,gBAAI4C,IAAI,GAAG5C,KAAK,CAACiD,KAAN,CAAY,KAAKD,SAAjB,CAAX;AACA,mBAAO;AACLH,iBAAG,EAAGK,QAAQ,CAACN,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CADT;AAELF,mBAAK,EAAGQ,QAAQ,CAACN,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CAFX;AAGLE,kBAAI,EAAGI,QAAQ,CAACN,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV;AAHV,aAAP;AAKF;;AACA,iBAAO,IAAP;AACF;;;gCAEQA,I,EAA0B;AAChC,iBAAOA,IAAI,GAAGA,IAAI,CAACC,GAAL,GAAW,KAAKG,SAAhB,GAA4BJ,IAAI,CAACF,KAAjC,GAAyC,KAAKM,SAA9C,GAA0DJ,IAAI,CAACE,IAAlE,GAAyE,IAApF;AACF;;;;MAlBiC,yE;;;6CAAtBC,a;AAAa,K;;;aAAbA,a;AAAa,eAAbA,aAAa;;;yGAAbA,a;;;;;sEAAAA,a,EAAa;cADzB;AACyB,Q;;AAqB1B;;;;;QAIaI,yB;;;;;AADb;AAAA;;AAAA;;;AAGW,eAAAH,SAAA,GAAY,GAAZ;AAHX;AAoBC;;;;8BAfOhD,K,EAAa;AACjB,cAAIA,KAAJ,EAAW;AACT,gBAAI4C,IAAI,GAAG5C,KAAK,CAACiD,KAAN,CAAY,KAAKD,SAAjB,CAAX;AACA,mBAAO;AACLH,iBAAG,EAAGK,QAAQ,CAACN,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CADT;AAELF,mBAAK,EAAGQ,QAAQ,CAACN,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CAFX;AAGLE,kBAAI,EAAGI,QAAQ,CAACN,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV;AAHV,aAAP;AAKF;;AACA,iBAAO,IAAP;AACF;;;+BAEOA,I,EAA0B;AAC/B,iBAAOA,IAAI,GAAGA,IAAI,CAACC,GAAL,GAAW,KAAKG,SAAhB,GAA4BJ,IAAI,CAACF,KAAjC,GAAyC,KAAKM,SAA9C,GAA0DJ,IAAI,CAACE,IAAlE,GAAyE,EAApF;AACF;;;;MAlB6C,iF;;;yDAAlCK,yB;AAAyB,K;;;aAAzBA,yB;AAAyB,eAAzBA,yBAAyB;;;qHAAzBA,yB;;;;;sEAAAA,yB,EAAyB;cADrC;AACqC,Q;;;QAgCzBC,oB;AA+CX,oCACUC,kBADV,EAEUC,cAFV,EAGUC,eAHV,EAIUC,QAJV,EAKSC,SALT,EAMSC,MANT,CAOE;AAPF,Q;;;AACU,aAAAL,kBAAA,GAAAA,kBAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AACD,aAAAC,SAAA,GAAAA,SAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AA7CT,aAAAC,MAAA,GAAS;AACPC,gBAAM,EAAE;AADD,SAAT;AAIA,aAAAC,KAAA,GAAe,CACb;AAAC5E,YAAE,EAAE,CAAL;AAAQ6E,cAAI,EAAE;AAAd,SADa,EAEb;AAAC7E,YAAE,EAAE,CAAL;AAAQ6E,cAAI,EAAE;AAAd,SAFa,EAGb;AAAC7E,YAAE,EAAE,CAAL;AAAQ6E,cAAI,EAAE;AAAd,SAHa,EAIb;AAAC7E,YAAE,EAAE,CAAL;AAAQ6E,cAAI,EAAE;AAAd,SAJa,EAKb;AAAC7E,YAAE,EAAE,CAAL;AAAQ6E,cAAI,EAAE;AAAd,SALa,EAMb;AAAC7E,YAAE,EAAE,CAAL;AAAQ6E,cAAI,EAAE;AAAd,SANa,CAAf;AASA,aAAAC,OAAA,GAAU,MAAV;AACA,aAAAC,QAAA,GAAmB,KAAnB;AAEA,aAAAC,WAAA,GAA8B,IAA9B;AAIO,aAAAC,IAAA,GAAO;AACVC,oBAAU,EAAC,EADD;AAEVC,qBAAW,EAAC,CAFF;AAGVP,eAAK,EAAC,CAHI;AAIVQ,qBAAW,EAAE,IAJH;AAKVC,mBAAS,EAAE;AALD,SAAP;AAQP,aAAAC,WAAA,GAAc,IAAIC,IAAJ,GAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAACC,kBAAQ,EAAE;AAAX,SAAnC,CAAd;AAEA,aAAAC,gBAAA,GAA6B,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,WAA7C,EAA0D,SAA1D,CAA7B,C,CAIA;;AACA,aAAAC,SAAA,GAAY,IAAZ;AAYI;;;;mCAEO;AAAA;;AACT,eAAKrB,eAAL,CAAqBsB,YAArB,GAAoC9E,SAApC,CAA+C,UAAA+E,IAAI,EAAI;AAAE,kBAAI,CAACC,SAAL,GAAiBD,IAAjB;AAAuB,WAAhF;AAEA,eAAKzB,kBAAL,CAAwB2B,eAAxB,GACIjF,SADJ,CAEI,UAAA+E,IAAI,EAAI;AACN,kBAAI,CAACF,SAAL,GAAiB,KAAjB;AACA,kBAAI,CAACK,YAAL,GAAoBH,IAApB,CAFM,CAGN;;AACA,kBAAI,CAACI,UAAL,GAAmB,IAAI,0EAAJ,CAAuB,MAAI,CAACD,YAA5B,CAAnB;AACA,kBAAI,CAACC,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;;AACA,kBAAI,CAACC,IAAL,CAAUA,IAAV,CAAgB;AAAEnG,gBAAE,EAAE,iBAAN;AAAyBoG,mBAAK,EAAE;AAAhC,aAAhB;;AACA,kBAAI,CAACH,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD,WAVL,EAWI,UAAAE,KAAK;AAAA,mBAAI,MAAI,CAACV,SAAL,GAAiB,KAArB;AAAA,WAXT;AAaD;;;sCAEa;AACZ,eAAKK,YAAL,GAAoB,IAApB;AACA,eAAKF,SAAL,GAAoB,IAApB;AACA,eAAKQ,QAAL,GAAoB,IAApB;AACD;;;kDAEyBC,K,EAAO;AAAA;;AAC/B,eAAKC,eAAL,GAAuB,IAAvB;AACA,eAAKnC,cAAL,CAAoBoC,gBAApB,CAAqCF,KAArC,EAA4CzF,SAA5C,CACE,UAAA+E,IAAI,EAAI;AACN,gBAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,KAAmBa,SAAvB,EAAkC;AAChC,oBAAI,CAACJ,QAAL,GAAgB,EAAhB;AACD,aAFD,MAEO;AACL,oBAAI,CAACA,QAAL,GAAgBT,IAAhB;AACD;;AACD,kBAAI,CAACW,eAAL,GAAuB,KAAvB;AACD,WARH;AASD;;;gDAEuB;AACtB,eAAKF,QAAL,GAAgB,EAAhB;AACD;;;sCAEaT,I,EAAI;AAChB,eAAKG,YAAL,CAAkBW,IAAlB,CAAuBd,IAAI,CAAC,CAAD,CAA3B;;AACA,eAAKI,UAAL,CAAgBW,yBAAhB;AACD;;;yCACgBf,I,EAAM;AACrB,cAAIgB,CAAC,GAAG,KAAKb,YAAL,CAAkBc,SAAlB,CAA4B,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAAC/G,EAAF,IAAQ6F,IAAI,CAAC,CAAD,CAAJ,CAAQ7F,EAAvB;AAAA,WAA5B,CAAR;;AACA,cAAI6G,CAAC,IAAE,CAAP,EAAU;AACR,iBAAKb,YAAL,CAAkBa,CAAlB,IAAuBhB,IAAI,CAAC,CAAD,CAA3B;AACD;;AACD,eAAKI,UAAL,CAAgBW,yBAAhB;AACD;;;sCACa5G,E,EAAI;AAChB,cAAI6G,CAAC,GAAG,KAAKb,YAAL,CAAkBc,SAAlB,CAA4B,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAAC/G,EAAF,IAAQA,EAAf;AAAA,WAA5B,CAAR;;AACA,cAAI6G,CAAC,IAAE,CAAP,EAAU;AACR,iBAAKb,YAAL,CAAkBgB,MAAlB,CAAyBH,CAAzB,EAA2B,CAA3B;AACD;;AACD,eAAKZ,UAAL,CAAgBW,yBAAhB;;AACA,eAAKxC,kBAAL,CAAwB6C,MAAxB,CAA+BjH,EAA/B;AACD;;;oCAEWuG,K,EAAc;AACxB,cAAMW,WAAW,GAAIX,KAAK,CAACY,MAAN,CAAkCpG,KAAvD;AACA,eAAKkF,UAAL,CAAgBmB,MAAhB,GAAyBF,WAAW,CAACG,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,cAAI,KAAKrB,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,iBAAKD,UAAL,CAAgBC,SAAhB,CAA0BqB,SAA1B;AACD;AACF;;;wCAEexG,K,EAAY;AAAA;;AAC1B,eAAKqD,kBAAL,CACK2B,eADL,CACqBhF,KADrB,EAEKD,SAFL,CAGQ,UAAAkF,YAAY,EAAI;AACd,kBAAI,CAACA,YAAL,GAAoB,EAApB;;AADc,uDAEDA,YAFC;AAAA;;AAAA;AAEd,kEAA2B;AAAA,oBAAnBwB,CAAmB;;AACzB,sBAAI,CAACxB,YAAL,CAAkBW,IAAlB,CAAuBa,CAAvB;AACD,eAJa,CAKd;;AALc;AAAA;AAAA;AAAA;AAAA;;AAMd,kBAAI,CAACvB,UAAL,GAAmB,IAAI,0EAAJ,CAAuB,MAAI,CAACD,YAA5B,CAAnB;AACA,kBAAI,CAACC,UAAL,CAAgBC,SAAhB,GAA4B,MAAI,CAACA,SAAjC;AACA,kBAAI,CAACD,UAAL,CAAgBE,IAAhB,GAAuB,MAAI,CAACA,IAA5B;AACD,WAZT,EAaQ,UAAAE,KAAK;AAAA,mBAAI,MAAI,CAACoB,WAAL,CAAiBpB,KAAjB,CAAJ;AAAA,WAbb;AAeF;;;mCAEW;AACT,cAAI,KAAKqB,QAAT,EAAmB;AACjB,iBAAKzC,IAAL,CAAUG,WAAV,GAAwB,KAAKsC,QAAL,CAAc9D,GAAd,GAAkB,GAAlB,GAAsB,KAAK8D,QAAL,CAAcjE,KAApC,GAA0C,GAA1C,GAA8C,KAAKiE,QAAL,CAAc7D,IAApF;AACF,WAFA,MAEM;AACJ,iBAAKoB,IAAL,CAAUG,WAAV,GAAwB,EAAxB;AACF;;AACA,cAAI,KAAKuC,MAAT,EAAiB;AACf,iBAAK1C,IAAL,CAAUI,SAAV,GAAsB,KAAKsC,MAAL,CAAY/D,GAAZ,GAAgB,GAAhB,GAAoB,KAAK+D,MAAL,CAAYlE,KAAhC,GAAsC,GAAtC,GAA0C,KAAKkE,MAAL,CAAY9D,IAA5E;AACF,WAFA,MAEM;AACJ,iBAAKoB,IAAL,CAAUI,SAAV,GAAsB,EAAtB;AACF,WAVS,CAYT;;;AACA,cAAIuC,CAAJ;;AACA,cAAI,KAAK3C,IAAL,CAAUC,UAAd,EAA0B;AACxB0C,aAAC,GAAG,KAAK3C,IAAL,CAAUC,UAAd;;AAEA,gBAAK0C,CAAC,CAAC,IAAD,CAAD,GAAU,CAAf,EAAmB;AACjB,mBAAK3C,IAAL,CAAUC,UAAV,GAAuB0C,CAAC,CAAC,IAAD,CAAxB;AACF;AACF;;AAEA,eAAKC,YAAL,GAAoB,IAApB;AACA,eAAK9B,eAAL,CAAqB,KAAKd,IAA1B;;AAEA,cAAI,KAAKA,IAAL,CAAUC,UAAd,EAA0B;AACxB,iBAAKD,IAAL,CAAUC,UAAV,GAAuB0C,CAAC,CAAC,MAAD,CAAxB;AACF;AACF;;;oCAEYvB,K,EAAO;AACjB,eAAKwB,YAAL,GAAoB,SAApB;;AACA,0CAAaC,MAAM,CAACjI,IAAP,CAAYwG,KAAK,CAACA,KAAN,CAAY0B,MAAxB,CAAb,kCAA+C;AAA3C,gBAAIrI,CAAC,mBAAL;AACF,iBAAKmI,YAAL,IAAqB,6CAA2CxB,KAAK,CAACA,KAAN,CAAY0B,MAAZ,CAAmBrI,CAAnB,EAAsB,CAAtB,CAA3C,GAAoE,kBAAzF;AACF;;AACA,eAAKmI,YAAL,IAAqB,SAArB;AACF;;;sCAEc9G,K,EAAO;AACnB,cAAIA,KAAK,IAAE,CAAX,EAAc;AACZ,iBAAKgE,QAAL,GAAgB,IAAhB;AACF,WAFA,MAEM;AACJ,iBAAKE,IAAL,CAAUG,WAAV,GAAwB,IAAxB;AACA,iBAAKH,IAAL,CAAUI,SAAV,GAAsB,IAAtB;AACA,iBAAKN,QAAL,GAAgB,KAAhB;AACF;AACF;;;wCAEgBpB,I,EAAe;AAC7B,cAAI,CAAC,KAAK+D,QAAN,IAAkB,CAAC,KAAKC,MAA5B,EAAoC;AAClC,iBAAKD,QAAL,GAAgB/D,IAAhB;AACF,WAFA,MAEM,IAAI,KAAK+D,QAAL,IAAiB,CAAC,KAAKC,MAAvB,IAAiChE,IAAjC,IAAyCA,IAAI,CAACqE,KAAL,CAAW,KAAKN,QAAhB,CAA7C,EAAwE;AAC5E,iBAAKC,MAAL,GAAchE,IAAd;AACF,WAFM,MAEA;AACJ,iBAAKgE,MAAL,GAAc,IAAd;AACA,iBAAKD,QAAL,GAAgB/D,IAAhB;AACF;AACF;;;kCAEUA,I,EAAe;AACvB,iBAAO,KAAK+D,QAAL,IAAiB,CAAC,KAAKC,MAAvB,IAAiC,KAAK3C,WAAtC,IAAqDrB,IAAI,CAACqE,KAAL,CAAW,KAAKN,QAAhB,CAArD,IAAkF/D,IAAI,CAACsE,MAAL,CAAY,KAAKjD,WAAjB,CAAzF;AACF;;;iCAESrB,I,EAAe;AACtB,iBAAO,KAAKgE,MAAL,IAAehE,IAAI,CAACqE,KAAL,CAAW,KAAKN,QAAhB,CAAf,IAA4C/D,IAAI,CAACsE,MAAL,CAAY,KAAKN,MAAjB,CAAnD;AACF;;;gCAEQhE,I,EAAe;AACrB,iBAAOA,IAAI,CAACuE,MAAL,CAAY,KAAKR,QAAjB,KAA+B,KAAKC,MAAL,IAAehE,IAAI,CAACuE,MAAL,CAAY,KAAKP,MAAjB,CAA9C,IAA2E,KAAKQ,QAAL,CAAcxE,IAAd,CAA3E,IAAkG,KAAKyE,SAAL,CAAezE,IAAf,CAAzG;AACF;;;sCAEc0E,Y,EAA8BC,K,EAAa;AACvD,cAAMC,MAAM,GAAG,KAAK/D,SAAL,CAAegE,KAAf,CAAqBF,KAArB,CAAf;AACA,iBAAOC,MAAM,IAAI,KAAKhE,QAAL,CAAckE,OAAd,CAAsB,mEAAQC,IAAR,CAAaH,MAAb,CAAtB,CAAV,GAAwD,mEAAQG,IAAR,CAAaH,MAAb,CAAxD,GAA+EF,YAAtF;AACF;;;kCAEUrI,E,EAAY;AAAA;;AACpB,cAAM2I,YAAY,GAAG,IAAI,wEAAJ,EAArB;AAEAA,sBAAY,CAAC9C,IAAb,GAAoB;AAChB7F,cAAE,EAAEA;AADY,WAApB;AAIA,cAAMgC,SAAS,GAAG,KAAKyC,MAAL,CAAYmE,IAAZ,CAAiB,kGAAjB,EAAwCD,YAAxC,CAAlB;AAEA3G,mBAAS,CAAC6G,WAAV,GAAwB/H,SAAxB,CACE,UAACgI,MAAD,EAAY;AACV,gBAAIA,MAAJ,EAAY;AACV,kBAAKA,MAAM,CAAC,CAAD,CAAN,CAAUC,IAAV,IAAkB,QAAvB,EAAkC;AAChC,sBAAI,CAACC,gBAAL,CAAsBF,MAAtB;AACD,eAFD,MAEO;AACL,sBAAI,CAACG,aAAL,CAAmBH,MAAnB;AACD;AACH;AACF,WATF;AAWF;;;0CAEiB9I,E,EAAW;AAC1B,eAAKoE,kBAAL,CAAwB6C,MAAxB,CAA+BjH,EAA/B;AACD;;;;;;;uBArPUmE,oB,EAAoB,iJ,EAAA,yI,EAAA,4I,EAAA,uI,EAAA,kJ,EAAA,mI;AAAA,K;;;YAApBA,oB;AAAoB,sC;AAAA;AAAA;0EAwCpB,wE,EAAc,I;;0EACd,8D,EAAS,I;;;;;;;;;;kFAhDT,CACTf,IADS,EAER;AAAC7B,eAAO,EAAE,4EAAV;AAA6BC,gBAAQ,EAAE8B;AAAvC,OAFQ,EAGR;AAAC/B,eAAO,EAAE,yEAAV;AAA0BC,gBAAQ,EAAEsC;AAApC,OAHQ,EAIR;AAACvC,eAAO,EAAE,iFAAV;AAAkCC,gBAAQ,EAAE0C;AAA5C,OAJQ,C,CAKT;;;;;;;ACrHJ;;AACI;;AACI;;AAA+B;AAAA,mBAAY,IAAAgF,QAAA,EAAZ;AAAsB,WAAtB;;AAC3B;;AACI;;AACI;;AAAyD;;AAAwB;;AAAO;;AAAI;;AAC5F;;AAAyD;;AAAwB;;AAAQ;;AAAI;;AAC7F;;AAAyD;;AAAwB;;AAAK;;AAAI;;AAC9F;;AACA;;AACE;;AACE;;AACI;;AAEI;AAAA;AAAA,aAA6B,cAA7B,EAA6B;AAAA,mBAKb,IAAAC,yBAAA,QALa;AAKoB,WALjD,EAA6B,cAA7B,EAA6B;AAAA,mBAMb,IAAAC,qBAAA,EANa;AAMU,WANvC;;AAUJ;;AAEA;;AAIA;;AACF;;AACJ;;AACA;;AACE;;AAAiD;AAAA;AAAA;;AAC7C;;AAAoB;;AAAK;;AACzB;;AACJ;;AACF;;AACA;;AACE;;AAA2C;AAAA;AAAA,aAAwB,QAAxB,EAAwB;AAAA,mBAAW,IAAAC,aAAA,qBAAX;AAA6C,WAArE;;AACvC;;AACJ;;AACA;;AAuDF;;AACF;;AACA;;AACE;;AACE;;AAAqD;AAAA,mBAAS,IAAAH,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAS;;AACrF;;AACF;;AACA;;AACF;;AACN;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAA8C;AAAA,mBAAS,IAAAI,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAgB;;AACxF;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;AAAM;;AACjB;;AAAgB;AAAA,mBAAS,IAAAC,WAAA,QAAT;AAA4B,WAA5B;;AAAhB;;AACF;;AAEA;;AACE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACI;;AACA;;AACF;;AAEF;;AACE;;AACA;;AAIF;;AAEA;;AACA;;AAEF;;AACA;;AAOA;;AACN;;AACJ;;;;;;;;AAtK4B;;AAAA,mGAA6B,MAA7B,EAA6B,YAA7B,EAA6B,eAA7B,EAA6B,WAA7B,EAA6B,WAA7B,EAA6B,mBAA7B,EAA6B,cAA7B,EAA6B,IAA7B,EAA6B,kBAA7B,EAA6B,IAA7B;;AAoByC;;AAAA;;AACrC;;AAAA;;AACA;;AAAA;;AAI+B;;AAAA;;AAChB;;AAAA;;AAEJ;;AAAA;;AA8DV;;AAAA,gKAA0B,QAA1B,EAA0B,iBAA1B;;AAqBN;;AAAA;;AAyCI;;AAAA;;AACP;;AAAA;;AAGJ;;AAAA;;AAOK;;AAAA;;;;;;;;;;sED3DZpF,oB,EAAoB;cAXhC,uDAWgC;eAXtB;AACTjD,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD,CAHF;AAITQ,mBAAS,EAAE,CACTwB,IADS,EAER;AAAC7B,mBAAO,EAAE,4EAAV;AAA6BC,oBAAQ,EAAE8B;AAAvC,WAFQ,EAGR;AAAC/B,mBAAO,EAAE,yEAAV;AAA0BC,oBAAQ,EAAEsC;AAApC,WAHQ,EAIR;AAACvC,mBAAO,EAAE,iFAAV;AAAkCC,oBAAQ,EAAE0C;AAA5C,WAJQ,CAJF,CASP;;AATO,S;AAWsB,Q;;;;;;;;;;;;;;;;gBAwC9B,uD;iBAAU,wE,EAAc;AAAC,sBAAQ;AAAT,W;;;gBACxB,uD;iBAAU,8D,EAAS;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;AEhKtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBU;;AAAsD;;AAAE;;;;;;AACxD;;AAAoC;;AAAW;;;;;;AAAX;;AAAA;;;;;;AAIpC;;AAAsD;;AAAI;;;;;;AAC1D;;AAAoC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAIpC;;AAAsD;;AAAI;;;;;;AAC1D;;AAAoC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAIpC;;AAAsD;;AAAM;;;;;;AAC5D;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAIpC;;;;;;;;AACA;;AACE;;AAAqD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAM;;AACvF;;AAAuD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAM;;AAC/F;;;;;;AAGF;;;;;;AACA;;;;;;AAGF;;AAEE;;AAIF;;;;;;;;QDzCOsF,iB;AASX,iCACUlF,eADV,EAEUG,MAFV,EAE2B;AAAA;;AADjB,aAAAH,eAAA,GAAAA,eAAA;AACA,aAAAG,MAAA,GAAAA,MAAA;AARV,aAAAiB,gBAAA,GAA6B,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,OAAvB,EAAgC,SAAhC,CAA7B;AAIA,aAAAC,SAAA,GAAY,IAAZ;AAKM;;;;mCAEK;AAAA;;AACT,eAAKrB,eAAL,CAAqBsB,YAArB,GACI9E,SADJ,CAEI,UAAA+E,IAAI,EAAI;AACN,mBAAI,CAACF,SAAL,GAAiB,KAAjB;AACA,mBAAI,CAACG,SAAL,GAAiBD,IAAjB,CAFM,CAGN;;AACA,mBAAI,CAACI,UAAL,GAAmB,IAAI,0EAAJ,CAAuB,OAAI,CAACH,SAA5B,CAAnB;AACA,mBAAI,CAACG,UAAL,CAAgBC,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,mBAAI,CAACD,UAAL,CAAgBE,IAAhB,GAAuB,OAAI,CAACA,IAA5B;AACD,WATL,EAUI,UAAAE,KAAK;AAAA,mBAAI,OAAI,CAACV,SAAL,GAAiB,KAArB;AAAA,WAVT;AAYD;;;sCAEa;AACZ,eAAKG,SAAL,GAAiB,IAAjB;AACD;;;sCAEaD,I,EAAI;AAChB,eAAKC,SAAL,CAAea,IAAf,CAAoBd,IAAI,CAAC,CAAD,CAAxB;;AACA,eAAKI,UAAL,CAAgBW,yBAAhB;AACD;;;yCACgBf,I,EAAM;AACrB,cAAIgB,CAAC,GAAG,KAAKf,SAAL,CAAegB,SAAf,CAAyB,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAAC/G,EAAF,IAAQ6F,IAAI,CAAC,CAAD,CAAJ,CAAQ7F,EAAvB;AAAA,WAAzB,CAAR;;AACA,cAAI6G,CAAC,IAAE,CAAP,EAAU;AACR,iBAAKf,SAAL,CAAee,CAAf,IAAoBhB,IAAI,CAAC,CAAD,CAAxB;AACD;;AACD,eAAKI,UAAL,CAAgBW,yBAAhB;AACD;;;sCACa5G,E,EAAI;AAChB,cAAI6G,CAAC,GAAG,KAAKf,SAAL,CAAegB,SAAf,CAAyB,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAAC/G,EAAF,IAAQA,EAAf;AAAA,WAAzB,CAAR;;AACA,cAAI6G,CAAC,IAAE,CAAP,EAAU;AACR,iBAAKf,SAAL,CAAekB,MAAf,CAAsBH,CAAtB,EAAwB,CAAxB;AACD;;AACD,eAAKZ,UAAL,CAAgBW,yBAAhB;;AACA,eAAKtC,eAAL,CAAqB2C,MAArB,CAA4BjH,EAA5B;AACD;;;oCAEWuG,K,EAAc;AACxB,cAAMW,WAAW,GAAIX,KAAK,CAACY,MAAN,CAAkCpG,KAAvD;AACA,eAAKkF,UAAL,CAAgBmB,MAAhB,GAAyBF,WAAW,CAACG,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,cAAI,KAAKrB,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,iBAAKD,UAAL,CAAgBC,SAAhB,CAA0BqB,SAA1B;AACD;AACF;;;kCAESvH,E,EAAY;AAAA;;AACpB,cAAM2I,YAAY,GAAG,IAAI,wEAAJ,EAArB;AAEAA,sBAAY,CAAC9C,IAAb,GAAoB;AAChB7F,cAAE,EAAEA;AADY,WAApB;AAIA,cAAMgC,SAAS,GAAG,KAAKyC,MAAL,CAAYmE,IAAZ,CAAiB,yFAAjB,EAAqCD,YAArC,CAAlB;AAEA3G,mBAAS,CAAC6G,WAAV,GAAwB/H,SAAxB,CACI,UAACgI,MAAD,EAAY;AACV,gBAAIA,MAAJ,EAAY;AACV,kBAAKA,MAAM,CAAC,CAAD,CAAN,CAAUC,IAAV,IAAkB,QAAvB,EAAkC;AAChC,uBAAI,CAACC,gBAAL,CAAsBF,MAAtB;AACD,eAFD,MAEO;AACL,uBAAI,CAACG,aAAL,CAAmBH,MAAnB;AACD;AACF;AACF,WATL;AAWC;;;;;;;uBAlFQU,iB,EAAiB,2I,EAAA,mI;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA;AAAA;0EAKjB,wE,EAAc,I;;0EACd,8D,EAAS,I;;;;;;;;;;;;;;;ACpBtB;;AACI;;AACI;;AACI;;AACI;;AAA8C;AAAA,mBAAS,IAAAF,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAa;;AACrF;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AAAgB;AAAA,mBAAS,IAAAC,WAAA,QAAT;AAA4B,WAA5B;;AAAhB;;AACF;;AAEA;;AACE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAIF;;AAEA;;AACA;;AAEF;;AACA;;AAOA;;AACF;;AACJ;;;;AA1CuB;;AAAA;;AA6BI;;AAAA;;AACP;;AAAA;;AAGJ;;AAAA;;AAOK;;AAAA;;;;;;;;;sED1CRC,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTtI,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;gBAK3B,uD;iBAAU,wE,EAAc;AAAC,sBAAQ;AAAT,W;;;gBACxB,uD;iBAAU,8D,EAAS;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;AEpBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC+B4B;;;;;;AAAG;;;;;;AAGqC;;AAAuC;;AAAuB;;;;;;AAQ1G;;AAAmD;;AAAU;;;;;;AAAzB;;AAAe;;AAAA;;;;;;AAQnD;;AAAoD;;AAAU;;;;;;AAA3B;;AAAiB;;AAAA;;;;ADzC5E,QAAMc,OAAO,GAAU,kEAAgBA,OAAvC;AAEA;;;;QAIagC,yB;;;;;AADb;AAAA;;AAAA;;;AAEW,gBAAAH,SAAA,GAAY,GAAZ;AACA,gBAAA0F,cAAA,GAAiB,GAAjB;AACA,gBAAAC,cAAA,GAAiB,GAAjB;AAJX;AAqBC;;;;8BAfO3I,K,EAAa;AACjB,cAAIA,KAAJ,EAAW;AACT,gBAAI4C,IAAI,GAAG5C,KAAK,CAACiD,KAAN,CAAY,KAAKD,SAAjB,CAAX;AACA,mBAAO;AACLH,iBAAG,EAAGK,QAAQ,CAACN,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CADT;AAELF,mBAAK,EAAGQ,QAAQ,CAACN,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CAFX;AAGLE,kBAAI,EAAGI,QAAQ,CAACN,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV;AAHV,aAAP;AAKF;;AACA,iBAAO,IAAP;AACF;;;+BAEOA,I,EAA0B;AAC/B,iBAAOA,IAAI,GAAGA,IAAI,CAACC,GAAL,GAAW,KAAK6F,cAAhB,GAAiC9F,IAAI,CAACF,KAAtC,GAA8C,KAAKgG,cAAnD,GAAoE9F,IAAI,CAACE,IAA5E,GAAmF,EAA9F;AACF;;;;MAnB6C,iF;;;yDAAlCK,yB;AAAyB,K;;;aAAzBA,yB;AAAyB,eAAzBA,yBAAyB;;;qHAAzBA,yB;;;;;sEAAAA,yB,EAAyB;cADrC;AACqC,Q;;;QA8BzByF,sB;AAoCX,sCACS3H,SADT,EAEUoC,kBAFV,EAGUC,cAHV,EAIUC,eAJV,EAKUsF,KALV,EAMSpF,SANT,EAO2BqB,IAP3B,EAOiC;AAAA;;AAAA;;AANxB,aAAA7D,SAAA,GAAAA,SAAA;AACC,aAAAoC,kBAAA,GAAAA,kBAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACA,aAAAsF,KAAA,GAAAA,KAAA;AACD,aAAApF,SAAA,GAAAA,SAAA;AAnCT,aAAAM,OAAA,GAAU,MAAV;AACA,aAAAC,QAAA,GAAmB,KAAnB;AAEA,aAAA8E,WAAA,GAA8B,CAC1B;AACE7J,YAAE,EAAC,IADL;AAEE8J,mBAAS,EAAC,EAFZ;AAGE5E,oBAAU,EAAC,IAHb;AAIEC,qBAAW,EAAC,IAJd;AAKE4E,yBAAe,EAAC;AALlB,SAD0B,CAA9B;AAaA,aAAArF,MAAA,GAAS;AACPC,gBAAM,EAAE;AADD,SAAT;AAIA,aAAAqF,QAAA,GAAkB,CAChB;AAAEnF,cAAI,EAAE;AAAR,SADgB,EAEhB;AAAEA,cAAI,EAAE;AAAR,SAFgB,EAGhB;AAAEA,cAAI,EAAE;AAAR,SAHgB,CAAlB;;AAiBI,YAAKgB,IAAI,CAAC7F,EAAL,IAAW,IAAhB,EAAuB;AACrB,eAAK+I,IAAL,GAAY,QAAZ;AAEA,cAAIkB,MAAM,GAAG;AACXjK,cAAE,EAAC6F,IAAI,CAAC7F;AADG,WAAb;;AAGA,eAAK4J,KAAL,CAAWM,IAAX,CAAgBhI,OAAO,GAAG,oBAA1B,EAAgD+H,MAAhD,EAAwDnJ,SAAxD,CACE,UAAC+I,WAAD,EAAwB;AACtB,mBAAI,CAACA,WAAL,GAAmB,EAAnB;;AADsB,wDAETA,WAFS;AAAA;;AAAA;AAEtB,qEAA0B;AAAA,oBAAlBM,CAAkB;AACxB,oBAAIvC,CAAC,GAAGuC,CAAC,CAACC,OAAV;AACA,uBAAI,CAACC,eAAL,GAAuBzC,CAAC,CAAC/C,IAAzB;AACA,uBAAI,CAAC6C,QAAL,GAAgB,mEAAQgB,IAAR,CAAa,OAAI,CAAClE,SAAL,CAAegE,KAAf,CAAqB2B,CAAC,CAACJ,eAAvB,CAAb,CAAhB;AACA,uBAAI,CAACO,QAAL,GAAgB,OAAI,CAACC,SAAL,CAAeJ,CAAC,CAACJ,eAAF,CAAkBS,MAAlB,CAAyB,EAAzB,EAA4B,CAA5B,CAAf,CAAhB;;AAEA,uBAAI,CAACX,WAAL,CAAiBlD,IAAjB,CAAsBwD,CAAtB;AACD;AATqB;AAAA;AAAA;AAAA;AAAA;AAUvB,WAXH;AAaD,SAnBD,MAmBO;AACL,eAAKpB,IAAL,GAAY,MAAZ;AACD;AACF;;;;mCAEK;AACN,eAAK0B,WAAL;AACA,eAAK7E,YAAL;AACD;;;kCAES7E,K,EAAa;AACnB,cAAIA,KAAJ,EAAW;AACT,gBAAI2J,IAAI,GAAG3J,KAAK,CAACiD,KAAN,CAAY,GAAZ,CAAX;AACA,mBAAO;AACL2G,kBAAI,EAAG1G,QAAQ,CAACyG,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CADV;AAEJE,oBAAM,EAAG3G,QAAQ,CAACyG,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CAFb;AAGJG,oBAAM,EAAG;AAHL,aAAP;AAKH;AACF;;;uCAEc9J,K,EAAY;AAAA;;AACzB,eAAKqD,kBAAL,CACK2B,eADL,CACqBhF,KADrB,EAEKD,SAFL,CAGQ,UAAA+I,WAAW;AAAA,mBAAI,OAAI,CAACA,WAAL,GAAmBA,WAAvB;AAAA,WAHnB,EAIQ,UAAAxD,KAAK;AAAA,mBAAI,OAAI,CAACoB,WAAL,CAAiBpB,KAAjB,CAAJ;AAAA,WAJb;AAMD;;;wCAEetF,K,EAAY;AAAA;;AAC1B,eAAKqD,kBAAL,CACK0G,eADL,CACqB/J,KADrB,EAEKD,SAFL,CAGQ,UAAA+I,WAAW,EAAI;AACb,mBAAI,CAAC7H,SAAL,CAAe+I,KAAf,CAAqBlB,WAArB;AACD,WALT,EAMQ,UAAAxD,KAAK,EAAI;AACP,mBAAI,CAACoB,WAAL,CAAiBpB,KAAjB;AACD,WART;AAUD;;;sCAEa;AAAA;;AACZ,eAAKhC,cAAL,CACKoG,WADL,GAEK3J,SAFL,CAGQ,UAAAwF,QAAQ;AAAA,mBAAI,OAAI,CAACA,QAAL,GAAgBA,QAApB;AAAA,WAHhB,EAIQ,UAAAD,KAAK;AAAA,mBAAI,OAAI,CAACA,KAAL,GAAkBA,KAAtB;AAAA,WAJb;AAMD;;;uCAEc;AAAA;;AACb,eAAK/B,eAAL,CACKsB,YADL,GAEK9E,SAFL,CAGQ,UAAAgF,SAAS;AAAA,mBAAI,OAAI,CAACA,SAAL,GAAiBA,SAArB;AAAA,WAHjB,EAIQ,UAAAO,KAAK;AAAA,mBAAI,OAAI,CAACA,KAAL,GAAkBA,KAAtB;AAAA,WAJb;AAMD;;;4BAEG2E,G,EAAYC,I,EAAW;AACvB,cAAIC,CAAC,GAAGF,GAAG,GAAC,EAAZ;;AACA,iBAAOE,CAAC,CAACC,MAAF,GAAWF,IAAlB;AAAwBC,aAAC,GAAG,MAAMA,CAAV;AAAxB;;AACA,iBAAOA,CAAP;AACH;;;mCAEU;AACT,cAAIE,QAAJ;;AAEA,4CAAatD,MAAM,CAACjI,IAAP,CAAY,KAAK6H,QAAjB,CAAb,qCAA0C;AAAtC,gBAAIX,CAAC,qBAAL;;AACF,gBAAKA,CAAC,KAAK,MAAX,EAAoB;AAClBqE,sBAAQ,GAAG,KAAK1D,QAAL,CAAcX,CAAd,CAAX;AACD;;AACD,gBAAKA,CAAC,KAAK,OAAX,EAAqB;AACnBqE,sBAAQ,IAAI,MAAI,KAAK1D,QAAL,CAAcX,CAAd,CAAhB;AACD;;AACD,gBAAKA,CAAC,KAAK,KAAX,EAAmB;AACjBqE,sBAAQ,IAAI,MAAI,KAAK1D,QAAL,CAAcX,CAAd,CAAhB;AACD;AACF;;AAED,cAAK,KAAKW,QAAL,IAAiB,KAAK4C,QAA3B,EAAsC;AACpC,iBAAKT,WAAL,CAAiB,CAAjB,EAAoBE,eAApB,GAAsC,IAAIxE,IAAJ,CAAS6F,QAAQ,GAAG,GAAX,GAAiB,KAAKC,GAAL,CAAS,KAAKf,QAAL,CAAcK,IAAvB,EAA4B,CAA5B,CAAjB,GAAkD,GAAlD,GAAwD,KAAKU,GAAL,CAAS,KAAKf,QAAL,CAAcM,MAAvB,EAA8B,CAA9B,CAAjE,CAAtC;AACD,WAFD,MAEO;AACL,iBAAKf,WAAL,CAAiB,CAAjB,EAAoBE,eAApB,GAAsC,IAAtC;AACD;;AACD,eAAK1D,KAAL,GAAa,IAAb;AACA,eAAKyE,eAAL,CAAqB,KAAKjB,WAAL,CAAiB,CAAjB,CAArB;AACD;;;mCAEU;AACT,eAAK7H,SAAL,CAAe+I,KAAf,CAAqB,IAArB;AACD;;;oCAEW1E,K,EAAO;AACjB,eAAKA,KAAL,GAAa,SAAb;;AACA,4CAAayB,MAAM,CAACjI,IAAP,CAAYwG,KAAK,CAACA,KAAN,CAAY0B,MAAxB,CAAb,qCAA+C;AAA3C,gBAAIrI,CAAC,qBAAL;AACF,iBAAK2G,KAAL,IAAc,6CAA2CA,KAAK,CAACA,KAAN,CAAY0B,MAAZ,CAAmBrI,CAAnB,EAAsB,CAAtB,CAA3C,GAAoE,kBAAlF;AACD;;AACD,eAAK2G,KAAL,IAAc,SAAd;AACD;;;kDAEyBE,K,EAAO;AAAA;;AAC/B,eAAKC,eAAL,GAAuB,IAAvB;AACA,eAAKnC,cAAL,CAAoBoC,gBAApB,CAAqCF,KAArC,EAA4CzF,SAA5C,CACE,UAAA+E,IAAI,EAAI;AACN,gBAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQ,MAAR,KAAmBa,SAAvB,EAAkC;AAChC,qBAAI,CAACJ,QAAL,GAAgB,EAAhB;AACD,aAFD,MAEO;AACL,qBAAI,CAACA,QAAL,GAAgBT,IAAhB;AACD;;AACD,mBAAI,CAACW,eAAL,GAAuB,KAAvB;AACD,WARH;AASD;;;gDAEuB;AACtB,eAAKqD,WAAL,CAAiB,CAAjB,EAAoB3E,UAApB,GAAiC,CAAjC;AACA,eAAKoB,QAAL,GAAgB,EAAhB;AACD;;;oCAEWgF,I,EAAM;AAChB,cAAIA,IAAJ,EAAU;AACR,gBAAIC,UAAU,GAAGD,IAAI,CAACtL,EAAtB;AACA,iBAAK6J,WAAL,CAAiB,CAAjB,EAAoB3E,UAApB,GAAiCqG,UAAjC;AACD;AACF;;;;;;;uBA7LU5B,sB,EAAsB,sI,EAAA,iJ,EAAA,yI,EAAA,2I,EAAA,gI,EAAA,kJ,EAAA,gEA2CvB,wEA3CuB,C;AA2CR,K;;;YA3CdA,sB;AAAsB,yC;AAAA,kFAJtB,CACT;AAACpI,eAAO,EAAE,iFAAV;AAAkCC,gBAAQ,EAAE0C;AAA5C,OADS,CAIsB,E;AAFhC,e;AAAA,c;AAAA,kgD;AAAA;AAAA;;;AC3CH;;AACI;;AAAwB;;AAAQ;;AAChC;;AAAuD;AAAA,mBAAS,IAAAsH,QAAA,EAAT;AAAmB,WAAnB;;AACnD;;AAAyB;;AAAO;;AACpC;;AACJ;;AACA;;AACI;;AAA+B;AAAA,mBAAY,IAAAtC,QAAA,EAAZ;AAAsB,WAAtB;;AAC3B;;AACI;;AACI;;AACI;;AAAO;;AAAO;;AACd;;AACI;;AAGI;AAAA;AAAA,aAA6B,UAA7B,EAA6B;AAAA,mBAIjB,IAAAuC,WAAA,QAJiB;AAIE,WAJ/B,EAA6B,QAA7B,EAA6B;AAAA,mBAKnB,IAAAA,WAAA,QALmB;AAKA,WAL7B,EAA6B,cAA7B,EAA6B;AAAA,mBAOb,IAAAtC,yBAAA,QAPa;AAOoB,WAPjD,EAA6B,cAA7B,EAA6B;AAAA,mBAQb,IAAAC,qBAAA,EARa;AAQU,WARvC;;AAYJ;;AAEA;;AAIA;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAS;;AAChB;;AAA0D;AAAA,mCAAyB,CAAzB,EAA4BjE,WAA5B,GAA0B,MAA1B;AAA0B,WAA1B;;AACtD;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAS;;AAChB;;AAAwD;AAAA,mCAAyB,CAAzB,EAA4B2E,SAA5B,GAA0B,MAA1B;AAA0B,WAA1B;;AACpD;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAK;;AACZ;;AACE;;AACA;AAAA;AAAA;;AADA;;AAEA;;AACE;;AAA0C;AAAA;;AAAA;;AAAA,mBAAS,aAAT;AAAiC,WAAjC;;AAAiD;;AAAmC;;AAChI;;AACF;;AACJ;;AACJ;;AACA;;AACI;;AAAO;;AAAK;;AACZ;;AACI;;AAAyC;AAAA;AAAA;;AAA8C;;AAG3F;;AACJ;;AACA;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAqD;AAAA,mBAAS,IAAAZ,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAM;;AAChF;;AAA4C;AAAA,mBAAS,IAAAsC,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAQ;;AAC7E;;;;;;;;AAhF4B;;AAAA;;AAeA;;AAAA,mGAA6B,MAA7B,EAA6B,YAA7B,EAA6B,eAA7B,EAA6B,WAA7B,EAA6B,WAA7B,EAA6B,mBAA7B,EAA6B,cAA7B,EAA6B,GAA7B,EAA6B,kBAA7B,EAA6B,GAA7B;;AAyBkD;;AAAA;;AAC9C;;AAAA;;AAO4C;;AAAA;;AAC5C;;AAAA;;AASV;;AAAA,4FAAsB,OAAtB,EAAsB,kCAAtB;;AAUuC;;AAAA;;AAKhC;;AAAA,yJAAmB,QAAnB,EAAmB,UAAnB;;;;;;;;;sED7BhB7B,sB,EAAsB;cARlC,uDAQkC;eARxB;AACTzI,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD,CAHF;AAITQ,mBAAS,EAAE,CACT;AAACL,mBAAO,EAAE,iFAAV;AAAkCC,oBAAQ,EAAE0C;AAA5C,WADS;AAJF,S;AAQwB,Q;;;;;;;;;;;;;;;;kBA2C9B,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;AExFZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMhC,OAAO,GAAU,kEAAgBA,OAAvC;;QAOawJ,mB;AAcX,mCACS1J,SADT,EAEUsC,eAFV,EAGUsF,KAHV,EAI2B/D,IAJ3B,EAIiC;AAAA;;AAAA;;AAHxB,aAAA7D,SAAA,GAAAA,SAAA;AACC,aAAAsC,eAAA,GAAAA,eAAA;AACA,aAAAsF,KAAA,GAAAA,KAAA;AAfV,aAAA+B,QAAA,GAAwB,CACtB;AACE3L,YAAE,EAAC,IADL;AAEE6E,cAAI,EAAC,IAFP;AAGE+G,cAAI,EAAC,IAHP;AAIEC,eAAK,EAAC;AAJR,SADsB,CAAxB;;AAiBI,YAAKhG,IAAI,CAAC7F,EAAL,IAAW,IAAhB,EAAuB;AACrB,eAAK+I,IAAL,GAAY,QAAZ;AAEA,cAAIkB,MAAM,GAAG;AACXjK,cAAE,EAAC6F,IAAI,CAAC7F;AADG,WAAb;;AAGA,eAAK4J,KAAL,CAAWM,IAAX,CAAgBhI,OAAO,GAAG,gBAA1B,EAA4C+H,MAA5C,EAAoDnJ,SAApD,CACE,UAAC6K,QAAD,EAA0B;AACxB,mBAAI,CAACA,QAAL,GAAgBA,QAAhB;AACD,WAHH;AAKD,SAXD,MAWO;AACL,eAAK5C,IAAL,GAAY,MAAZ;AACD;AACF;;;;mCAEK,CACP;;;mCAEU;AACT,eAAK/G,SAAL,CAAe+I,KAAf;AACD;;;mCAEU;AACT,eAAK1E,KAAL,GAAa,IAAb;AACA,eAAK6D,IAAL,CAAU,KAAKyB,QAAL,CAAc,CAAd,CAAV;AACD;;;6BAEI5K,K,EAAY;AAAA;;AACf,eAAKuD,eAAL,CACK4F,IADL,CACUnJ,KADV,EAEKD,SAFL,CAGQ,UAAA6K,QAAQ,EAAI;AACV,mBAAI,CAAC3J,SAAL,CAAe+I,KAAf,CAAqBY,QAArB;AACD,WALT,EAMQ,UAAAtF,KAAK,EAAI;AACP,mBAAI,CAACoB,WAAL,CAAiBpB,KAAjB;AACD,WART;AAUA;;;oCAEUA,K,EAAW;AACrB,eAAKA,KAAL,GAAa,SAAb;;AACA,4CAAayB,MAAM,CAACjI,IAAP,CAAYwG,KAAK,CAACA,KAAN,CAAY0B,MAAxB,CAAb,qCAA+C;AAA3C,gBAAIrI,CAAC,qBAAL;AACF,iBAAK2G,KAAL,IAAc,6CAA2CA,KAAK,CAACA,KAAN,CAAY0B,MAAZ,CAAmBrI,CAAnB,EAAsB,CAAtB,CAA3C,GAAoE,kBAAlF;AACD;;AACD,eAAK2G,KAAL,IAAc,SAAd;AACD;;;;;;;uBAlEUqF,mB,EAAmB,sI,EAAA,kJ,EAAA,gI,EAAA,gEAkBpB,wEAlBoB,C;AAkBL,K;;;YAlBdA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,suB;AAAA;AAAA;ACbhC;;AACI;;AAAwB;;AAAQ;;AAChC;;AAAuD;AAAA,mBAAS,IAAAF,QAAA,EAAT;AAAmB,WAAnB;;AACnD;;AAAyB;;AAAO;;AACpC;;AACJ;;AAGA;;AACI;;AAA2B;AAAA,mBAAY,IAAAtC,QAAA,EAAZ;AAAsB,WAAtB;;AACvB;;AACI;;AACI;;AACI;;AAAO;;AAAQ;;AACf;;AAA6D;AAAA,gCAAsB,CAAtB,EAAyBrE,IAAzB,GAAuB,MAAvB;AAAuB,WAAvB;;AAA7D;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAI;;AACX;;AAA4D;AAAA,gCAAsB,CAAtB,EAAyB+G,IAAzB,GAAuB,MAAvB;AAAuB,WAAvB;;AAA5D;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAM;;AACb;;AAA+D;AAAA,gCAAsB,CAAtB,EAAyBC,KAAzB,GAAuB,MAAvB;AAAuB,WAAvB;;AAA/D;;AACJ;;AACJ;;AACA;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAqD;AAAA,mBAAS,IAAA3C,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAM;;AAChF;;AAA4C;AAAA,mBAAS,IAAAsC,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAQ;;AAC7E;;;;AApC4B;;AAAA;;AAaqD;;AAAA;;AAMD;;AAAA;;AAMG;;AAAA;;AAGtD;;AAAA,yJAAmB,QAAnB,EAAmB,UAAnB;;;;;;;;;sEDhBhBE,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTxK,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;kBAkB3B,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;AE/BZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiFgC;;AAA+C;;AAAW;;;;;;AAA3B;;AAAgB;;AAAA;;;;;;AAO/C;;AAAoD;;AAAU;;;;;;AAAzB;;AAAe;;AAAA;;;;ADhFpF,QAAMc,OAAO,GAAU,kEAAgBA,OAAvC;;QAOa4J,kB;AAsCX,kCACS9J,SADT,EAEUqC,cAFV,EAGW0H,SAHX,EAIWC,iBAJX,EAKWpC,KALX,EAM4B/D,IAN5B,EAMkC;AAAA;;AAAA;;AALzB,aAAA7D,SAAA,GAAAA,SAAA;AACC,aAAAqC,cAAA,GAAAA,cAAA;AACC,aAAA0H,SAAA,GAAAA,SAAA;AACA,aAAAC,iBAAA,GAAAA,iBAAA;AACA,aAAApC,KAAA,GAAAA,KAAA;AAzCX,aAAAQ,OAAA,GAAsB,CACpB;AACEpK,YAAE,EAAC,IADL;AAEE6E,cAAI,EAAC,IAFP;AAGEoH,mBAAS,EAAC,IAHZ;AAIEC,iBAAO,EAAC,IAJV;AAKEC,aAAG,EAAC,IALN;AAMEC,eAAK,EAAC,IANR;AAOEC,eAAK,EAAC,IAPR;AAQER,eAAK,EAAC;AARR,SADoB,CAAtB;AAaA,aAAAS,QAAA,GAAwB,CACtB;AACEtM,YAAE,EAAC,IADL;AAEEuM,oBAAU,EAAE,IAFd;AAGEC,gBAAM,EAAE,IAHV;AAIEC,qBAAW,EAAE,IAJf;AAKEC,gBAAM,EAAE,IALV;AAMEC,sBAAY,EAAE,IANhB;AAOEC,aAAG,EAAE;AAPP,SADsB,CAAxB;AAmBA,aAAAC,cAAA,GAAiB,KAAjB;;AAWI,YAAKhH,IAAI,CAAC7F,EAAL,IAAW,IAAhB,EAAuB;AACrB,eAAK+I,IAAL,GAAY,QAAZ;AAEA,cAAIkB,MAAM,GAAG;AACXjK,cAAE,EAAC6F,IAAI,CAAC7F;AADG,WAAb;;AAIA,eAAK4J,KAAL,CAAWM,IAAX,CAAgBhI,OAAO,GAAG,eAA1B,EAA2C+H,MAA3C,EAAmDnJ,SAAnD,CACE,UAACsJ,OAAD,EAAwB;AACtB,mBAAI,CAACA,OAAL,GAAgBA,OAAhB;;AAEA,gBAAKA,OAAO,CAAC,CAAD,CAAP,CAAW,aAAX,CAAL,EAAgC;AAC9B,qBAAI,CAACkC,QAAL,GAAgB,CACd;AACEtM,kBAAE,EAACoK,OAAO,CAAC,CAAD,CAAP,CAAW,aAAX,CADL;AAEEmC,0BAAU,EAAEnC,OAAO,CAAC,CAAD,CAAP,CAAW,YAAX,CAFd;AAGEoC,sBAAM,EAAEpC,OAAO,CAAC,CAAD,CAAP,CAAW,QAAX,CAHV;AAIEqC,2BAAW,EAAErC,OAAO,CAAC,CAAD,CAAP,CAAW,aAAX,CAJf;AAKEsC,sBAAM,EAAEtC,OAAO,CAAC,CAAD,CAAP,CAAW,QAAX,CALV;AAMEuC,4BAAY,EAAEvC,OAAO,CAAC,CAAD,CAAP,CAAW,cAAX,CANhB;AAOEwC,mBAAG,EAAExC,OAAO,CAAC,CAAD,CAAP,CAAW,KAAX;AAPP,eADc,CAAhB;AAWA,qBAAI,CAAC0C,EAAL,GAAU1C,OAAO,CAAC,CAAD,CAAP,CAAW,OAAX,CAAV;AACA,qBAAI,CAAC2C,SAAL,GAAiB3C,OAAO,CAAC,CAAD,CAAP,CAAW,cAAX,CAAjB;;AACA,kBAAK,OAAI,CAAC0C,EAAV,EAAe;AACb,uBAAI,CAACE,eAAL,CAAqB,OAAI,CAACF,EAA1B;AACD;AACF;AACF,WAtBH;AAyBD,SAhCD,MAgCO;AACL,eAAK/D,IAAL,GAAY,MAAZ;AACD;AACF;;;;mCAEK;AACN,eAAKkE,GAAL,GAAkB,KAAKlB,SAAL,CAAekB,GAAjC;AACD;;;wCAEeC,K,EAAc;AAAA;;AAC5B,cAAKA,KAAL,EAAa;AACX,iBAAKC,UAAL,GAAkB,CAChB;AACEnN,gBAAE,EAAC,CADL;AAEG6E,kBAAI,EAAC;AAFR,aADgB,CAAlB;AAOA,iBAAKmH,iBAAL,CACGoB,aADH,CACiBF,KADjB,EAEGpM,SAFH,CAGM,UAAAqM,UAAU;AAAA,qBAAI,OAAI,CAACA,UAAL,GAAkBA,UAAtB;AAAA,aAHhB,EAIM,UAAA9G,KAAK;AAAA,qBAAI,OAAI,CAACoB,WAAL,CAAiBpB,KAAjB,CAAJ;AAAA,aAJX;AAMD,WAdD,MAcO;AACL,iBAAK8G,UAAL,GAAkB,IAAlB;AACD;AACF;;;mCAGU;AACT,eAAKnL,SAAL,CAAe+I,KAAf;AACD;;;mCAEU;AACT,eAAK1E,KAAL,GAAa,IAAb;AAEA,eAAK+D,OAAL,CAAa,CAAb,EAAgB,YAAhB,IAAgC,KAAKkC,QAAL,CAAc,CAAd,EAAiB,YAAjB,CAAhC;AACA,eAAKlC,OAAL,CAAa,CAAb,EAAgB,QAAhB,IAA4B,KAAKkC,QAAL,CAAc,CAAd,EAAiB,QAAjB,CAA5B;AACA,eAAKlC,OAAL,CAAa,CAAb,EAAgB,aAAhB,IAAiC,KAAKkC,QAAL,CAAc,CAAd,EAAiB,aAAjB,CAAjC;AACA,eAAKlC,OAAL,CAAa,CAAb,EAAgB,QAAhB,IAA4B,KAAKkC,QAAL,CAAc,CAAd,EAAiB,QAAjB,CAA5B;AACA,eAAKlC,OAAL,CAAa,CAAb,EAAgB,cAAhB,IAAkC,KAAK2C,SAAvC;AACA,eAAK3C,OAAL,CAAa,CAAb,EAAgB,KAAhB,IAAyB,KAAKkC,QAAL,CAAc,CAAd,EAAiB,KAAjB,CAAzB;AACA,eAAKlC,OAAL,CAAa,CAAb,EAAgB,OAAhB,IAA2B,KAAK0C,EAAhC;AAEA,eAAK1C,OAAL,CAAa,CAAb,EAAgB,MAAhB,IAA0B,KAAKrB,IAA/B;AAEA,eAAKmB,IAAL,CAAU,KAAKE,OAAL,CAAa,CAAb,CAAV;AACD;;;6BAEIrJ,K,EAAY;AAAA;;AACf,eAAKsD,cAAL,CACK6F,IADL,CACUnJ,KADV,EAEKD,SAFL,CAGQ,UAAA+E,IAAI,EAAI;AACN,mBAAI,CAAC7D,SAAL,CAAe+I,KAAf,CAAqBlF,IAArB;AACD,WALT,EAMQ,UAAAQ,KAAK,EAAI;AACP,mBAAI,CAACoB,WAAL,CAAiBpB,KAAjB;AACD,WART;AAUA;;;oCAEUA,K,EAAW;AACrB,eAAKA,KAAL,GAAa,SAAb;;AACA,4CAAayB,MAAM,CAACjI,IAAP,CAAYwG,KAAK,CAACA,KAAN,CAAY0B,MAAxB,CAAb,qCAA+C;AAA3C,gBAAIrI,CAAC,qBAAL;AACF,iBAAK2G,KAAL,IAAc,6CAA2CA,KAAK,CAACA,KAAN,CAAY0B,MAAZ,CAAmBrI,CAAnB,EAAsB,CAAtB,CAA3C,GAAoE,kBAAlF;AACD;;AACD,eAAK2G,KAAL,IAAc,SAAd;AACD;;;;;;;uBAlJUyF,kB,EAAkB,sI,EAAA,gJ,EAAA,+H,EAAA,6I,EAAA,gI,EAAA,gEA4ClB,wEA5CkB,C;AA4CH,K;;;YA5CfA,kB;AAAkB,qC;AAAA,e;AAAA,c;AAAA,gzD;AAAA;AAAA;ACf/B;;AACI;;AAAwB;;AAAQ;;AAChC;;AAAuD;AAAA,mBAAS,IAAAN,QAAA,EAAT;AAAmB,WAAnB;;AACnD;;AAAyB;;AAAO;;AACpC;;AACJ;;AAGA;;AACI;;AAA2B;AAAA,mBAAY,IAAAtC,QAAA,EAAZ;AAAsB,WAAtB;;AACvB;;AACI;;AACE;;AACE;;AACI;;AACI;;AACI;;AAAO;;AAAI;;AACX;;AAA6D;AAAA,+BAAqB,CAArB,EAAwBrE,IAAxB,GAAsB,MAAtB;AAAsB,WAAtB;;AAA7D;;AACJ;;AACA;;AACI;;AAAO;;AAAS;;AAChB;;AAAyD;AAAA,+BAAqB,CAArB,EAAwBoH,SAAxB,GAAsB,MAAtB;AAAsB,WAAtB;;AAAzD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAG;;AACV;;AAAmD;AAAA,+BAAqB,CAArB,EAAwBE,GAAxB,GAAsB,MAAtB;AAAsB,WAAtB;;AAAnD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAM;;AACb;;AAAqD;AAAA,+BAAqB,CAArB,EAAwBC,KAAxB,GAAsB,MAAtB;AAAsB,WAAtB;;AAArD;;AACJ;;AACA;;AACI;;AAAO;;AAAM;;AACb;;AAAqD;AAAA,+BAAqB,CAArB,EAAwBC,KAAxB,GAAsB,MAAtB;AAAsB,WAAtB;;AAArD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAM;;AACb;;AAAsD;AAAA,+BAAqB,CAArB,EAAwBR,KAAxB,GAAsB,MAAtB;AAAsB,WAAtB;;AAAtD;;AACJ;;AACJ;;AACJ;;AACF;;AACF;;AACA;;AACE;;AACE;;AACI;;AACI;;AACI;;AAAO;;AAAG;;AACV;;AAA0D;AAAA,gCAAsB,CAAtB,EAAyBU,UAAzB,GAAuB,MAAvB;AAAuB,WAAvB;;AAA1D;;AACJ;;AACA;;AACI;;AAAO;;AAAM;;AACb;;AAAsD;AAAA,gCAAsB,CAAtB,EAAyBG,MAAzB,GAAuB,MAAvB;AAAuB,WAAvB;;AAAtD;;AACJ;;AACA;;AACI;;AAAO;;AAAM;;AACb;;AAA8D;AAAA,gCAAsB,CAAtB,EAAyBF,MAAzB,GAAuB,MAAvB;AAAuB,WAAvB;;AAA9D;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAM;;AACb;;AAA2D;AAAA,gCAAsB,CAAtB,EAAyBC,WAAzB,GAAuB,MAAvB;AAAuB,WAAvB;;AAA3D;;AACJ;;AACA;;AACI;;AAAO;;AAAG;;AACV;;AAAyD;AAAA,gCAAsB,CAAtB,EAAyBG,GAAzB,GAAuB,MAAvB;AAAuB,WAAvB;;AAAzD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAE;;AACT;;AAAwC;AAAA;AAAA,aAAgB,QAAhB,EAAgB;AAAA,mBAAW,IAAAI,eAAA,qBAAX;AAA+C,WAA/D;;AACpC;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AAAO;;AAAS;;AAChB;;AAA+C;AAAA;AAAA;;AAC3C;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACF;;AACF;;AACJ;;AAEA;;AACJ;;AACJ;;AAEA;;AACI;;AAAqD;AAAA,mBAAS,IAAA9D,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAM;;AAChF;;AAA4C;AAAA,mBAAS,IAAAsC,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAQ;;AAC7E;;;;AAvG4B;;AAAA;;AAgB6D;;AAAA;;AAIJ;;AAAA;;AAMN;;AAAA;;AAME;;AAAA;;AAIA;;AAAA;;AAMC;;AAAA;;AAYI;;AAAA;;AAIJ;;AAAA;;AAIQ;;AAAA;;AAMH;;AAAA;;AAIF;;AAAA;;AAMjB;;AAAA;;AAC5B;;AAAA;;AACA;;AAAA;;AAKmC;;AAAA;;AACnC;;AAAA;;AACA;;AAAA;;AASf;;AAAA,yJAAmB,QAAnB,EAAmB,UAAnB;;;;;;;;;sEDlFZM,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT5K,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;kBA4CzB,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;AE3Db;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACuBY;;AACI;;AACI;;AAA0F;AAAA;;AAAA;;AAAA;AAAA;;AAA1F;;AACA;;AAAuD;;AAAW;;AACtE;;AACJ;;;;;;AAHkG;;AAAA,wGAA+B,OAA/B,EAA+B,IAA/B;;;;;;;;AAIlG;;AACI;;AACI;;AAAO;;AAAK;;AACZ;;AAAqE;AAAA;;AAAA;;AAAA,kCAAqB,CAArB,EAAwBiM,QAAxB,GAAsB,MAAtB;AAAsB,SAAtB;;AAArE;;AACJ;;AACJ;;;;;;AAF6E;;AAAA;;;;;;;;AAG7E;;AACI;;AACI;;AAAO;;AAAoB;;AAC3B;;AAAkF;AAAA;;AAAA;;AAAA;AAAA;;AAAlF;;AACJ;;AACJ;;;;;;AAF0F;;AAAA;;;;ADhCtG,QAAMnL,OAAO,GAAU,kEAAgBA,OAAvC;;QAOaoL,kB;AAmBX,kCACStL,SADT,EAEUuL,cAFV,EAGU3D,KAHV,EAI2B/D,IAJ3B,EAIiC;AAAA;;AAAA;;AAHxB,aAAA7D,SAAA,GAAAA,SAAA;AACC,aAAAuL,cAAA,GAAAA,cAAA;AACA,aAAA3D,KAAA,GAAAA,KAAA;AApBV,aAAA4D,OAAA,GAAsB,CACpB;AACExN,YAAE,EAAC,IADL;AAEEyN,cAAI,EAAC,IAFP;AAGE5B,eAAK,EAAC,IAHR;AAIEwB,kBAAQ,EAAC;AAJX,SADoB,CAAtB;AASO,aAAApI,IAAA,GAAO;AACZyI,sBAAY,EAAE,IADF;AAEZC,+BAAqB,EAAE;AAFX,SAAP;;AAaH,YAAK9H,IAAI,CAAC7F,EAAL,IAAW,IAAhB,EAAuB;AACrB,eAAK+I,IAAL,GAAY,QAAZ;AAEA,cAAIkB,MAAM,GAAG;AACXjK,cAAE,EAAC6F,IAAI,CAAC7F;AADG,WAAb;;AAGA,eAAK4J,KAAL,CAAWM,IAAX,CAAgBhI,OAAO,GAAG,eAA1B,EAA2C+H,MAA3C,EAAmDnJ,SAAnD,CACE,UAAC0M,OAAD,EAAwB;AACtB,mBAAI,CAACA,OAAL,GAAeA,OAAf;AACD,WAHH;AAKD,SAXD,MAWO;AACL,eAAKzE,IAAL,GAAY,MAAZ;AACA,eAAK9D,IAAL,CAAUyI,YAAV,GAAyB,IAAzB;AACD;AACF;;;;mCAEK,CACP;;;mCAEU;AACT,eAAK1L,SAAL,CAAe+I,KAAf;AACD;;;mCAEU;AACT,eAAK1E,KAAL,GAAa,IAAb;AAEA,eAAKmH,OAAL,CAAa,CAAb,EAAgB,cAAhB,IAAkC,KAAKvI,IAAL,CAAU,cAAV,CAAlC;AACA,eAAKuI,OAAL,CAAa,CAAb,EAAgB,uBAAhB,IAA2C,KAAKvI,IAAL,CAAU,uBAAV,CAA3C;AACA,eAAKiF,IAAL,CAAU,KAAKsD,OAAL,CAAa,CAAb,CAAV;AACD;;;6BAEIzM,K,EAAY;AAAA;;AACf,eAAKwM,cAAL,CACKrD,IADL,CACUnJ,KADV,EAEKD,SAFL,CAGQ,UAAA+E,IAAI,EAAI;AACN,mBAAI,CAAC7D,SAAL,CAAe+I,KAAf,CAAqBlF,IAArB;AACD,WALT,EAMQ,UAAAQ,KAAK,EAAI;AACP,mBAAI,CAACoB,WAAL,CAAiBpB,KAAjB;AACD,WART;AAUA;;;oCAEUA,K,EAAW;AACrB,eAAKA,KAAL,GAAa,SAAb;;AACA,4CAAayB,MAAM,CAACjI,IAAP,CAAYwG,KAAK,CAACA,KAAN,CAAY0B,MAAxB,CAAb,qCAA+C;AAA3C,gBAAIrI,CAAC,qBAAL;AACF,iBAAK2G,KAAL,IAAc,6CAA2CA,KAAK,CAACA,KAAN,CAAY0B,MAAZ,CAAmBrI,CAAnB,EAAsB,CAAtB,CAA3C,GAAoE,kBAAlF;AACD;;AACD,eAAK2G,KAAL,IAAc,SAAd;AACD;;;;;;;uBA3EUiH,kB,EAAkB,sI,EAAA,yI,EAAA,gI,EAAA,gEAuBnB,wEAvBmB,C;AAuBJ,K;;;YAvBdA,kB;AAAkB,qC;AAAA,e;AAAA,a;AAAA,0mC;AAAA;AAAA;ACb/B;;AACI;;AAAwB;;AAAQ;;AAChC;;AAAuD;AAAA,mBAAS,IAAA9B,QAAA,EAAT;AAAmB,WAAnB;;AACnD;;AAAyB;;AAAO;;AACpC;;AACJ;;AAGA;;AACI;;AAA2B;AAAA,mBAAY,IAAAtC,QAAA,EAAZ;AAAsB,WAAtB;;AACvB;;AACI;;AACI;;AACI;;AAAO;;AAAO;;AACd;;AAA6D;AAAA,+BAAqB,CAArB,EAAwBuE,IAAxB,GAAsB,MAAtB;AAAsB,WAAtB;;AAA7D;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAM;;AACb;;AAA+D;AAAA,+BAAqB,CAArB,EAAwB5B,KAAxB,GAAsB,MAAtB;AAAsB,WAAtB;;AAA/D;;AACJ;;AACJ;;AACA;;AAMA;;AAMA;;AAMA;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAqD;AAAA,mBAAS,IAAA3C,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAM;;AAChF;;AAA4C;AAAA,mBAAS,IAAAsC,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAQ;;AAC7E;;;;AAhD4B;;AAAA;;AAaqD;;AAAA;;AAME;;AAAA;;AAGtD;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA,yJAAmB,QAAnB,EAAmB,UAAnB;;;;;;;;;sED5BhB8B,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTpM,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;kBAuB1B,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEpCZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBY;;AAAsD;;AAAE;;;;;;AACxD;;AAAoC;;AAAW;;;;;;AAAX;;AAAA;;;;;;AAIpC;;AAAsD;;AAAI;;;;;;AAC1D;;AAAoC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAIpC;;AAAsD;;AAAI;;;;;;AAC1D;;AAAoC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAIpC;;AAAsD;;AAAM;;;;;;AAC5D;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAIpC;;;;;;;;AACA;;AACA;;AAAqD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAM;;AACvF;;AAAuD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAM;;AAC7F;;;;;;AAGJ;;;;;;AACA;;;;;;AAGA;;AAEA;;AAIA;;;;;;;;QDzCKwM,gB;AASX,gCACUvJ,cADV,EAEUI,MAFV,EAE2B;AAAA;;AADjB,aAAAJ,cAAA,GAAAA,cAAA;AACA,aAAAI,MAAA,GAAAA,MAAA;AARV,aAAAiB,gBAAA,GAA6B,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,OAAvB,EAAgC,SAAhC,CAA7B;AAIA,aAAAC,SAAA,GAAY,IAAZ;AAKO;;;;mCAEC;AAAA;;AACN,eAAKtB,cAAL,CAAoBoG,WAApB,GACI3J,SADJ,CAEI,UAAA+E,IAAI,EAAI;AACN,mBAAI,CAACF,SAAL,GAAiB,KAAjB;AACA,mBAAI,CAACW,QAAL,GAAgBT,IAAhB,CAFM,CAGN;;AACA,mBAAI,CAACI,UAAL,GAAmB,IAAI,0EAAJ,CAAuB,OAAI,CAACK,QAA5B,CAAnB;AACA,mBAAI,CAACL,UAAL,CAAgBC,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,mBAAI,CAACD,UAAL,CAAgBE,IAAhB,GAAuB,OAAI,CAACA,IAA5B;AACD,WATL,EAUI,UAAAE,KAAK;AAAA,mBAAI,OAAI,CAACV,SAAL,GAAiB,KAArB;AAAA,WAVT;AAYD;;;sCAEa;AACZ,eAAKW,QAAL,GAAgB,IAAhB;AACD;;;sCAEaT,I,EAAI;AAChB,eAAKS,QAAL,CAAcK,IAAd,CAAmBd,IAAI,CAAC,CAAD,CAAvB;;AACA,eAAKI,UAAL,CAAgBW,yBAAhB;AACD;;;yCACgBf,I,EAAM;AACrB,cAAIgB,CAAC,GAAG,KAAKP,QAAL,CAAcQ,SAAd,CAAwB,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAAC/G,EAAF,IAAQ6F,IAAI,CAAC,CAAD,CAAJ,CAAQ7F,EAAvB;AAAA,WAAxB,CAAR;;AACA,cAAI6G,CAAC,IAAE,CAAP,EAAU;AACR,iBAAKP,QAAL,CAAcO,CAAd,IAAmBhB,IAAI,CAAC,CAAD,CAAvB;AACD;;AACD,eAAKI,UAAL,CAAgBW,yBAAhB;AACD;;;sCACa5G,E,EAAI;AAChB,cAAI6G,CAAC,GAAG,KAAKP,QAAL,CAAcQ,SAAd,CAAwB,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAAC/G,EAAF,IAAQA,EAAf;AAAA,WAAxB,CAAR;;AACA,cAAI6G,CAAC,IAAE,CAAP,EAAU;AACR,iBAAKP,QAAL,CAAcU,MAAd,CAAqBH,CAArB,EAAuB,CAAvB;AACD;;AACD,eAAKZ,UAAL,CAAgBW,yBAAhB;;AACA,eAAKvC,cAAL,CAAoB4C,MAApB,CAA2BjH,EAA3B;AACD;;;oCAEWuG,K,EAAc;AACxB,cAAMW,WAAW,GAAIX,KAAK,CAACY,MAAN,CAAkCpG,KAAvD;AACA,eAAKkF,UAAL,CAAgBmB,MAAhB,GAAyBF,WAAW,CAACG,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,cAAI,KAAKrB,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,iBAAKD,UAAL,CAAgBC,SAAhB,CAA0BqB,SAA1B;AACD;AACF;;;kCAESvH,E,EAAY;AAAA;;AACpB,cAAM2I,YAAY,GAAG,IAAI,wEAAJ,EAArB;AAEAA,sBAAY,CAAC9C,IAAb,GAAoB;AAChB7F,cAAE,EAAEA;AADY,WAApB;AAIA,cAAMgC,SAAS,GAAG,KAAKyC,MAAL,CAAYmE,IAAZ,CAAiB,sFAAjB,EAAoCD,YAApC,CAAlB;AAEA3G,mBAAS,CAAC6G,WAAV,GAAwB/H,SAAxB,CACI,UAACgI,MAAD,EAAY;AACV,gBAAIA,MAAJ,EAAY;AACV,kBAAKA,MAAM,CAAC,CAAD,CAAN,CAAUC,IAAV,IAAkB,QAAvB,EAAkC;AAChC,uBAAI,CAACC,gBAAL,CAAsBF,MAAtB;AACD,eAFD,MAEO;AACL,uBAAI,CAACG,aAAL,CAAmBH,MAAnB;AACD;AACF;AACF,WATL;AAWC;;;;;;;uBAlFQ8E,gB,EAAgB,yI,EAAA,mI;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA;AAAA;0EAKhB,wE,EAAc,I;;0EACd,8D,EAAS,I;;;;;;;;;;;;;;;ACpBtB;;AACI;;AACI;;AACI;;AACI;;AAA8C;AAAA,mBAAS,IAAAtE,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAY;;AACpF;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;AAAM;;AACjB;;AAAgB;AAAA,mBAAS,IAAAC,WAAA,QAAT;AAA4B,WAA5B;;AAAhB;;AACJ;;AAEA;;AACA;;AACI;;AACA;;AACJ;;AAEA;;AACI;;AACA;;AACJ;;AAEA;;AACI;;AACA;;AACJ;;AAEA;;AACI;;AACA;;AACJ;;AAEA;;AACI;;AACA;;AAIJ;;AAEA;;AACA;;AAEA;;AACA;;AAOA;;AACJ;;AACJ;;;;AA1CyB;;AAAA;;AA6BE;;AAAA;;AACP;;AAAA;;AAGF;;AAAA;;AAOK;;AAAA;;;;;;;;;sED1CVqE,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT1M,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;gBAK1B,uD;iBAAU,wE,EAAc;AAAC,sBAAQ;AAAT,W;;;gBACxB,uD;iBAAU,8D,EAAS;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;AEpBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYayM,c;AASX,8BACUC,MADV,EAEU/L,KAFV,EAGUpB,MAHV,EAIUD,IAJV,EAKU6M,cALV,EAKwC;AAAA;;AAJ9B,aAAAO,MAAA,GAAAA,MAAA;AACA,aAAA/L,KAAA,GAAAA,KAAA;AACA,aAAApB,MAAA,GAAAA,MAAA;AACA,aAAAD,IAAA,GAAAA,IAAA;AACA,aAAA6M,cAAA,GAAAA,cAAA;AAZH,aAAAtI,IAAA,GAAO;AACZ4G,eAAK,EAAE,IADK;AAEZwB,kBAAQ,EAAE;AAFE,SAAP;AAKA,aAAAhH,KAAA,GAAQ,IAAR;AAQF;;;;mCAEM;AAAA;;AACT,eAAKyH,MAAL,CAAYC,KAAZ,CAAkB,KAAK9I,IAAvB,EAA6BnE,SAA7B,CACE,UAAA+E,IAAI;AAAA,mBAAI,OAAI,CAACmI,cAAL,CAAoBnI,IAApB,CAAJ;AAAA,WADN,EAEE,UAAAQ,KAAK;AAAA,mBAAI,OAAI,CAACoB,WAAL,CAAiBpB,KAAjB,CAAJ;AAAA,WAFP;AAID;;;uCAEcR,I,EAAM;AACnB,eAAK9D,KAAL,CAAWU,MAAX,CAAkBoD,IAAI,CAACoI,YAAvB;AACA,eAAKvN,IAAL,CAAUqC,gBAAV,CAA2B,IAA3B;AACA,eAAKwK,cAAL,CAAoBW,EAApB;AACA,eAAKvN,MAAL,CAAYM,aAAZ,CAA0B,eAA1B;AACD;;;oCAEWoF,K,EAAO;AACjB,eAAKA,KAAL,GAAaA,KAAK,CAACA,KAAN,CAAYA,KAAzB;AACD;;;mCAEO,CACP;;;;;;;uBApCUwH,c,EAAc,uI,EAAA,qI,EAAA,uH,EAAA,mI,EAAA,yI;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,oyB;AAAA;AAAA;ACZ3B;;AACE;;AACE;;AAAyB;;AAAU;;AACnC;;AACE;;AAAwB;AAAA,mBAAY,IAAA3E,QAAA,EAAZ;AAAsB,WAAtB;;AAEtB;;AACE;;AACF;;AACA;;AACE;;AAAyD;;AAAK;;AAC9D;;AACE;;AAA2F;AAAA;AAAA;;AAA3F;;AACF;;AACF;;AAEA;;AACE;;AAA4D;;AAAK;;AACjE;;AACE;;AAAuG;AAAA;AAAA;;AAAvG;;AAEF;;AACF;;AAEA;;AACE;;AAEE;;AAA4E;;AAAM;;AAIpF;;AACF;;AACA;;AACE;;AAAwC;;AAAmB;;AAC7D;;AACF;;AACF;;AACF;;AACF;;;;;;AAjCwC;;AAAA;;AAC9B;;AAAA;;AAK6F;;AAAA;;AAOY;;AAAA;;AAQzD;;AAAA;;;;;;;;;sEDf7C2E,c,EAAc;cAL1B,uDAK0B;eALhB;AACT3M,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;ACgCQ;;AAAgI;;AAAY;;;;AAAxH,sJAAgC,kBAAhC,EAAgC,qEAAhC;;;;;;AAGpB;;AAA6D;;AAAS;;;;;;AAGtE;;AAA4D;;AAAQ;;;;;;;;;;AAOtE;;AACE;;AACE;;AAAiG;;AAAM;;AACzG;;AACF;;;;AAFwB;;AAAA,sJAAyB,kBAAzB,EAAyB,qEAAzB;;;;;;;;;;;;AAGxB;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAuG;;AAAQ;;AAC/G;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAI;;AAC3D;;AACF;;;;AAHuB;;AAAA,sJAA4B,kBAA5B,EAA4B,qEAA5B;;;;;;;;;;;;AD9C7B,QAAMc,OAAO,GAAU,kEAAgBA,OAAvC;;QAOaiM,e;AAKX;AAEA,+BACUzN,IADV,EAEUC,MAFV,EAGUmN,MAHV,EAIU/L,KAJV,EAKE;AACQqM,YANV,EAM+B;AAAA;;AALrB,aAAA1N,IAAA,GAAAA,IAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAmN,MAAA,GAAAA,MAAA;AACA,aAAA/L,KAAA,GAAAA,KAAA;AAEA,aAAAqM,MAAA,GAAAA,MAAA;AAVV,aAAAC,SAAA,GAAY,IAAZ;AAWI;;;;mCAEO;AAAA;;AACT,eAAK3N,IAAL,CAAUG,UAAV,CAAqBC,SAArB,CAA+B,UAAAC,KAAK;AAAA,mBAAI,OAAI,CAACC,QAAL,GAAgBD,KAApB;AAAA,WAApC;AAEA;;;AAGD;;;+BAEMwF,K,EAAmB;AACxB,eAAKuH,MAAL,CAAYQ,MAAZ;AACA/H,eAAK,CAACgI,cAAN;AACA,eAAKxM,KAAL,CAAWe,MAAX;AACA,eAAKpC,IAAL,CAAUqC,gBAAV,CAA2B,KAA3B;AACA,eAAKqL,MAAL,CAAYI,KAAZ;AACA,eAAK7N,MAAL,CAAYM,aAAZ,CAA0B,QAA1B;AACD;;;;;;;uBA/BUkN,e,EAAe,mI,EAAA,uH,EAAA,uI,EAAA,qI,EAAA,0H;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,c;AAAA,4lD;AAAA;AAAA;ACQ5B;;AACE;;AAAyD;;AAAa;;AACtE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAKA;;AASF;;AACF;;AACF;;;;AApC0B;;AAAA;;AAO6F;;AAAA;;AAE5F;;AAAA,yJAA6B,kBAA7B,EAA6B,sEAA7B;;AACyB;;AAAA;;AAEzB;;AAAA,yJAA4B,kBAA5B,EAA4B,sEAA5B;;AACwB;;AAAA;;AAKpB;;AAAA;;AAErB;;AAAA;;AAKA;;AAAA;;;;;;;;;sEDlCGA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTjN,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaqN,qB;AAMX,qCACUC,MADV,EAEUC,MAFV,EAGUP,MAHV,EAG+B;AAAA;;AAFrB,aAAAM,MAAA,GAAAA,MAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAP,MAAA,GAAAA,MAAA;AARH,aAAAnJ,IAAA,GAAO;AACZ4G,eAAK,EAAE;AADK,SAAP;AASF;;;;mCAEM,CACV;;;mCAGU;AAAA;;AACT,eAAKuC,MAAL,CAAYQ,IAAZ,CAAiB,SAAjB,EAA4B;AAACC,mBAAO,EAAC;AAAT,WAA5B;AACA,eAAKH,MAAL,CAAYI,qBAAZ,CAAkC,KAAK7J,IAAvC,EAA6CnE,SAA7C,CACE,UAAA+E,IAAI;AAAA,mBAAI,OAAI,CAACmI,cAAL,CAAoBnI,IAApB,CAAJ;AAAA,WADN,EAEE,UAAAQ,KAAK;AAAA,mBAAI,OAAI,CAACsI,MAAL,CAAYtI,KAAZ,CAAkBA,KAAK,CAACA,KAAN,CAAYA,KAA9B,CAAJ;AAAA,WAFP;AAID;;;uCAEc0I,G,EAAK;AAClB,eAAKX,MAAL,CAAYY,OAAZ,CAAoBD,GAAG,CAAClJ,IAAxB,EAA6B;AAACgJ,mBAAO,EAAC;AAAT,WAA7B;AACA,eAAK5J,IAAL,CAAU4G,KAAV,GAAkB,IAAlB;AACD;;;;;;;uBA3BU4C,qB,EAAqB,uI,EAAA,0H,EAAA,0H;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,se;AAAA;AAAA;ACTlC;;AACA;;AACI;;AAAyB;;AAAiC;;AAC1D;;AACA;;AAA+B;AAAA,mBAAY,IAAAvF,QAAA,EAAZ;AAAsB,WAAtB;;AAC3B;;AACA;;AAAyD;;AAAM;;AAC/D;;AACI;;AAA2F;AAAA;AAAA;;AAA3F;;AACJ;;AACA;;AAEA;;AACA;;AAEI;;AAAmF;;AAAS;;AAEhG;;AACA;;AACJ;;AACA;;AACJ;;AACA;;;;;;AAduG;;AAAA;;AAO7C;;AAAA;;;;;;;;;sEDN7CuF,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTvN,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AETlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa6N,sB;AAQX,sCACUC,KADV,EAEUpB,MAFV,EAGUnN,MAHV,EAIUwO,MAJV,EAI+B;AAAA;;AAAA;;AAHrB,aAAAD,KAAA,GAAAA,KAAA;AACA,aAAApB,MAAA,GAAAA,MAAA;AACA,aAAAnN,MAAA,GAAAA,MAAA;AACA,aAAAwO,MAAA,GAAAA,MAAA;AAXH,aAAA9I,KAAA,GAAU,EAAV;AACA,aAAApB,IAAA,GAAO;AACZ4G,eAAK,EAAG,IADI;AAEZwB,kBAAQ,EAAG,IAFC;AAGZM,+BAAqB,EAAC,IAHV;AAIZyB,oBAAU,EAAE;AAJA,SAAP;AAYLF,aAAK,CAACG,WAAN,CAAkBvO,SAAlB,CAA4B,UAAAwO,MAAM,EAAI;AACpC,iBAAI,CAACrK,IAAL,CAAUmK,UAAV,GAAuBE,MAAM,CAAC,OAAD,CAA7B;AACD,SAFD;AAGD;;;;mCAEO;AAAA;;AACP,eAAKxB,MAAL,CAAYyB,cAAZ,CAA2B,KAAKtK,IAAhC,EAAsCnE,SAAtC,CACE,UAAA+E,IAAI;AAAA,mBAAI,OAAI,CAACmI,cAAL,CAAoBnI,IAApB,CAAJ;AAAA,WADN,EAEE,UAAAQ,KAAK;AAAA,mBAAI,OAAI,CAACoB,WAAL,CAAiBpB,KAAjB,CAAJ;AAAA,WAFP;AAIA;;;uCACcR,I,EAAI;AAAA;;AAEjB,cAAI2J,OAAO,GAAG,KAAK7O,MAAnB;AACA,eAAKwO,MAAL,CAAYM,OAAZ,CAAoB,oCAApB,EAA0D;AACxDC,mBAAO,EAAC,CACN;AAACC,kBAAI,EAAE,MAAP;AACAC,oBAAM,EAAE,gBAAAC,MAAM,EAAG;AACdL,uBAAO,CAACvO,aAAR,CAAsB,QAAtB,GACA,OAAI,CAACkO,MAAL,CAAYrM,MAAZ,CAAmB+M,MAAM,CAAC7P,EAA1B,CADA;AAEA;AAJH,aADM;AADgD,WAA1D;AAWD;;;oCAEWqG,K,EAAK;AACf,eAAKA,KAAL,GAAaA,KAAK,CAACA,KAAN,CAAY0B,MAAzB;AACD;;;mCACU,CACV;;;;;;;uBA7CUkH,sB,EAAsB,+H,EAAA,uI,EAAA,uH,EAAA,0H;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,c;AAAA,m9B;AAAA;AAAA;ACVnC;;AACI;;AACE;;AAAyB;;AAAe;;AACxC;;AACE;;AAAgC;AAAA,mBAAY,IAAA/F,QAAA,EAAZ;AAAsB,WAAtB;;AAE9B;;AACE;;AAAyD;;AAAM;;AAC/D;;AACE;;AAA2F;AAAA;AAAA;;AAA3F;;AACA;;AAAkD;;AAAe;;AACnE;;AACF;;AAEA;;AACE;;AAA4D;;AAAK;;AACjE;;AACE;;AAAuG;AAAA;AAAA;;AAAvG;;AAEE;;AAAqD;;AAAkB;;AAC3E;;AACF;;AAEA;;AACE;;AAA4D;;AAAY;;AACxE;;AACE;;AAA4H;AAAA;AAAA;;AAA5H;;AAEE;;AAAkE;;AAA+B;;AACrG;;AACF;;AAEA;;AACE;;AAEE;;AAAoF;;AAAS;;AAC/F;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AAhCuG;;AAAA;;AACjE;;AAAA;;AAAwB;;AAAA;;AAOqD;;AAAA;;AAE3E;;AAAA;;AAA2B;;AAAA;;AAOqE;;AAAA;;AAEhG;;AAAA;;AAAwC;;AAAA;;AAOtB;;AAAA;;;;;;;;;sEDzB/C+F,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT/N,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEVnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa0O,e;AAUX,+BACUhC,MADV,EAEU/L,KAFV,EAGUpB,MAHV,EAGwB;AAAA;;AAFd,aAAAmN,MAAA,GAAAA,MAAA;AACA,aAAA/L,KAAA,GAAAA,KAAA;AACA,aAAApB,MAAA,GAAAA,MAAA;AAXH,aAAAsE,IAAA,GAAO;AACZ4G,eAAK,EAAE,IADK;AAEZ4B,cAAI,EAAE,IAFM;AAGZJ,kBAAQ,EAAE,IAHE;AAIZM,+BAAqB,EAAE;AAJX,SAAP;AAMA,aAAAtH,KAAA,GAAY,EAAZ;AAMF;;;;mCAEM;AAAA;;AACT,eAAKyH,MAAL,CAAYiC,MAAZ,CAAmB,KAAK9K,IAAxB,EAA8BnE,SAA9B,CACE,UAAA+E,IAAI;AAAA,mBAAI,OAAI,CAACmI,cAAL,CAAoBnI,IAApB,CAAJ;AAAA,WADN,EAEE,UAAAQ,KAAK;AAAA,mBAAI,OAAI,CAACoB,WAAL,CAAiBpB,KAAjB,CAAJ;AAAA,WAFP;AAID;;;uCACcR,I,EAAM;AACnB,eAAK9D,KAAL,CAAWU,MAAX,CAAkBoD,IAAI,CAACoI,YAAvB;AACA,eAAKtN,MAAL,CAAYM,aAAZ,CAA0B,eAA1B;AACD;;;oCAEWoF,K,EAAO;AACjB,eAAKA,KAAL,GAAaA,KAAK,CAACA,KAAN,CAAY0B,MAAzB;AACD;;;mCAEO,CACP;;;;;;;uBAhCU+H,e,EAAe,uI,EAAA,qI,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,c;AAAA,ovC;AAAA;AAAA;ACV5B;;AACE;;AACE;;AAAyB;;AAAa;;AACtC;;AACE;;AAAyB;AAAA,mBAAY,IAAA5G,QAAA,EAAZ;AAAsB,WAAtB;;AACvB;;AACE;;AAAwD;;AAAI;;AAC5D;;AACE;;AAAuF;AAAA;AAAA;;AAAvF;;AACA;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAAyD;;AAAK;;AAC9D;;AACE;;AAA2F;AAAA;AAAA;;AAA3F;;AACA;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAAwE;;AAAQ;;AAChF;;AACE;;AACE;AAAA;AAAA;;AADF;;AAEA;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAA4D;;AAAgB;;AAC5E;;AACE;;AAAoH;AAAA;AAAA;;AAApH;;AAEF;;AACF;;AAEA;;AACE;;AAEE;;AAA6E;;AAAO;;AAEpF;;AAAwD;;AAAO;;AAEjE;;AACF;;AAEF;;AACF;;AACF;;AACF;;;;;;AAjDmG;;AAAA;;AACvD;;AAAA;;AAC9B;;AAAA;;AAQyF;;AAAA;;AAC3D;;AAAA;;AAC9B;;AAAA;;AASA;;AAAA;;AAC8B;;AAAA;;AAC9B;;AAAA;;AAQkH;;AAAA;;AAQtE;;AAAA;;;;;;;;;sEDrC7C4G,e,EAAe;cAL3B,uDAK2B;eALjB;AACT5O,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACkBY;;AAAsD;;AAAE;;;;;;AACxD;;AAAoC;;AAAW;;;;;;AAAX;;AAAA;;;;;;AAIpC;;AAAsD;;AAAI;;;;;;AAC1D;;AAAoC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAIpC;;AAAsD;;AAAM;;;;;;AAC5D;;AAAoC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAIpC;;;;;;;;AACA;;AACA;;AAAqD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAM;;AACvF;;AAAuD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAM;;AAC7F;;;;;;AAGJ;;;;;;AACA;;;;;;AAGA;;AAEA;;AAIA;;;;;;;;QDpCK4O,gB;AAUX,gCACUzC,cADV,EAEU9I,MAFV,EAE2B;AAAA;;AADjB,aAAA8I,cAAA,GAAAA,cAAA;AACA,aAAA9I,MAAA,GAAAA,MAAA;AARV,aAAAiB,gBAAA,GAA6B,CAAC,IAAD,EAAO,MAAP,EAAe,OAAf,EAAwB,SAAxB,CAA7B;AAIA,aAAAC,SAAA,GAAY,IAAZ;AAKO;;;;mCAEC;AAAA;;AACN,eAAK4H,cAAL,CAAoB0C,WAApB,GACInP,SADJ,CAEI,UAAA+E,IAAI,EAAI;AACN,mBAAI,CAACF,SAAL,GAAiB,KAAjB;AACA,mBAAI,CAACuK,QAAL,GAAgBrK,IAAhB,CAFM,CAGN;;AACA,mBAAI,CAACI,UAAL,GAAmB,IAAI,0EAAJ,CAAuB,OAAI,CAACiK,QAA5B,CAAnB;AACA,mBAAI,CAACjK,UAAL,CAAgBC,SAAhB,GAA4B,OAAI,CAACA,SAAjC;AACA,mBAAI,CAACD,UAAL,CAAgBE,IAAhB,GAAuB,OAAI,CAACA,IAA5B;AACD,WATL,EAUI,UAAAE,KAAK;AAAA,mBAAI,OAAI,CAACV,SAAL,GAAiB,KAArB;AAAA,WAVT;AAYD;;;sCACa;AACZ,eAAKuK,QAAL,GAAgB,IAAhB;AACD;;;sCAEarK,I,EAAI;AAChB,eAAKqK,QAAL,CAAcvJ,IAAd,CAAmBd,IAAI,CAAC,CAAD,CAAvB;;AACA,eAAKI,UAAL,CAAgBW,yBAAhB;AACD;;;yCACgBf,I,EAAM;AACrB,cAAIgB,CAAC,GAAG,KAAKqJ,QAAL,CAAcpJ,SAAd,CAAwB,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAAC/G,EAAF,IAAQ6F,IAAI,CAAC,CAAD,CAAJ,CAAQ7F,EAAvB;AAAA,WAAxB,CAAR;;AACA,cAAI6G,CAAC,IAAE,CAAP,EAAU;AACR,iBAAKqJ,QAAL,CAAcrJ,CAAd,IAAmBhB,IAAI,CAAC,CAAD,CAAvB;AACD;;AACD,eAAKI,UAAL,CAAgBW,yBAAhB;AACD;;;sCACa5G,E,EAAI;AAChB,cAAI6G,CAAC,GAAG,KAAKqJ,QAAL,CAAcpJ,SAAd,CAAwB,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAAC/G,EAAF,IAAQA,EAAf;AAAA,WAAxB,CAAR;;AACA,cAAI6G,CAAC,IAAE,CAAP,EAAU;AACR,iBAAKqJ,QAAL,CAAclJ,MAAd,CAAqBH,CAArB,EAAuB,CAAvB;AACD;;AACD,eAAKZ,UAAL,CAAgBW,yBAAhB;;AACA,eAAK2G,cAAL,CAAoBtG,MAApB,CAA2BjH,EAA3B;AACD;;;oCAEWuG,K,EAAc;AACxB,cAAMW,WAAW,GAAIX,KAAK,CAACY,MAAN,CAAkCpG,KAAvD;AACA,eAAKkF,UAAL,CAAgBmB,MAAhB,GAAyBF,WAAW,CAACG,IAAZ,GAAmBC,WAAnB,EAAzB;;AAEA,cAAI,KAAKrB,UAAL,CAAgBC,SAApB,EAA+B;AAC7B,iBAAKD,UAAL,CAAgBC,SAAhB,CAA0BqB,SAA1B;AACD;AACF;;;kCAESvH,E,EAAY;AAAA;;AACpB,cAAM2I,YAAY,GAAG,IAAI,wEAAJ,EAArB;AAEAA,sBAAY,CAAC9C,IAAb,GAAoB;AAChB7F,cAAE,EAAEA;AADY,WAApB;AAIA,cAAMgC,SAAS,GAAG,KAAKyC,MAAL,CAAYmE,IAAZ,CAAiB,sFAAjB,EAAoCD,YAApC,CAAlB;AAEA3G,mBAAS,CAAC6G,WAAV,GAAwB/H,SAAxB,CACE,UAACgI,MAAD,EAAY;AACV,gBAAIA,MAAJ,EAAY;AACV,kBAAKA,MAAM,CAAC,CAAD,CAAN,CAAUC,IAAV,IAAkB,QAAvB,EAAkC;AAChC,uBAAI,CAACC,gBAAL,CAAsBF,MAAtB;AACD,eAFD,MAEO;AACL,uBAAI,CAACG,aAAL,CAAmBH,MAAnB;AACD;AACF;AACF,WATH;AAWC;;;+BAEI9I,E,EAAW;AAChB,eAAKuN,cAAL,CAAoBtG,MAApB,CAA2BjH,EAA3B;AACD;;;;;;;uBAtFUgQ,gB,EAAgB,yI,EAAA,mI;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA;AAAA;0EAMhB,wE,EAAc,I;;0EACd,8D,EAAS,I;;;;;;;;;;;;;;;ACrBtB;;AACI;;AACI;;AACI;;AACI;;AAA8C;AAAA,mBAAS,IAAA1G,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAY;;AACpF;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;AAAM;;AACjB;;AAAgB;AAAA,mBAAS,IAAAC,WAAA,QAAT;AAA4B,WAA5B;;AAAhB;;AACJ;;AAEA;;AACA;;AACI;;AACA;;AACJ;;AAEA;;AACI;;AACA;;AACJ;;AAEA;;AACI;;AACA;;AACJ;;AAEA;;AACI;;AACA;;AAIJ;;AAEA;;AACA;;AAEA;;AACA;;AAOA;;AACJ;;AACJ;;;;AArCyB;;AAAA;;AAwBE;;AAAA;;AACP;;AAAA;;AAGF;;AAAA;;AAOK;;AAAA;;;;;;;;;sEDrCVyG,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT9O,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;gBAM1B,uD;iBAAU,wE,EAAc;AAAC,sBAAQ;AAAT,W;;;gBACxB,uD;iBAAU,8D,EAAS;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;AErBtB;AAAA;;;AAAA;AAAA;AAAA;;QAAa+O,e;;;;AACK,oBAAAjO,OAAA,GAAkB,gCAAlB;;;;;;;;;;;;;;;;ACDlB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQakO,iB;AAEX,iCAAoBrO,KAApB,EAAyC;AAAA;;AAArB,aAAAA,KAAA,GAAAA,KAAA;AAAwB;;;;oCAEhCmN,K,EAA+BmB,K,EAA0B;AACnE,iBAAO,KAAKtO,KAAL,CAAWf,QAAX,EAAP;AACD;;;;;;;uBANUoP,iB,EAAiB,mH;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVE,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACR9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAiBA,QAAMpO,OAAO,GAAU,kEAAgBA,OAAvC;;QAKakC,kB;AAMX,kCACUwF,KADV,EAEUwE,MAFV,EAE+B;AAAA;;AADrB,aAAAxE,KAAA,GAAAA,KAAA;AACA,aAAAwE,MAAA,GAAAA,MAAA;AANH,aAAApI,YAAA,GAA8B,EAA9B;AACA,aAAAuK,kBAAA,GAAoC,EAApC;AAOH,aAAKC,qBAAL;AACH;;;;gDAEoB;AAAA;;AACnB,cAAIC,QAAQ,GAAG;AACb7L,iBAAK,EAAC;AADO,WAAf;;AAIA,eAAKgF,KAAL,CAAWM,IAAX,CAAgBhI,OAAO,GAAG,oBAA1B,EAAgDuO,QAAhD,EAA0D3P,SAA1D,CACE,UAAC+E,IAAD,EAAiB;AAAA,wDACFA,IADE;AAAA;;AAAA;AACf,qEAAmB;AAAA,oBAAXkB,CAAW;;AACjB,oBAAIA,CAAC,CAACqD,OAAF,CAAUvF,IAAd,EAAoB;AAClB,sBAAIoH,SAAS,GAAU,EAAvB;AACA,sBAAIyE,KAAK,GAAU,EAAnB;;AAEA,sBAAK3J,CAAC,CAACqD,OAAF,CAAU6B,SAAf,EAA2B;AACzBA,6BAAS,GAAGlF,CAAC,CAACqD,OAAF,CAAU6B,SAAV,CAAoBzB,MAApB,CAA2B,CAA3B,EAA6B,CAA7B,CAAZ;;AACA,wBAAKzD,CAAC,CAACqD,OAAF,CAAU6B,SAAV,CAAoBd,MAApB,GAA6B,CAAlC,EAAsC;AACpCc,+BAAS,IAAI,KAAb;AACD;AACF,mBALD,MAKO;AACLA,6BAAS,GAAG,EAAZ;AACD;;AAED,sBAAIyE,KAAJ,EAAW;AACTA,yBAAK,GAAG,QAAM,UAAN,GAAiB3J,CAAC,CAACqD,OAAF,CAAUiC,KAAnC;AACD;;AAED,yBAAI,CAAC+B,MAAL,CAAYqB,OAAZ,CAAoB,aAAW1I,CAAC,CAACqD,OAAF,CAAUgC,KAArB,GAA6BsE,KAAjD,EAAwD3J,CAAC,CAACqD,OAAF,CAAUvF,IAAV,GAAiB,GAAjB,GAAuBoH,SAA/E,EAA0F;AACxF0E,mCAAe,EAAE,KADuE;AAExFC,gCAAY,EAAE,IAF0E;AAGxFC,gCAAY,EAAE,IAH0E;AAIxFnB,2BAAO,EAAE,CACP;AAACC,0BAAI,EAAE,QAAP;AAAiBC,4BAAM,EAAE,gBAACkB,KAAD,EAAW;AAAC,+BAAI,CAAC1C,MAAL,CAAYtL,MAAZ,CAAmBgO,KAAK,CAAC9Q,EAAzB;AAA+B,uBAApE;AAAsE+Q,0BAAI,EAAE;AAA5E,qBADO;AAJ+E,mBAA1F;AAQD;AACF;AA5Bc;AAAA;AAAA;AAAA;AAAA;AA6BhB,WA9BH;AAgCD;AAED;;;;;;;;;;;;;;;;;;;;wCAkBgBzB,M,EAAW;AACzB,iBAAO,KAAK1F,KAAL,CAAWM,IAAX,CAAgBhI,OAAO,GAAG,oBAA1B,EAAgDoN,MAAhD,EACN0B,IADM,CAEL,2DAAI,UAACC,QAAD,EAAmB;AACrB,mBAAOA,QAAP;AACD,WAFD,CAFK,EAKL,kEAAW,UAAA5K,KAAK,EAAI;AAClB,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAFD,CALK,CAAP;AAUD;;;wCAEewD,W,EAAW;AACzB,cAAIqH,QAAJ;;AAEA,cAAKrH,WAAW,CAAC7J,EAAZ,IAAkB,IAAvB,EAA8B;AAC5BkR,oBAAQ,GAAG,KAAX;AACD,WAFD,MAEO;AACLA,oBAAQ,GAAG,MAAX,CADK,CAEL;AACD;;AAED,iBAAO,KAAKtH,KAAL,CAAWM,IAAX,CAAgBhI,OAAO,GAAG,eAAV,GAA0BgP,QAA1C,EAAoDrH,WAApD,EACNmH,IADM,CAEL,2DAAI,UAACC,QAAD,EAAmB;AACrB,mBAAOA,QAAP;AACD,WAFD,CAFK,EAKL,kEAAW,UAAA5K,KAAK,EAAI;AAClBzD,mBAAO,CAACC,GAAR,CAAYwD,KAAZ;AACA,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAHD,CALK,CAAP;AAWD;;;+BAEMrG,E,EAAY;AACjB,eAAK4J,KAAL,WAAkB1H,OAAO,GAAG,eAAV,GAA4BlC,EAA9C,EAAkDc,SAAlD;AACD;;;;;;;uBA5GUsD,kB,EAAkB,uH,EAAA,iH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVkM,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACtB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaa,W;AAQX,2BAAoBpP,KAApB,EAAyC;AAAA;;AAArB,aAAAA,KAAA,GAAAA,KAAA;AAPZ,aAAAf,QAAA,GAAW,IAAI,oEAAJ,CAA6B,KAAKe,KAAL,CAAWf,QAAX,EAA7B,CAAX;AACR,aAAAH,UAAA,GAAa,KAAKG,QAAL,CAAcoQ,YAAd,EAAb;AAM4C;;;;yCAJ3BrQ,K,EAAgB;AAC/B,eAAKC,QAAL,CAAcmB,IAAd,CAAmBpB,KAAnB;AACD;;;;;;;uBANUoQ,W,EAAW,mH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVb,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAaA,QAAMpO,OAAO,GAAU,kEAAgBA,OAAvC;;QAKaoC,e;AAEX,+BAAoBsF,KAApB,EAAuC;AAAA;;AAAnB,aAAAA,KAAA,GAAAA,KAAA;AAAqB;;;;uCAE7B;AACV,iBAAO,KAAKA,KAAL,CAAWM,IAAX,CAAgBhI,OAAO,GAAG,YAA1B,EAAuC,IAAvC,EACN8O,IADM,CAEL,2DAAI,UAACC,QAAD,EAAmB;AACrB,mBAAOA,QAAP;AACD,WAFD,CAFK,EAKL,kEAAW,UAAA5K,KAAK,EAAI;AAClB,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAFD,CALK,CAAP;AAUD;;;6BAEIsF,Q,EAAkB;AACrB,cAAIuF,QAAJ;;AAEA,cAAKvF,QAAQ,CAAC3L,EAAT,IAAe,IAApB,EAA2B;AACzBkR,oBAAQ,GAAG,OAAX;AACD,WAFD,MAEO;AACLA,oBAAQ,GAAG,QAAX;AACD;;AAED,iBAAO,KAAKtH,KAAL,CAAWM,IAAX,CAAgBhI,OAAO,GAAG,YAAV,GAAuBgP,QAAvC,EAAiDvF,QAAjD,EACNqF,IADM,CAEL,2DAAI,UAACC,QAAD,EAAmB;AACrB,mBAAOA,QAAP;AACD,WAFD,CAFK,EAKL,kEAAW,UAAA5K,KAAK,EAAI;AAClB,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAFD,CALK,CAAP;AAUD;;;+BAEMrG,E,EAAW;AAChB,eAAK4J,KAAL,WAAkB1H,OAAO,GAAG,YAAV,GAAyBlC,EAA3C,EAA+Cc,SAA/C;AACD;;;;;;;uBAxCUwD,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVgM,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;AClB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQae,kB;AAKX,kCAAoBtP,KAApB,EAAyC;AAAA;;AAArB,aAAAA,KAAA,GAAAA,KAAA;AAAwB;;;;oCAHhCmN,K,EAA+BmB,K,EAA0B;AACnE,iBAAO,CAAC,KAAKtO,KAAL,CAAWf,QAAX,EAAR;AACD;;;;;;;uBAJUqQ,kB,EAAkB,mH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVf,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;ACR/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMpO,OAAO,GAAU,kEAAgBA,OAAvC;;QA2BamC,c;AAKX,8BAAoBuF,KAApB,EAAuC;AAAA;;AAAnB,aAAAA,KAAA,GAAAA,KAAA;AAHb,aAAAtD,QAAA,GAAsB,EAAtB;AAGkC;;;;yCAExBgL,C,EAAC;AAChB,iBAAO,KAAK1H,KAAL,CAAW2H,GAAX,CAAerP,OAAO,GAAG,mBAAV,GAA8BoP,CAA7C,EACNN,IADM,CAEH,2DAAI,UAACC,QAAD,EAAmB;AACrB,mBAAOA,QAAP;AACD,WAFD,CAFG,EAKH,kEAAW,UAAA5K,KAAK,EAAI;AAClB,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAFD,CALG,CAAP;AASD;;;sCAEU;AACT,iBAAO,KAAKuD,KAAL,CAAWM,IAAX,CAAgBhI,OAAO,GAAG,WAA1B,EAAsC,IAAtC,EACN8O,IADM,CAEL,2DAAI,UAACC,QAAD,EAAmB;AACrB,mBAAOA,QAAP;AACD,WAFD,CAFK,EAKL,kEAAW,UAAA5K,KAAK,EAAI;AAClB,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAFD,CALK,CAAP;AAUD;;;6BAEIsF,Q,EAAiB;AACpB,cAAIuF,QAAJ;;AAEA,cAAKvF,QAAQ,CAAC3L,EAAT,IAAe,IAApB,EAA2B;AACzBkR,oBAAQ,GAAG,OAAX;AACD,WAFD,MAEO;AACLA,oBAAQ,GAAG,QAAX;AACD;;AAED,iBAAO,KAAKtH,KAAL,CAAWM,IAAX,CAAgBhI,OAAO,GAAG,WAAV,GAAsBgP,QAAtC,EAAgDvF,QAAhD,EACNqF,IADM,CAEL,2DAAI,UAACC,QAAD,EAAmB;AACrB,mBAAOA,QAAP;AACD,WAFD,CAFK,EAKL,kEAAW,UAAA5K,KAAK,EAAI;AAClBzD,mBAAO,CAACC,GAAR,CAAYwD,KAAZ;AACA,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAHD,CALK,CAAP;AAWD;;;+BAEMrG,E,EAAQ;AACb,eAAK4J,KAAL,WAAkB1H,OAAO,GAAG,WAAV,GAAwBlC,EAA1C,EAA8Cc,SAA9C;AACD;;;;;;;uBAxDUuD,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAHb;;;;;sEAGDA,c,EAAc;cAJ1B,wDAI0B;eAJf;AACViM,oBAAU,EAAE;AADF,S;AAIe,Q;;;;;;;;;;;;;;;;;;;;;;ACjC3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOakB,a;AAGX,6BACUC,IADV,EAEU7H,KAFV,EAE2B;AAAA;;AADjB,aAAA6H,IAAA,GAAAA,IAAA;AACA,aAAA7H,KAAA,GAAAA,KAAA;AAJF,aAAA3H,OAAA,GAAiB,kEAAgBC,OAAjC;AAKH;;;;+BAEE2D,I,EAAM;AACX,iBAAO,KAAK4L,IAAL,CAAUvH,IAAV,WAAkB,KAAKjI,OAAvB,cAAyC4D,IAAzC,CAAP;AACD;;;8BAEKA,I,EAAM;AACV,iBAAO,KAAK4L,IAAL,CAAUvH,IAAV,WAAkB,KAAKjI,OAAvB,aAAwC4D,IAAxC,CAAP;AACD;;;iCAEK;AACJ,eAAK4L,IAAL,CAAUvH,IAAV,WAAkB,KAAKjI,OAAvB,cAAyC,IAAzC,EAA+CnB,SAA/C;AACD;;;8CAEqB+E,I,EAAM;AAC1B,iBAAO,KAAK4L,IAAL,CAAUvH,IAAV,WAAkB,KAAKjI,OAAvB,6BAAwD4D,IAAxD,CAAP;AACD;;;uCAEcA,I,EAAM;AACnB,iBAAO,KAAK4L,IAAL,CAAUvH,IAAV,WAAkB,KAAKjI,OAAvB,qBAAgD4D,IAAhD,CAAP;AACD;;;;;;;uBA1BU2L,a,EAAa,uH,EAAA,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVlB,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;;;ACP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMpO,OAAO,GAAU,kEAAgBA,OAAvC;;QAUawP,gB;AAIX,gCAAoB9H,KAApB,EAAuC;AAAA;;AAAnB,aAAAA,KAAA,GAAAA,KAAA;AAFb,aAAAuD,UAAA,GAA0B,EAA1B;AAEkC;;;;sCAE3BD,K,EAAS;AACrB,iBAAO,KAAKtD,KAAL,CAAW2H,GAAX,CAAerP,OAAO,GAAG,cAAV,GAAyBgL,KAAxC,EACN8D,IADM,CAEL,2DAAI,UAACC,QAAD,EAAmB;AACrB,mBAAOA,QAAP;AACD,WAFD,CAFK,EAKL,kEAAW,UAAA5K,KAAK,EAAI;AAClB,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAFD,CALK,CAAP;AAUD;;;;;;;uBAjBUqL,gB,EAAgB,uH;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVpB,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;AChB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaqB,Y;AAQX,4BAAoB/H,KAApB,EAAqC;AAAA;;AAAjB,aAAAA,KAAA,GAAAA,KAAA;AAPZ,aAAA3H,OAAA,GAAiB,kEAAgBC,OAAjC;AAEA,aAAA0P,GAAA,GAAM;AACZ7D,eAAK,EAAE,KAAK9L,OAAL,GAAa,QADR;AAEZ8N,gBAAM,EAAE,KAAK9N,OAAL,GAAa;AAFT,SAAN;AAKmC;;;;uCAG5B;AACb,iBAAO,KAAK2H,KAAL,CAAWM,IAAX,WAAmB,KAAKjI,OAAxB,WAAuC,IAAvC,CAAP;AACD;;;+BAEMG,K,EAAO;AACZ,eAAKyP,GAAL,CAASzP,KAAT;AACD;;;4BAEGA,K,EAAO;AACTC,sBAAY,CAACyP,OAAb,CAAqB,OAArB,EAA8B1P,KAA9B;AACD;;;8BACK;AACJ,iBAAOC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AACD;;;iCAEQ;AACPD,sBAAY,CAAC0P,UAAb,CAAwB,OAAxB;AACD;;;kCAES;AACR,cAAM3P,KAAK,GAAG,KAAKmP,GAAL,EAAd;;AACA,cAAInP,KAAJ,EAAW;AACT,gBAAM4P,OAAO,GAAG,KAAKA,OAAL,CAAa5P,KAAb,CAAhB;;AACA,gBAAI4P,OAAJ,EAAa;AACX,qBAAOlK,MAAM,CAACmK,MAAP,CAAc,KAAKL,GAAnB,EAAwBM,OAAxB,CAAgCF,OAAO,CAACJ,GAAxC,IAA+C,CAAC,CAAhD,GAAoD,IAApD,GAA2D,KAAlE;AACD;AACF;;AACD,iBAAO,KAAP;AACD;;;gCAEOxP,K,EAAO;AACb,cAAM4P,OAAO,GAAG5P,KAAK,CAAC4B,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAhB;AACA,iBAAO,KAAKmO,MAAL,CAAYH,OAAZ,CAAP;AACD;;;+BAEMA,O,EAAS;AACd,iBAAOI,IAAI,CAAC5J,KAAL,CAAW6J,IAAI,CAACL,OAAD,CAAf,CAAP;AACD;;;mCAEU;AACT,iBAAO,KAAKvJ,OAAL,EAAP;AACD;;;;;;;uBApDUkJ,Y,EAAY,uH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVrB,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;ACPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMpO,OAAO,GAAU,kEAAgBA,OAAvC;;QAUa6J,S,GAIX,mBACUnC,KADV,EAC2B;AAAA;;AAAA;;AAAjB,WAAAA,KAAA,GAAAA,KAAA;AAHH,WAAAqD,GAAA,GAAY,EAAZ;;AAKL,WAAKrD,KAAL,CAAWM,IAAX,CAAgBhI,OAAO,GAAG,MAA1B,EAAkC,IAAlC,EAAwCpB,SAAxC,CACE,UAAC+E,IAAD,EAAiB;AAAA,oDACFA,IADE;AAAA;;AAAA;AACf,iEAAmB;AAAA,gBAAXkB,CAAW;;AACjB,mBAAI,CAACkG,GAAL,CAAStG,IAAT,CAAcI,CAAd;AACD;AAHc;AAAA;AAAA;AAAA;AAAA;AAIhB,OALH;AAOD,K;;;uBAdUgF,S,EAAS,uH;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVuE,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;ACdtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAaA,QAAMpO,OAAO,GAAU,kEAAgBA,OAAvC;;QAKaqL,c;AAKX,8BAAoB3D,KAApB,EAAuC;AAAA;;AAAnB,aAAAA,KAAA,GAAAA,KAAA;AAHb,aAAAsG,QAAA,GAAsB,EAAtB;AACA,aAAAoC,UAAA,GAAwB,EAAxB;AAEkC;;;;6BAEvC;AAAA;;AACA,eAAKA,UAAL,GAAkB,EAAlB;;AACA,eAAK1I,KAAL,CAAW2H,GAAX,CAAerP,OAAO,GAAG,KAAzB,EAAgCpB,SAAhC,CACE,UAAC+E,IAAD,EAAiB;AACf,mBAAI,CAACyM,UAAL,CAAgB3L,IAAhB,CAAqBd,IAAI,CAAC,MAAD,CAAzB;AACD,WAHH;AAID;;;sCAEU;AACT,iBAAO,KAAK+D,KAAL,CAAWM,IAAX,CAAgBhI,OAAO,GAAG,WAA1B,EAAsC,IAAtC,EACN8O,IADM,CAEL,2DAAI,UAACC,QAAD,EAAmB;AACrB,mBAAOA,QAAP;AACD,WAFD,CAFK,EAKL,kEAAW,UAAA5K,KAAK,EAAI;AAClB,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAFD,CALK,CAAP;AAUD;;;6BAEImH,O,EAAgB;AACnB,cAAI0D,QAAJ;;AAEA,cAAK1D,OAAO,CAACxN,EAAR,IAAc,IAAnB,EAA0B;AACxBkR,oBAAQ,GAAG,OAAX;AACD,WAFD,MAEO;AACLA,oBAAQ,GAAG,QAAX;AACD;;AAED,iBAAO,KAAKtH,KAAL,CAAWM,IAAX,CAAgBhI,OAAO,GAAG,WAAV,GAAsBgP,QAAtC,EAAgD1D,OAAhD,EACNwD,IADM,CAEL,2DAAI,UAACC,QAAD,EAAmB;AACrB,mBAAOA,QAAP;AACD,WAFD,CAFK,EAKL,kEAAW,UAAA5K,KAAK,EAAI;AAClB,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAFD,CALK,CAAP;AAUD;;;+BAEMrG,E,EAAQ;AACb,eAAK4J,KAAL,WAAkB1H,OAAO,GAAG,WAAV,GAAwBlC,EAA1C,EAA8Cc,SAA9C;AACD;;;;;;;uBAnDUyM,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACV+C,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;AClB3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMiC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAA/P,GAAG;AAAA,aAAIE,OAAO,CAACyD,KAAR,CAAc3D,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule, Component} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './components/login/login.component';\nimport {SignupComponent} from './components/signup/signup.component';\nimport {RequestResetComponent} from './components/password/request-reset/request-reset.component';\nimport {ResponseResetComponent} from './components/password/response-reset/response-reset.component';\nimport {BeforeLoginService} from './services/before-login.service';\nimport {AfterLoginService} from './services/after-login.service';\nimport {AgendamentoComponent} from './components/agendamento/agendamento.component';\nimport {BarbeiroComponent} from './components/barbeiro/barbeiro.component';\nimport {ClienteComponent} from './components/cliente/cliente.component';\nimport {UsuarioComponent} from './components/usuario/usuario.component';\n\nconst appRoutes: Routes = [\n  {path: '', canActivate:[BeforeLoginService], children: [\n    { path : '', component: LoginComponent },\n    { path : 'login', component: LoginComponent },\n    { path : 'signup', component : SignupComponent},\n    { path : 'request-password-reset', component: RequestResetComponent },\n    { path : 'response-password-reset', component: ResponseResetComponent }\n  ]}\n  ,\n  {path: '', canActivate:[AfterLoginService], children: [\n    { path : 'agendamentos', component: AgendamentoComponent },\n    { path : 'barbeiros', component : BarbeiroComponent},\n    { path : 'clientes', component: ClienteComponent },\n    { path : 'usuarios', component: UsuarioComponent }\n  ]}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n    //,RouterModule.forChild(appRoutesChildren)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}","import { Component } from '@angular/core';\nimport {AuthService} from './services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-app';\n  \n  public loggedIn: boolean;\n\n  constructor(\n    private Auth: AuthService,\n    private router: Router\n  ) {\n    this.Auth.authStatus.subscribe(value => this.loggedIn = value);\n    \n    if (this.loggedIn) {\n      this.router.navigateByUrl('/agendamentos');\n    } \n\n  }\n  \n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>\n<ng-snotify></ng-snotify>","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {AppRoutingModule} from './/app-routing.module';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport {AgendamentoService} from './services/agendamento.service';\nimport {BarbeiroService} from './services/barbeiro.service';\n\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {SignupComponent} from './components/signup/signup.component';\nimport {RequestResetComponent} from './components/password/request-reset/request-reset.component';\nimport {ResponseResetComponent} from './components/password/response-reset/response-reset.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\n\nimport {JarwisService} from './services/jarwis.service';\nimport {TokenService} from './services/token.service';\nimport {AuthService} from './services/auth.service';\nimport {AfterLoginService} from './services/after-login.service';\nimport {BeforeLoginService} from './services/before-login.service';\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {SnotifyModule, SnotifyService, ToastDefaults} from 'ng-snotify';\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\n//import {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatCardModule} from '@angular/material/card';\n\nimport { NgxMaskModule, IConfig } from 'ngx-mask';\nexport const options: Partial<IConfig> | (() => Partial<IConfig>) = {}\n\nimport {AgendamentoComponent} from './components/agendamento/agendamento.component';\nimport {BarbeiroComponent} from './components/barbeiro/barbeiro.component';\nimport {ClienteComponent} from './components/cliente/cliente.component';\n\nimport {CeAgendamentoComponent} from './components/ce/ce-agendamento/ce-agendamento.component';\nimport {CeBarbeiroComponent} from './components/ce/ce-barbeiro/ce-barbeiro.component';\nimport {CeClienteComponent} from './components/ce/ce-cliente/ce-cliente.component';\nimport { AuthInterceptor } from './auth-interceptor';\nimport { UsuarioComponent } from './components/usuario/usuario.component';\nimport { CeUsuarioComponent } from './components/ce/ce-usuario/ce-usuario.component';\n\n//import {FormsModule, ReactiveFormsModule} from '@angular/forms';\n//import {OverlayModule} from '@angular/cdk/overlay';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    RequestResetComponent,\n    ResponseResetComponent,\n    NavbarComponent,\n    AgendamentoComponent,\n    BarbeiroComponent,\n    ClienteComponent,\n    CeAgendamentoComponent,\n    CeBarbeiroComponent,\n    CeClienteComponent,\n    UsuarioComponent,\n    CeUsuarioComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule, \n    HttpClientModule,\n    AppRoutingModule,\n    SnotifyModule,\n    AutocompleteLibModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    NgxMaskModule.forRoot(options),\n  ],\n  providers: [\n    AgendamentoService,\n    BarbeiroService,\n    JarwisService,\n    TokenService,\n    AuthService, \n    AfterLoginService, \n    BeforeLoginService,\n    NavbarComponent,\n    [\n      {\n       provide: HTTP_INTERCEPTORS,\n       useClass: AuthInterceptor,\n       multi: true,\n     },\n     ],\n    //[{provide: LOCALE_ID, useValue: 'pt-BR'}]\n    {provide: 'SnotifyToastConfig', useValue: ToastDefaults},\n    SnotifyService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n","import {Component,Inject,Injectable} from \"@angular/core\";\nimport {HttpEvent, HttpHandler, HttpRequest} from \"@angular/common/http\";\nimport {HttpInterceptor} from \"@angular/common/http\";\nimport { Observable } from 'rxjs/Observable';\nimport {Router} from \"@angular/router\";\nimport {GlobalConstants} from './global-constants';\n\n\nimport { TokenService } from './services/token.service';\nimport { AuthService } from './services/auth.service';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor\n{\n    private baseUrl:string = GlobalConstants.API_URL;\n\n    constructor(\n        private router: Router,\n        private Token: TokenService,\n        private Auth: AuthService,\n        public dialogRef: MatDialog\n    ) {}\n\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n    {\n        let token = localStorage.getItem('token');\n        \n        //const lanaguageInj= this.injector.get(RefreshToken2);\n        \n        if (token) {\n            req = req.clone({\n                setHeaders: {\n                    'Authorization': 'Bearer '+token\n                }\n            } );\n        }\n            \n        return next.handle(req).catch(err => {\n            if (err.status === 401) {\n                // Redireciona para login quando expirar a sessão.\n                \n                console.log('foi22')\n                this.Token.remove();\n                this.Auth.changeAuthStatus(false);\n                this.dialogRef.closeAll();\n                this.router.navigateByUrl('/login');\n            }\n            return Observable.throw(err);\n        });\n    }\n}","import {Component, Injectable, ViewChild} from '@angular/core';\nimport {Agendamento, AgendamentoService} from '../../services/agendamento.service';\nimport {Cliente, ClienteService} from '../../services/cliente.service';\nimport {Barbeiro, BarbeiroService} from '../../services/barbeiro.service';\nimport {NgbDate, NgbCalendar, NgbDateParserFormatter,NgbDatepickerI18n, NgbDateStruct, NgbDateAdapter} from '@ng-bootstrap/ng-bootstrap';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {CeAgendamentoComponent} from '../ce/ce-agendamento/ce-agendamento.component'\nimport 'rxjs/Rx';\n\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst I18N_VALUES = {\n  'pt': {\n    weekdays: ['Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab', 'Dom'],\n    months: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\n }\n  // other languages you would support\n};\n\n// Define a service holding the language. You probably already have one if your app is i18ned. Or you could also\n// use the Angular LOCALE_ID value\n@Injectable()\nexport class I18n {\n  language = 'pt';\n}\n\n// Define custom service providing the months and weekdays translations\n@Injectable()\nexport class CustomDatepickerI18n extends NgbDatepickerI18n {\n\n  constructor(private _i18n: I18n) {\n    super();\n }\n\n  getWeekdayShortName(weekday: number): string {\n    return I18N_VALUES[this._i18n.language].weekdays[weekday - 1];\n }\n  getMonthShortName(month: number): string {\n    return I18N_VALUES[this._i18n.language].months[month - 1];\n }\n  getMonthFullName(month: number): string {\n    return this.getMonthShortName(month);\n }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${date.day}-${date.month}-${date.year}`;\n }\n}\n\n/**\n * This Service handles how the date is represented in scripts i.e. ngModel.\n */\n@Injectable()\nexport class CustomAdapter extends NgbDateAdapter<string> {\n\n  readonly DELIMITER = '-';\n\n  fromModel(value: string | null): NgbDateStruct | null {\n    if (value) {\n      let date = value.split(this.DELIMITER);\n      return {\n        day : parseInt(date[0], 10),\n        month : parseInt(date[1], 10),\n        year : parseInt(date[2], 10)\n     };\n   }\n    return null;\n }\n\n  toModel(date: NgbDateStruct | null): string | null {\n    return date ? date.day + this.DELIMITER + date.month + this.DELIMITER + date.year : null;\n }\n}\n\n/**\n * This Service handles how the date is rendered and parsed from keyboard i.e. in the bound input field.\n */\n@Injectable()\nexport class CustomDateParserFormatter extends NgbDateParserFormatter {\n\n  readonly DELIMITER = '/';\n\n  parse(value: string): NgbDateStruct | null {\n    if (value) {\n      let date = value.split(this.DELIMITER);\n      return {\n        day : parseInt(date[0], 10),\n        month : parseInt(date[1], 10),\n        year : parseInt(date[2], 10)\n     };\n   }\n    return null;\n }\n\n  format(date: NgbDateStruct | null): string {\n    return date ? date.day + this.DELIMITER + date.month + this.DELIMITER + date.year : '';\n }\n}\n\n@Component({\n  selector: 'app-agendamento',\n  templateUrl: './agendamento.component.html',\n  styleUrls: ['./agendamento.component.css'],\n  providers: [\n    I18n\n    ,{provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n}\n    ,{provide: NgbDateAdapter, useClass: CustomAdapter}\n    ,{provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter}\n  ] // define custom NgbDatepickerI18n provider\n})\nexport class AgendamentoComponent {\n  \n  agendamentos: Agendamento[];\n  NotifyAgendamentos: Agendamento[];\n  clientes: Cliente[];\n  barbeiros: Barbeiro[];\n  \n  errorMessage: string;\n  config = {\n    format: \"DD/MM/YYYY\"\n  };\n\n  tempo: any[] = [\n    {id: 0, nome: 'Todos'},\n    {id: 1, nome: 'Hoje'},\n    {id: 2, nome: 'Esta semana'},\n    {id: 3, nome: 'Este mês'},\n    {id: 4, nome: 'Últimos 30 dias'},\n    {id: 5, nome: 'Escolha o período'}\n  ];\n\n  keyword = 'nome';\n  duedates:boolean = false;\n\n  hoveredDate: NgbDate | null = null;\n  fromDate: NgbDate | null;\n  toDate: NgbDate | null;\n\n  public form = {\n      cliente_id:'',\n      barbeiro_id:0,\n      tempo:0,\n      dataInicial: null,\n      dataFinal: null\n  };\n\n  CurrentDate = new Date().toLocaleString(\"pt-BR\", {timeZone: \"America/Sao_Paulo\"})\n  \n  displayedColumns: string[] = ['id', 'data', 'hora', 'servico', 'cliente', 'barbearia', 'actions'];\n  dataSource: MatTableDataSource<Agendamento>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  //@Input() sorting: MatSortable;\n  isLoading = true;\n\n  isLoadingResult: boolean;\n\n  constructor(\n    private AgendamentoService: AgendamentoService,\n    private ClienteService: ClienteService,\n    private BarbeiroService: BarbeiroService,\n    private calendar: NgbCalendar, \n    public formatter: NgbDateParserFormatter,\n    public dialog: MatDialog\n    //,private _i18n: I18n\n  ) {}\n  \n  ngOnInit() {\n    this.BarbeiroService.getBarbeiros().subscribe( data => { this.barbeiros = data })\n    \n    this.AgendamentoService.getAgendamentos()\n       .subscribe(\n        data => {\n          this.isLoading = false;\n          this.agendamentos = data;\n          // Assign the data to the data source for the table to render\n          this.dataSource =  new MatTableDataSource(this.agendamentos)\n          this.dataSource.paginator = this.paginator;\n          this.sort.sort(({ id: 'dataagendamento', start: 'desc'}) as MatSortable)\n          this.dataSource.sort = this.sort;\n        }, \n        error => this.isLoading = false\n    )\n  }\n\n  ngOnDestroy() {\n    this.agendamentos = null;\n    this.barbeiros    = null;\n    this.clientes     = null;\n  }\n\n  getServerResponseClientes(event) {\n    this.isLoadingResult = true;\n    this.ClienteService.getBuscaClientes(event).subscribe(\n      data => { \n        if (data[0]['nome'] == undefined) {\n          this.clientes = []\n        } else {\n          this.clientes = data\n        }\n        this.isLoadingResult = false;\n      })\n  }\n\n  searchClearedClientes() {\n    this.clientes = [];\n  }\n\n  addRowInTable(data){\n    this.agendamentos.push(data[0]);\n    this.dataSource._updateChangeSubscription()\n  }\n  updateRowInTable(data) {\n    let i = this.agendamentos.findIndex((d) => d.id == data[0].id);\n    if (i>=0) {\n      this.agendamentos[i] = data[0] \n    }\n    this.dataSource._updateChangeSubscription()\n  }\n  delRowInTable(id) {\n    let i = this.agendamentos.findIndex((d) => d.id == id);\n    if (i>=0) {\n      this.agendamentos.splice(i,1)\n    }\n    this.dataSource._updateChangeSubscription()\n    this.AgendamentoService.apagar(id);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  getAgendamentos(value?:any) {\n    this.AgendamentoService\n        .getAgendamentos(value)\n        .subscribe(\n            agendamentos => {\n              this.agendamentos = []\n              for(let t of agendamentos) { \n                this.agendamentos.push(t);\n              }\n              // Assign the data to the data source for the table to render\n              this.dataSource =  new MatTableDataSource(this.agendamentos)\n              this.dataSource.paginator = this.paginator;\n              this.dataSource.sort = this.sort;\n            },\n            error => this.handleError(error)\n        )\n }\n\n  onSubmit() {\n    if (this.fromDate) {\n      this.form.dataInicial = this.fromDate.day+'/'+this.fromDate.month+'/'+this.fromDate.year;\n   } else {\n      this.form.dataInicial = ''\n   }\n    if (this.toDate) {\n      this.form.dataFinal = this.toDate.day+'/'+this.toDate.month+'/'+this.toDate.year;\n   } else {\n      this.form.dataFinal = ''\n   }\n    \n    // Ao invés de enviar o objeto, enviamos apenas o id do cliente.\n    let c:any;\n    if (this.form.cliente_id) {\n      c = this.form.cliente_id;\n      \n      if ( c['id'] > 0 ) {\n        this.form.cliente_id = c['id']\n     }\n   }\n\n    this.errorMessage = null;\n    this.getAgendamentos(this.form);\n    \n    if (this.form.cliente_id) {\n      this.form.cliente_id = c['nome']\n   }\n }\n\n  handleError(error) {\n    this.errorMessage = '<table>'; \n    for(let e of Object.keys(error.error.errors) ) {\n      this.errorMessage += \"<tr><td><div class='alert alert-danger'>\"+error.error.errors[e][0]+\"</div></td></tr>\";\n   }\n    this.errorMessage += '<table>';\n }\n\n  onBoxDueDates(value) {\n    if (value==5) {\n      this.duedates = true\n   } else {\n      this.form.dataInicial = null\n      this.form.dataFinal = null\n      this.duedates = false\n   }\n }\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n   } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\n      this.toDate = date;\n   } else {\n      this.toDate = null;\n      this.fromDate = date;\n   }\n }\n\n  isHovered(date: NgbDate) {\n    return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\n }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n }\n\n  isRange(date: NgbDate) {\n    return date.equals(this.fromDate) || (this.toDate && date.equals(this.toDate)) || this.isInside(date) || this.isHovered(date);\n }\n\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed)) ? NgbDate.from(parsed) : currentValue;\n }\n\n  openModal(id?:number) {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n        id: id\n    };\n\n    const dialogRef = this.dialog.open(CeAgendamentoComponent,dialogConfig);\n    \n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          if ( result[0].modo == 'editar' ) {\n            this.updateRowInTable(result);\n          } else {\n            this.addRowInTable(result);\n          }\n       }\n     }\n    );\n }\n\n apagarAgendamento(id:number) {\n    this.AgendamentoService.apagar(id);\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <form #agendamentosForm=ngForm (ngSubmit)=\"onSubmit()\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-4 CustomCol center texto-branco bg-gray\"><b style=\"color: #444;\">Cliente</b></div>\n                    <div class=\"col-4 CustomCol center texto-branco bg-gray\"><b style=\"color: #444;\">Barbeiro</b></div>\n                    <div class=\"col-4 CustomCol center texto-branco bg-gray\"><b style=\"color: #444;\">Tempo</b></div>\n                </div>                    \n                <div class=\"row\">\n                  <div class=\"col-4 CustomCol\">\n                    <div class=\"ng-autocomplete\">\n                        <ng-autocomplete\n                            name=\"form.cliente_id\"\n                            [(ngModel)]=\"form.cliente_id\"\n                            [data]=\"clientes\"\n                            [searchKeyword]=\"keyword\"\n                            placeHolder=\"Digite o nome do cliente\"\n                            minQueryLength=\"2\"\n                            (inputChanged)='getServerResponseClientes($event)' \n                            (inputCleared)='searchClearedClientes()'\n                            [isLoading]=\"isLoadingResult\" \n                            [itemTemplate]=\"itemTemplate\"\n                            [notFoundTemplate]=\"notFoundTemplate\">\n                        </ng-autocomplete>\n                      \n                        <ng-template #itemTemplate let-item>\n                          <a [innerHTML]=\"item.nome\"></a>\n                        </ng-template>\n                      \n                        <ng-template #notFoundTemplate let-notFound><div style=\"color:black;padding:10px;\">Cliente não encontrado.</div></ng-template>\n                      </div>                      \n                  </div>\n                  <div class=\"col-4 CustomCol\">\n                    <select class=\"custom-select\" name=\"barbeiro_id\" [(ngModel)]=\"form.barbeiro_id\">\n                        <option [value]=\"0\">Todos</option>\n                        <option *ngFor=\"let b of barbeiros\" [value]=\"b.id\">{{b.nome}}</option>\n                    </select>\n                  </div>\n                  <div class=\"col-4 CustomCol text-center\">\n                    <select class=\"custom-select\" name=\"tempo\" [(ngModel)]=\"form.tempo\" (change)=\"onBoxDueDates($event.target.value)\">\n                        <option [value]=\"t.id\" *ngFor=\"let t of tempo\">{{t.nome}}</option>\n                    </select>\n                    <div class=\"container\" *ngIf=\"duedates\">\n                        <div class=\"row\">\n                            <div class=\"form-group hidden\">\n                                <div class=\"input-group\">\n                                  <input name=\"datepicker\" style=\"border:0;\"\n                                         class=\"form-control\"\n                                         ngbDatepicker\n                                         #datepicker=\"ngbDatepicker\"\n                                         [autoClose]=\"'outside'\"\n                                         (dateSelect)=\"onDateSelection($event)\"\n                                         [displayMonths]=\"2\"\n                                         [dayTemplate]=\"t\"\n                                         outsideDays=\"hidden\"\n                                         [startDate]=\"fromDate!\">\n                                  <ng-template #t let-date let-focused=\"focused\">\n                                    <span class=\"custom-day\"\n                                          [class.focused]=\"focused\"\n                                          [class.range]=\"isRange(date)\"\n                                          [class.faded]=\"isHovered(date) || isInside(date)\"\n                                          (mouseenter)=\"hoveredDate = date\"\n                                          (mouseleave)=\"hoveredDate = null\">\n                                      {{ date.day }}\n                                    </span>\n                                  </ng-template>\n                                </div>\n                            </div>\n\n                            <div class=\"col-6 text-left\" style=\"margin-top:10px;margin-right:-50px;\">\n                                <input #dataInicial\n                                        class=\"form-control col-sm-10\" placeholder=\"Inicial\"\n                                        name=\"dataInicial\"\n                                        autocomplete=\"off\"\n                                        readonly\n                                        [(ngModel)]=\"form.dataInicial\"\n                                        [value]=\"formatter.format(fromDate)\"\n                                        (input)=\"fromDate = validateInput(fromDate, dataInicial.value)\">\n                            </div>\n                            <div class=\"col-1 text-left\" style=\"margin-top:10px;\">\n                                <button class=\"btn btn-outline-secondary\" style=\"padding:4px;\" (click)=\"datepicker.toggle()\" type=\"button\"><i class=\"far fa-calendar-alt\"></i></button>\n                            </div>\n                            <div class=\"col-6 text-left\" style=\"margin-top:10px;margin-right:-50px;\">\n                                <input #dataFinal\n                                        class=\"form-control col-sm-10\" placeholder=\"Final\"\n                                        name=\"dataFinal\"\n                                        autocomplete=\"off\"\n                                        readonly\n                                        [(ngModel)]=\"form.dataFinal\"\n                                        [value]=\"formatter.format(toDate)\"\n                                        (input)=\"toDate = validateInput(toDate, dataFinal.value)\">\n                            </div>\n                            <div class=\"col-1 text-left\" style=\"margin-top:10px;\">\n                                <button class=\"btn btn-outline-secondary\" style=\"padding:4px;\" (click)=\"datepicker.toggle()\" type=\"button\"><i class=\"far fa-calendar-alt\"></i></button>\n                            </div>\n                        </div>\n                    </div> \n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col CustomCol text-center\">\n                    <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"onSubmit()\">Pesquisar</button>\n                  </div>\n                </div>\n                <div class=\"row\" [innerHtml]=\"errorMessage\" [hidden]=\"!errorMessage\"></div>\n              </div>\n        </form>\n    </div>\n</div>\n<div class=\"card\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal()\">Novo agendamento</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"card\">\n    <div class=\"card-body\">\n        <mat-form-field>\n            <mat-label>Buscar</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\">\n          </mat-form-field>\n          \n          <table mat-table [dataSource]=\"dataSource\" matSort>\n            <ng-container matColumnDef=\"id\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\n              <td mat-cell *matCellDef=\"let row\" [ngClass]=\"{'antigo': (row.dataagendamento | date: 'dd/MM/yyyy HH:mm') < CurrentDate}\">{{row.id}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"data\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Data</th>\n              <td mat-cell *matCellDef=\"let row\" [ngClass]=\"{'antigo': (row.dataagendamento | date: 'dd/MM/yyyy HH:mm') < CurrentDate}\">\n                <span class=\"badge badge-warning\" *ngIf=\"(row.dataagendamento | date: 'dd/MM/yyyy HH:mm') < CurrentDate\">Antigo</span>  \n                {{ row.dataagendamento | date: 'dd/MM/yyyy' }}</td>\n            </ng-container>\n          \n            <ng-container matColumnDef=\"hora\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Hora</th>\n              <td mat-cell *matCellDef=\"let row\" [ngClass]=\"{'antigo': (row.dataagendamento | date: 'dd/MM/yyyy HH:mm') < CurrentDate}\">{{ row.dataagendamento | date: 'HH:mm' }}</td>\n            </ng-container>\n    \n            <ng-container matColumnDef=\"servico\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Serviço</th>\n              <td mat-cell *matCellDef=\"let row\" [ngClass]=\"{'antigo': (row.dataagendamento | date: 'dd/MM/yyyy HH:mm') < CurrentDate}\">{{row.descricao}}</td>\n            </ng-container>\n    \n            <ng-container matColumnDef=\"cliente\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Cliente</th>\n              <td mat-cell *matCellDef=\"let row\" [ngClass]=\"{'antigo': (row.dataagendamento | date: 'dd/MM/yyyy HH:mm') < CurrentDate}\">{{row.cliente.nome}}</td>\n            </ng-container>\n    \n            <ng-container matColumnDef=\"barbearia\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Barbearia</th>\n                <td mat-cell *matCellDef=\"let row\" [ngClass]=\"{'antigo': (row.dataagendamento | date: 'dd/MM/yyyy HH:mm') < CurrentDate}\">{{row.barbeiro.nome}}</td>\n              </ng-container>\n\n            <ng-container matColumnDef=\"actions\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n              <td mat-cell *matCellDef=\"let row\" [ngClass]=\"{'antigo': (row.dataagendamento | date: 'dd/MM/yyyy HH:mm') < CurrentDate}\">\n                <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"openModal(row.id)\">Editar</button>\n                <button type=\"button\" class=\"btn btn-danger btn-space\" (click)=\"delRowInTable(row.id)\">Apagar</button>\n              </td>\n            </ng-container>\n            \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n            </tr>\n          </table>\n          <mat-card *ngIf=\"isLoading\" \n            style=\"display: flex; justify-content: center; align-items: center\">\n            <mat-progress-spinner \n              color=\"primary\" \n              mode=\"indeterminate\">\n            </mat-progress-spinner>\n          </mat-card>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n    </div>\n</div>","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Barbeiro, BarbeiroService} from '../../services/barbeiro.service';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {CeBarbeiroComponent} from '../ce/ce-barbeiro/ce-barbeiro.component';\n\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-barbeiro',\n  templateUrl: './barbeiro.component.html',\n  styleUrls: ['./barbeiro.component.css']\n})\nexport class BarbeiroComponent implements OnInit {\n  barbeiros: Barbeiro[];\n  \n  displayedColumns: string[] = ['id', 'nome', 'fone', 'email', 'actions'];\n  dataSource: MatTableDataSource<Barbeiro>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  isLoading = true;\n\n  constructor(\n    private BarbeiroService: BarbeiroService\n    ,public dialog: MatDialog\n    ) {}\n\n  ngOnInit() {\n    this.BarbeiroService.getBarbeiros()\n       .subscribe(\n        data => {\n          this.isLoading = false;\n          this.barbeiros = data;\n          // Assign the data to the data source for the table to render\n          this.dataSource =  new MatTableDataSource(this.barbeiros)\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        }, \n        error => this.isLoading = false\n    )\n  }\n\n  ngOnDestroy() {\n    this.barbeiros = null;\n  }\n\n  addRowInTable(data){\n    this.barbeiros.push(data[0]);\n    this.dataSource._updateChangeSubscription() \n  }\n  updateRowInTable(data) {\n    let i = this.barbeiros.findIndex((d) => d.id == data[0].id);\n    if (i>=0) {\n      this.barbeiros[i] = data[0] \n    }\n    this.dataSource._updateChangeSubscription()\n  }\n  delRowInTable(id) {\n    let i = this.barbeiros.findIndex((d) => d.id == id);\n    if (i>=0) {\n      this.barbeiros.splice(i,1)\n    }\n    this.dataSource._updateChangeSubscription()\n    this.BarbeiroService.apagar(id);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  openModal(id?:number) {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n        id: id\n    };\n\n    const dialogRef = this.dialog.open(CeBarbeiroComponent,dialogConfig);\n    \n    dialogRef.afterClosed().subscribe(\n        (result) => {\n          if (result) {\n            if ( result[0].modo == 'editar' ) {\n              this.updateRowInTable(result);\n            } else {\n              this.addRowInTable(result);\n            }\n          }\n        }\n      )\n    }\n}","<div class=\"card card-center col-10\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal()\">Novo barbeiro</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"card card-center col-10\">\n    <div class=\"card-body\">\n      <mat-form-field>\n        <mat-label>Buscar</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\">\n      </mat-form-field>\n      \n      <table mat-table [dataSource]=\"dataSource\" matSort>\n        <ng-container matColumnDef=\"id\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n          <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n        </ng-container>\n      \n        <ng-container matColumnDef=\"nome\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Nome</th>\n          <td mat-cell *matCellDef=\"let row\"> {{row.nome}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"fone\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Fone</th>\n          <td mat-cell *matCellDef=\"let row\"> {{row.fone}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>E-mail</th>\n          <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n          <td mat-cell *matCellDef=\"let row\">\n            <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"openModal(row.id)\">Editar</button>\n            <button type=\"button\" class=\"btn btn-danger btn-space\" (click)=\"delRowInTable(row.id)\">Apagar</button>\n          </td>\n        </ng-container>\n        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n        </tr>\n      </table>\n      <mat-card *ngIf=\"isLoading\" \n        style=\"display: flex; justify-content: center; align-items: center\">\n        <mat-progress-spinner \n          color=\"primary\" \n          mode=\"indeterminate\">\n        </mat-progress-spinner>\n      </mat-card>\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n    </div>\n</div>","import {Component, OnInit, Inject, Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Agendamento, AgendamentoService } from '../../../services/agendamento.service';\nimport { Cliente, ClienteService } from '../../../services/cliente.service';\nimport { Barbeiro, BarbeiroService } from '../../../services/barbeiro.service';\nimport {NgbDateStruct,NgbTimeStruct,NgbDate,NgbDateParserFormatter} from '@ng-bootstrap/ng-bootstrap';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {GlobalConstants} from '../../../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n/**\n * This Service handles how the date is rendered and parsed from keyboard i.e. in the bound input field.\n */\n@Injectable()\nexport class CustomDateParserFormatter extends NgbDateParserFormatter {\n  readonly DELIMITER = '-';\n  readonly DELIMITER_SHOW = '/';\n  readonly DELIMITER_TIME = ':';\n\n  parse(value: string): NgbDateStruct | null {\n    if (value) {\n      let date = value.split(this.DELIMITER);\n      return {\n        day : parseInt(date[2], 10),\n        month : parseInt(date[1], 10),\n        year : parseInt(date[0], 10)\n     };\n   }\n    return null;\n }\n\n  format(date: NgbDateStruct | null): string {\n    return date ? date.day + this.DELIMITER_SHOW + date.month + this.DELIMITER_SHOW + date.year : '';\n }\n}\n\n@Component({\n  selector: 'app-ce-agendamento',\n  templateUrl: './ce-agendamento.component.html',\n  styleUrls: ['./ce-agendamento.component.css'],\n  providers: [\n    {provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter}\n  ]\n})\nexport class CeAgendamentoComponent implements OnInit {\n\n  error:any;\n  fromDate:any;\n  fromTime:any;\n  tempClienteNome:string;\n\n  keyword = 'nome';\n  duedates:boolean = false;\n  \n  agendamento: Agendamento[]  = [\n      {\n        id:null,\n        descricao:'',\n        cliente_id:null,\n        barbeiro_id:null,\n        dataagendamento:null\n      }\n  ];\n\n  clientes: Cliente[];\n  barbeiros: Barbeiro[];\n\n  config = {\n    format: \"DD/MM/YYYY HH:mm\"\n  };\n\n  servicos: any[] = [\n    { nome: 'BARBA' },\n    { nome: 'CABELO' },\n    { nome: 'BARBA+CABELO' }\n  ]\n\n  modo:any;\n  isLoadingResult:boolean;\n\n  constructor(\n    public dialogRef: MatDialogRef<CeAgendamentoComponent>,\n    private AgendamentoService: AgendamentoService,\n    private ClienteService: ClienteService,\n    private BarbeiroService: BarbeiroService,\n    private _http: HttpClient,\n    public formatter: NgbDateParserFormatter,\n    @Inject(MAT_DIALOG_DATA) data) {\n      if ( data.id != null ) {\n        this.modo = 'Editar'\n\n        let formID = {\n          id:data.id\n        }\n        this._http.post(API_URL + '/agendamentos/find', formID).subscribe(\n          (agendamento: any[]) => {\n            this.agendamento = [];\n            for(let p of agendamento) {\n              let c = p.cliente;\n              this.tempClienteNome = c.nome\n              this.fromDate = NgbDate.from(this.formatter.parse(p.dataagendamento))\n              this.fromTime = this.parseTime(p.dataagendamento.substr(11,5))\n\n              this.agendamento.push(p);\n            }\n          }\n        )\n      } else {\n        this.modo = 'Novo'\n      }\n    }\n\n  ngOnInit(): void {\n    this.getClientes();\n    this.getBarbeiros();\n  }\n\n  parseTime(value: string): NgbTimeStruct | null {\n      if (value) {\n        let time = value.split(':');\n        return {\n          hour : parseInt(time[0], 10)\n          ,minute : parseInt(time[1], 10)\n          ,second : 0\n      };\n    }\n  }\n\n  getAgendamento(value?:any) {\n    this.AgendamentoService\n        .getAgendamentos(value)\n        .subscribe(\n            agendamento => this.agendamento = agendamento,\n            error => this.handleError(error)\n        );\n  }\n\n  postAgendamento(value?:any) {\n    this.AgendamentoService\n        .postAgendamento(value)\n        .subscribe(\n            agendamento => {\n              this.dialogRef.close(agendamento);\n            },\n            error => {\n              this.handleError(error)\n            }\n        );\n  }\n\n  getClientes() {\n    this.ClienteService\n        .getClientes()\n        .subscribe(\n            clientes => this.clientes = clientes,\n            error => this.error = <any>error\n        );\n  }\n\n  getBarbeiros() {\n    this.BarbeiroService\n        .getBarbeiros()\n        .subscribe(\n            barbeiros => this.barbeiros = barbeiros,\n            error => this.error = <any>error\n        );\n  }\n\n  pad(num:number, size:number): string {\n      let s = num+\"\";\n      while (s.length < size) s = \"0\" + s;\n      return s;\n  }\n  \n  onSubmit() {\n    let tempData:any;\n\n    for(let d of Object.keys(this.fromDate) ) {\n      if ( d === \"year\" ) {\n        tempData = this.fromDate[d]\n      }\n      if ( d === \"month\" ) {\n        tempData += '-'+this.fromDate[d]\n      }\n      if ( d === \"day\" ) {\n        tempData += '-'+this.fromDate[d]\n      }\n    }\n\n    if ( this.fromDate && this.fromTime ) {\n      this.agendamento[0].dataagendamento = new Date(tempData + ' ' + this.pad(this.fromTime.hour,2) + ':' + this.pad(this.fromTime.minute,2))\n    } else {\n      this.agendamento[0].dataagendamento = null\n    }\n    this.error = null;\n    this.postAgendamento(this.agendamento[0]);\n  }\n  \n  cancelar() {\n    this.dialogRef.close(null);\n  }\n\n  handleError(error) {\n    this.error = '<table>'; \n    for(let e of Object.keys(error.error.errors) ) {\n      this.error += \"<tr><td><div class='alert alert-danger'>\"+error.error.errors[e][0]+\"</div></td></tr>\";\n    }\n    this.error += '<table>';\n  }\n\n  getServerResponseClientes(event) {\n    this.isLoadingResult = true;\n    this.ClienteService.getBuscaClientes(event).subscribe(\n      data => { \n        if (data[0]['nome'] == undefined) {\n          this.clientes = []\n        } else {\n          this.clientes = data\n        }\n        this.isLoadingResult = false;\n      })\n  }\n\n  searchClearedClientes() {\n    this.agendamento[0].cliente_id = 0;\n    this.clientes = [];\n  }\n\n  selectEvent(item) {\n    if (item) {\n      let id_cliente = item.id\n      this.agendamento[0].cliente_id = id_cliente\n    }\n  }\n}\n","<div class=\"modal-header\">\n    <h5 class=\"modal-title\">{{modo}}</h5>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"cancelar()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <form #agendamentosForm=ngForm (ngSubmit)=\"onSubmit()\">\n        <div class=\"container\">                 \n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>Cliente</label>  \n                    <div class=\"ng-autocomplete\">\n                        <ng-autocomplete\n                            name=\"tempClienteNome\"\n                            required\n                            [(ngModel)]=\"tempClienteNome\"\n                            [data]=\"clientes\"\n                            [searchKeyword]=\"keyword\"\n                            placeHolder=\"Digite o nome do cliente\"\n                            (selected)='selectEvent($event)'\n                            (closed)='selectEvent($event)'\n                            minQueryLength=\"2\"\n                            (inputChanged)='getServerResponseClientes($event)' \n                            (inputCleared)='searchClearedClientes()'\n                            [isLoading]=\"isLoadingResult\" \n                            [itemTemplate]=\"itemTemplate\"\n                            [notFoundTemplate]=\"notFoundTemplate\">\n                        </ng-autocomplete>\n                        \n                        <ng-template #itemTemplate let-item>\n                            <a [innerHTML]=\"item.nome\"></a>\n                        </ng-template>\n                        \n                        <ng-template #notFoundTemplate let-notFound><div style=\"color:black;padding:10px;\">Cliente não encontrado.</div></ng-template>\n                    </div>\n                </div>\n            </div>           \n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>Barbeiros</label>\n                    <select class=\"custom-select\" name=\"barbeiro_id\" required [(ngModel)]=\"agendamento[0].barbeiro_id\">\n                        <option *ngFor=\"let b of barbeiros\" [value]=\"b.id\">{{b.nome}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>Serviços:</label>\n                    <select class=\"custom-select\" name=\"descricao\" required [(ngModel)]=\"agendamento[0].descricao\">\n                        <option *ngFor=\"let s of servicos\" [value]=\"s.nome\">{{s.nome}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>Data:</label>\n                    <div class=\"input-group\">\n                      <input class=\"form-control col-sm-5\" required autocomplete=\"off\" placeholder=\"Data\" name=\"dataagendamento\" \n                      [(ngModel)]=\"fromDate\" [value]=\"formatter.format(fromDate)\" ngbDatepicker #dataagendamento=\"ngbDatepicker\">\n                      <div class=\"input-group-append\">\n                        <button class=\"btn btn-outline-secondary\" (click)=\"dataagendamento.toggle()\" type=\"button\"><i class=\"far fa-calendar-alt\"></i></button>\n                      </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <label>Hora:</label>\n                <div class=\"form-group\">\n                    <ngb-timepicker name=\"fromTime\" required [(ngModel)]=\"fromTime\" style=\"border-left:0;\"></ngb-timepicker>\n                    \n                    <!--<input class=\"form-control col-sm-10\" name=\"dataagendamento\" autocomplete=\"off\" required [(ngModel)]=\"agendamento[0].dataagendamento\" mode=\"daytime\" [dpDayPicker]=\"config\" />-->\n                </div>\n            </div>\n            <div class=\"row\" [innerHtml]=\"error\" [hidden]=\"!error\"></div>\n        </div>\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"onSubmit()\">Salvar</button>\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import {Component, OnInit, Inject} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BarbeiroService, Barbeiro} from 'src/app/services/barbeiro.service';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {GlobalConstants} from '../../../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n@Component({\n  selector: 'app-ce-barbeiro',\n  templateUrl: './ce-barbeiro.component.html',\n  styleUrls: ['./ce-barbeiro.component.css']\n})\nexport class CeBarbeiroComponent implements OnInit {\n\n  barbeiro: Barbeiro[]  = [\n    {\n      id:null,\n      nome:null,\n      fone:null,\n      email:null\n    }\n  ];\n\n  error:any;\n  modo:any;\n\n  constructor(\n    public dialogRef: MatDialogRef<CeBarbeiroComponent>,\n    private BarbeiroService: BarbeiroService,\n    private _http: HttpClient,\n    @Inject(MAT_DIALOG_DATA) data) {\n      if ( data.id != null ) {\n        this.modo = 'Editar'\n\n        let formID = {\n          id:data.id\n        }\n        this._http.post(API_URL + '/barbeiro/edit', formID).subscribe(\n          (barbeiro: Barbeiro[]) => {\n            this.barbeiro = barbeiro\n          }\n        )\n      } else {\n        this.modo = 'Novo'\n      }\n    }\n\n  ngOnInit(): void {\n  }\n\n  cancelar() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    this.error = null;\n    this.post(this.barbeiro[0]);\n  }\n  \n  post(value?:any) {\n    this.BarbeiroService\n        .post(value)\n        .subscribe(\n            barbeiro => {\n              this.dialogRef.close(barbeiro);\n            },\n            error => {\n              this.handleError(error)\n            }\n        );\n   }\n\n  handleError(error:any) {\n    this.error = '<table>'; \n    for(let e of Object.keys(error.error.errors) ) {\n      this.error += \"<tr><td><div class='alert alert-danger'>\"+error.error.errors[e][0]+\"</div></td></tr>\";\n    }\n    this.error += '<table>';\n  }\n}\n","<div class=\"modal-header\">\n    <h5 class=\"modal-title\">{{modo}}</h5>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"cancelar()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n\n\n<div class=\"modal-body\">\n    <form #barbeiroForm=ngForm (ngSubmit)=\"onSubmit()\">\n        <div class=\"container\">                 \n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>Barbeiro</label>\n                    <input type=\"text\" class=\"form-control\" required name=\"nome\" [(ngModel)]=\"barbeiro[0].nome\">\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>Fone</label>\n                    <input type=\"tel\" class=\"form-control\" required name=\"fone\" [(ngModel)]=\"barbeiro[0].fone\">\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>E-mail</label>\n                    <input type=\"email\" class=\"form-control\" required name=\"email\" [(ngModel)]=\"barbeiro[0].email\">\n                </div>\n            </div>\n            <div class=\"row\" [innerHtml]=\"error\" [hidden]=\"!error\"></div>\n        </div>\n    </form>\n</div>\n\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"onSubmit()\">Salvar</button>\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import {Component, OnInit, Inject} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Cliente,Endereco,ClienteService} from 'src/app/services/cliente.service';\nimport {Uf, UfService} from '../../../services/uf.service';\nimport {Municipio, MunicipioService} from '../../../services/municipio.service';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {GlobalConstants} from '../../../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n@Component({\n  selector: 'app-ce-cliente',\n  templateUrl: './ce-cliente.component.html',\n  styleUrls: ['./ce-cliente.component.css']\n})\nexport class CeClienteComponent implements OnInit {\n\n  cliente: Cliente[]  = [\n    {\n      id:null,\n      nome:null,\n      sobrenome:null,\n      apelido:null,\n      cpf:null,\n      fone1:null,\n      fone2:null,\n      email:null\n    }\n  ];\n\n  endereco: Endereco[]  = [\n    {\n      id:null,\n      logradouro: null,\n      numero: null,\n      complemento: null,\n      bairro: null,\n      municipio_id: null,\n      cep: null\n    }\n  ];\n  \n  ufs: Uf[];\n  municipios: Municipio[];\n\n  uf:number;\n  municipio:number;\n\n  error:any;\n  panelOpenState = false;\n\n  modo:string;\n\n  constructor(\n    public dialogRef: MatDialogRef<CeClienteComponent>,\n    private ClienteService: ClienteService\n    ,private UfService: UfService\n    ,private MunicipiosService: MunicipioService\n    ,private _http: HttpClient\n    ,@Inject(MAT_DIALOG_DATA) data) {\n      if ( data.id != null ) {\n        this.modo = 'Editar'\n        \n        let formID = {\n          id:data.id\n        }\n        \n        this._http.post(API_URL + '/cliente/edit', formID).subscribe(\n          (cliente: Cliente[]) => {\n            this.cliente  = cliente\n            \n            if ( cliente[0]['endereco_id']) {\n              this.endereco = [\n                {\n                  id:cliente[0]['endereco_id'],\n                  logradouro: cliente[0]['logradouro'],\n                  numero: cliente[0]['numero'],\n                  complemento: cliente[0]['complemento'],\n                  bairro: cliente[0]['bairro'],\n                  municipio_id: cliente[0]['municipio_id'],\n                  cep: cliente[0]['cep']\n                }\n              ]\n              this.uf = cliente[0]['uf_id'];\n              this.municipio = cliente[0]['municipio_id'];\n              if ( this.uf ) {\n                this.selectMunicipio(this.uf)\n              }\n            }\n          }\n        )\n\n      } else {\n        this.modo = 'Novo'\n      }\n    }\n\n  ngOnInit(): void {\n    this.ufs        = this.UfService.ufs;\n  }\n\n  selectMunicipio(uf_id:number) {\n    if ( uf_id ) { \n      this.municipios = [\n        {\n          id:0\n          ,nome:'Carregando...'\n        }\n      ];\n\n      this.MunicipiosService\n        .getMunicipios(uf_id)\n        .subscribe(\n            municipios => this.municipios = municipios,\n            error => this.handleError(error)\n        );\n    } else {\n      this.municipios = null;\n    }\n  }\n\n\n  cancelar() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    this.error = null;\n\n    this.cliente[0]['logradouro'] = this.endereco[0]['logradouro']\n    this.cliente[0]['numero'] = this.endereco[0]['numero']\n    this.cliente[0]['complemento'] = this.endereco[0]['complemento']\n    this.cliente[0]['bairro'] = this.endereco[0]['bairro']\n    this.cliente[0]['municipio_id'] = this.municipio\n    this.cliente[0]['cep'] = this.endereco[0]['cep']\n    this.cliente[0]['uf_id'] = this.uf\n    \n    this.cliente[0]['modo'] = this.modo\n\n    this.post(this.cliente[0]);\n  }\n  \n  post(value?:any) {\n    this.ClienteService\n        .post(value)\n        .subscribe(\n            data => {\n              this.dialogRef.close(data);\n            },\n            error => {\n              this.handleError(error)\n            }\n        );\n   }\n\n  handleError(error:any) {\n    this.error = '<table>'; \n    for(let e of Object.keys(error.error.errors) ) {\n      this.error += \"<tr><td><div class='alert alert-danger'>\"+error.error.errors[e][0]+\"</div></td></tr>\";\n    }\n    this.error += '<table>';\n  }\n\n}\n","<div class=\"modal-header\">\n    <h5 class=\"modal-title\">{{modo}}</h5>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"cancelar()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n\n\n<div class=\"modal-body\">\n    <form #barbeiroForm=ngForm (ngSubmit)=\"onSubmit()\">\n        <mat-tab-group dynamicHeight>\n            <mat-tab label=\"Perfil\">\n              <div class=\"tap-large-box mat-elevation-z4\">\n                <div class=\"container\">                 \n                    <div class=\"row\">\n                        <div class=\"form-group\">\n                            <label>Nome</label>\n                            <input type=\"text\" class=\"form-control\" required name=\"nome\" [(ngModel)]=\"cliente[0].nome\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Sobrenome</label>\n                            <input type=\"text\" class=\"form-control\" name=\"sobrenome\" [(ngModel)]=\"cliente[0].sobrenome\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group\">\n                            <label>CPF</label>\n                            <input type=\"text\" class=\"form-control\" name=\"cpf\" [(ngModel)]=\"cliente[0].cpf\" mask=\"000.000.000-00\" >\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group\">\n                            <label>Fone 1</label>\n                            <input type=\"text\" class=\"form-control\" name=\"fone1\" [(ngModel)]=\"cliente[0].fone1\" mask=\"(00) 00000-0000\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Fone 2</label>\n                            <input type=\"text\" class=\"form-control\" name=\"fone2\" [(ngModel)]=\"cliente[0].fone2\" mask=\"(00) 00000-0000\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group\">\n                            <label>E-mail</label>\n                            <input type=\"email\" class=\"form-control\" name=\"email\" [(ngModel)]=\"cliente[0].email\">\n                        </div>\n                    </div>\n                </div>\n              </div>\n            </mat-tab>\n            <mat-tab label=\"Endereço\">\n              <div class=\"tap-large-box mat-elevation-z4\">\n                <div class=\"container\">                 \n                    <div class=\"row\">\n                        <div class=\"form-group\">\n                            <label>Rua</label>\n                            <input type=\"text\" class=\"form-control\" name=\"logradouro\" [(ngModel)]=\"endereco[0].logradouro\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Bairro</label>\n                            <input type=\"text\" class=\"form-control\" name=\"bairro\" [(ngModel)]=\"endereco[0].bairro\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Número</label>\n                            <input type=\"number\" class=\"form-control col-4\" name=\"numero\" [(ngModel)]=\"endereco[0].numero\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group\">\n                            <label>Compl.</label>\n                            <input type=\"text\" class=\"form-control\" name=\"complemento\" [(ngModel)]=\"endereco[0].complemento\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Cep</label>\n                            <input type=\"text\" class=\"form-control col-6\" name=\"cep\" [(ngModel)]=\"endereco[0].cep\" mask=\"00000-000\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"form-group\">\n                            <label>UF</label>\n                            <select class=\"custom-select\" name=\"uf\" [(ngModel)]=\"uf\" (change)=\"selectMunicipio($event.target.value)\">\n                                <option [value]=\"0\"></option>\n                                <option *ngFor=\"let uf of ufs\" [value]=\"uf.id\">{{uf.nome}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Município</label>\n                            <select class=\"custom-select\" name=\"municipio\" [(ngModel)]=\"municipio\">\n                                <option [value]=\"0\"></option>\n                                <option *ngFor=\"let m of municipios\" [value]=\"m.id\">{{m.nome}}</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n              </div>\n            </mat-tab>\n        </mat-tab-group>\n\n        <div class=\"row\" [innerHtml]=\"error\" [hidden]=\"!error\"></div>\n    </form>\n</div>\n\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"onSubmit()\">Salvar</button>\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import {Component, OnInit, Inject} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Usuario, UsuarioService} from '../../../services/usuario.service';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {GlobalConstants} from '../../../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n@Component({\n  selector: 'app-ce-usuario',\n  templateUrl: './ce-usuario.component.html',\n  styleUrls: ['./ce-usuario.component.css']\n})\nexport class CeUsuarioComponent implements OnInit {\n\n  usuario: Usuario[]  = [\n    {\n      id:null,\n      name:null,\n      email:null,\n      password:null\n    }\n  ];\n\n  public form = {\n    editPassword: null,\n    password_confirmation: null\n  };\n\n  error:any;\n  modo:any;\n\n  constructor(\n    public dialogRef: MatDialogRef<CeUsuarioComponent>,\n    private UsuarioService: UsuarioService,\n    private _http: HttpClient,\n    @Inject(MAT_DIALOG_DATA) data) {\n      if ( data.id != null ) {\n        this.modo = 'Editar'\n\n        let formID = {\n          id:data.id\n        }\n        this._http.post(API_URL + '/usuario/edit', formID).subscribe(\n          (usuario: Usuario[]) => {\n            this.usuario = usuario\n          }\n        )\n      } else {\n        this.modo = 'Novo'\n        this.form.editPassword = true\n      }\n    }\n\n  ngOnInit(): void {\n  }\n\n  cancelar() {\n    this.dialogRef.close();\n  }\n\n  onSubmit() {\n    this.error = null;\n\n    this.usuario[0]['editPassword'] = this.form['editPassword'];\n    this.usuario[0]['password_confirmation'] = this.form['password_confirmation'];\n    this.post(this.usuario[0]);\n  }\n  \n  post(value?:any) {\n    this.UsuarioService\n        .post(value)\n        .subscribe(\n            data => {\n              this.dialogRef.close(data);\n            },\n            error => {\n              this.handleError(error)\n            }\n        );\n   }\n\n  handleError(error:any) {\n    this.error = '<table>'; \n    for(let e of Object.keys(error.error.errors) ) {\n      this.error += \"<tr><td><div class='alert alert-danger'>\"+error.error.errors[e][0]+\"</div></td></tr>\";\n    }\n    this.error += '<table>';\n  }\n}\n","<div class=\"modal-header\">\n    <h5 class=\"modal-title\">{{modo}}</h5>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"cancelar()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n\n\n<div class=\"modal-body\">\n    <form #barbeiroForm=ngForm (ngSubmit)=\"onSubmit()\">\n        <div class=\"container\">                 \n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>Usuário</label>\n                    <input type=\"text\" class=\"form-control\" required name=\"name\" [(ngModel)]=\"usuario[0].name\">\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"form-group\">\n                    <label>E-mail</label>\n                    <input type=\"email\" class=\"form-control\" required name=\"email\" [(ngModel)]=\"usuario[0].email\">\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"usuario[0].id\">\n                <div class=\"custom-control custom-checkbox\">\n                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"editPassword\" name=\"editPassword\" [(ngModel)]=\"form.editPassword\" [value]=\"true\">\n                    <label class=\"custom-control-label\" for=\"editPassword\">Mudar senha</label>\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"form.editPassword\">\n                <div class=\"form-group\">\n                    <label>Senha</label>\n                    <input type=\"password\" class=\"form-control\" required name=\"password\" [(ngModel)]=\"usuario[0].password\">\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"form.editPassword\">\n                <div class=\"form-group\">\n                    <label>Confirmação de Senha</label>\n                    <input type=\"password\" class=\"form-control\" required name=\"password_confirmation\" [(ngModel)]=\"form.password_confirmation\">\n                </div>\n            </div>\n            <div class=\"row\" [innerHtml]=\"error\" [hidden]=\"!error\"></div>\n        </div>\n    </form>\n</div>\n\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"onSubmit()\">Salvar</button>\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {Cliente, ClienteService} from '../../services/cliente.service';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {CeClienteComponent} from '../ce/ce-cliente/ce-cliente.component';\n\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html',\n  styleUrls: ['./cliente.component.css']\n})\nexport class ClienteComponent implements OnInit {\n  clientes: Cliente[];\n\n  displayedColumns: string[] = ['id', 'nome', 'fone', 'email', 'actions'];\n  dataSource: MatTableDataSource<Cliente>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  isLoading = true;\n\n  constructor(\n    private ClienteService: ClienteService\n    ,public dialog: MatDialog\n    ) { }\n\n  ngOnInit(): void {\n    this.ClienteService.getClientes()\n       .subscribe(\n        data => {\n          this.isLoading = false;\n          this.clientes = data;\n          // Assign the data to the data source for the table to render\n          this.dataSource =  new MatTableDataSource(this.clientes)\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        }, \n        error => this.isLoading = false\n    )\n  }\n\n  ngOnDestroy() {\n    this.clientes = null;\n  }\n\n  addRowInTable(data){\n    this.clientes.push(data[0]);\n    this.dataSource._updateChangeSubscription() \n  }\n  updateRowInTable(data) {\n    let i = this.clientes.findIndex((d) => d.id == data[0].id);\n    if (i>=0) {\n      this.clientes[i] = data[0] \n    }\n    this.dataSource._updateChangeSubscription()\n  }\n  delRowInTable(id) {\n    let i = this.clientes.findIndex((d) => d.id == id);\n    if (i>=0) {\n      this.clientes.splice(i,1)\n    }\n    this.dataSource._updateChangeSubscription()\n    this.ClienteService.apagar(id);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  openModal(id?:number) {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n        id: id\n    };\n\n    const dialogRef = this.dialog.open(CeClienteComponent,dialogConfig);\n    \n    dialogRef.afterClosed().subscribe(\n        (result) => {\n          if (result) {\n            if ( result[0].modo == 'editar' ) {\n              this.updateRowInTable(result);\n            } else {\n              this.addRowInTable(result);\n            }\n          }\n        }\n      )\n    }\n}\n","<div class=\"card card-center col-10\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal()\">Novo cliente</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"card card-center col-10\">\n    <div class=\"card-body\">\n        <mat-form-field>\n            <mat-label>Buscar</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\">\n        </mat-form-field>\n        \n        <table mat-table [dataSource]=\"dataSource\" matSort>\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n        </ng-container>\n        \n        <ng-container matColumnDef=\"nome\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Nome</th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.nome}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"fone\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Fone</th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.fone}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>E-mail</th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n            <td mat-cell *matCellDef=\"let row\">\n            <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"openModal(row.id)\">Editar</button>\n            <button type=\"button\" class=\"btn btn-danger btn-space\" (click)=\"delRowInTable(row.id)\">Apagar</button>\n            </td>\n        </ng-container>\n        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n        </tr>\n        </table>\n        <mat-card *ngIf=\"isLoading\" \n        style=\"display: flex; justify-content: center; align-items: center\">\n        <mat-progress-spinner \n            color=\"primary\" \n            mode=\"indeterminate\">\n        </mat-progress-spinner>\n        </mat-card>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { JarwisService } from '../../services/jarwis.service';\nimport { TokenService } from '../../services/token.service';\nimport { Router } from '@angular/router';\nimport {UsuarioService} from '../../services/usuario.service';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public form = {\n    email: null,\n    password: null\n  };\n\n  public error = null;\n\n  constructor(\n    private Jarwis: JarwisService,\n    private Token: TokenService,\n    private router: Router,\n    private Auth: AuthService,\n    private UsuarioService: UsuarioService\n  ) { }\n\n  onSubmit() {\n    this.Jarwis.login(this.form).subscribe(\n      data => this.handleResponse(data),\n      error => this.handleError(error)\n    );\n  }\n\n  handleResponse(data) {\n    this.Token.handle(data.access_token);\n    this.Auth.changeAuthStatus(true);\n    this.UsuarioService.me()\n    this.router.navigateByUrl('/agendamentos');\n  }\n\n  handleError(error) {\n    this.error = error.error.error;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"mt-4 col-8 offset-2\">\n  <div class=\"card\">\n    <div class=\"card-header\">Entre aqui</div>\n    <div class=\"card-body\">\n      <form #loginForm=ngForm (ngSubmit)=\"onSubmit()\">\n\n        <div class=\"alert alert-danger\" [hidden]=\"!error\">\n          {{error}}\n        </div>\n        <div class=\"form-group row\">\n          <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Email</label>\n          <div class=\"col-sm-10\">\n            <input type=\"email\" name=\"email\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Email\" [(ngModel)]=\"form.email\" required>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">Senha</label>\n          <div class=\"col-sm-10\">\n            <input type=\"password\" name=\"password\" class=\"form-control\" id=\"inputPassword3\" placeholder=\"Password\" [(ngModel)]=\"form.password\"\n              required>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-sm-10 offset-2\">\n\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!loginForm.valid\">Entrar</button>\n\n            <!--<a routerLink=\"/signup\" class=\"btn btn-info float-right\">Cadastre-se</a>-->\n\n          </div>\n        </div>\n        <small class=float-right>\n          <a routerLink=\"/request-password-reset\">Esqueci minha senha</a>\n        </small>\n      </form>\n    </div>\n  </div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {JarwisService} from '../../services/jarwis.service';\nimport {TokenService } from '../../services/token.service';\n//import {Usuario,UsuarioService} from '../../services/usuario.service';\nimport { SnotifyService } from 'ng-snotify';\nimport {GlobalConstants} from '../../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  \n  public loggedIn: boolean;\n  collapsed = true;\n  \n  //userLogged: Usuario[] = [];\n\n  constructor(\n    private Auth: AuthService,\n    private router: Router,\n    private Jarwis: JarwisService,\n    private Token: TokenService,\n    //private UsuarioService: UsuarioService,\n    private Notfiy:SnotifyService\n  ) {}\n\n  ngOnInit() {\n    this.Auth.authStatus.subscribe(value => this.loggedIn = value);\n    \n    /*if (this.loggedIn) {\n      this.userLogged = this.UsuarioService.userLogged\n    }*/\n  }\n\n  logout(event: MouseEvent) {\n    this.Jarwis.logout();\n    event.preventDefault();\n    this.Token.remove();\n    this.Auth.changeAuthStatus(false);\n    this.Notfiy.clear()\n    this.router.navigateByUrl('/login');\n  }\n}","<!--<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">BarbeariaClub</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/agendamentos']\" [routerLinkActive]=\"['active']\" routerLink=\"agendamentos\" *ngIf=\"loggedIn\">Agendamentos</a>\n      </li>\n      <li class=\"nav-item\" [routerLink]=\"['/barbeiros']\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" routerLink=\"barbeiros\" *ngIf=\"loggedIn\">Barbeiros</a>\n      </li>\n      <li class=\"nav-item\" [routerLink]=\"['/clientes']\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" routerLink=\"clientes\" *ngIf=\"loggedIn\">Clientes</a>\n      </li>\n      \n      \n\n    </ul>\n  </div>\n</nav>-->\n\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" [routerLink]=\"['/agendamentos']\">BarbeariaClub</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/agendamentos']\" [routerLinkActive]=\"['active']\" routerLink=\"agendamentos\" *ngIf=\"loggedIn\">Agendamentos</a>\n      </li>\n      <li class=\"nav-item\" [routerLink]=\"['/barbeiros']\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" routerLink=\"/barbeiros\" *ngIf=\"loggedIn\">Barbeiros</a>\n      </li>\n      <li class=\"nav-item\" [routerLink]=\"['/clientes']\" [routerLinkActive]=\"['active']\">\n        <a class=\"nav-link\" routerLink=\"/clientes\" *ngIf=\"loggedIn\">Clientes</a>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"navbar-collapse\" [class.collapse]=\"collapsed\" id=\"navbarContent\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li *ngIf=\"!loggedIn\">\n        <div>\n          <a class=\"nav-link\" [routerLink]=\"['/login']\" [routerLinkActive]=\"['active']\" routerLink=\"login\">Entrar</a>\n        </div>\n      </li>\n      <li *ngIf=\"loggedIn\" class=\"nav-item\" ngbDropdown display=\"dynamic\" placement=\"bottom-right\">\n        <a class=\"nav-link\" style=\"color:white;cursor: pointer\" ngbDropdownToggle id=\"navbarDropdown3\" role=\"button\">\n          Configurações\n        </a>\n        <div ngbDropdownMenu aria-labelledby=\"navbarDropdown3\" class=\"dropdown-menu\">\n          <a ngbDropdownItem [routerLink]=\"['/usuarios']\" [routerLinkActive]=\"['active']\" routerLink=\"/usuarios\">Usuários</a>\n          <a ngbDropdownItem href=\"#\" (click)=\"logout($event)\">Sair</a>\n        </div>\n      </li>\n    </ul>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { JarwisService } from '../../../services/jarwis.service';\nimport { SnotifyService } from 'ng-snotify';\n\n@Component({\n  selector: 'app-request-reset',\n  templateUrl: './request-reset.component.html',\n  styleUrls: ['./request-reset.component.css']\n})\nexport class RequestResetComponent implements OnInit {\n  public form = {\n    email: null\n  };\n\n\n  constructor(\n    private Jarvis: JarwisService,\n    private notify: SnotifyService,\n    private Notfiy:SnotifyService\n  ) { }\n\n  ngOnInit() {\n  }\n\n\n  onSubmit() {\n    this.Notfiy.info('Wait...' ,{timeout:5000})\n    this.Jarvis.sendPasswordResetLink(this.form).subscribe(\n      data => this.handleResponse(data),\n      error => this.notify.error(error.error.error)\n    );\n  }\n\n  handleResponse(res) {\n    this.Notfiy.success(res.data,{timeout:0});\n    this.form.email = null;\n  }\n\n}","<div class=\"mt-4 col-8 offset-2\">\n<div class=\"card\">\n    <div class=\"card-header\">Enviar email para redefinir senha</div>\n    <div class=\"card-body\">\n    <form #RequestResetForm=ngForm (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group row\">\n        <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">E-mail</label>\n        <div class=\"col-sm-10\">\n            <input type=\"email\" name=\"email\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Email\" [(ngModel)]=\"form.email\" required>\n        </div>\n        </div>\n\n        <div class=\"form-group row\">\n        <div class=\"col-sm-10 offset-2\">\n\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!RequestResetForm.valid\">Solicitar</button>\n\n        </div>\n        </div>\n    </form>\n    </div>\n</div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {JarwisService} from '../../../services/jarwis.service';\nimport {SnotifyService} from 'ng-snotify';\n\n@Component({\n  selector: 'app-response-reset',\n  templateUrl: './response-reset.component.html',\n  styleUrls: ['./response-reset.component.css']\n})\nexport class ResponseResetComponent implements OnInit {\n  public error:any=[];\n  public form = {\n    email : null,\n    password : null,\n    password_confirmation:null,\n    resetToken :null\n  }\n  constructor(\n    private route:ActivatedRoute,\n    private Jarwis: JarwisService,\n    private router:Router,\n    private Notify:SnotifyService\n  ) { \n    route.queryParams.subscribe(params => {\n      this.form.resetToken = params['token']\n    });\n  }\n\n  onSubmit(){\n   this.Jarwis.changePassword(this.form).subscribe(\n     data => this.handleResponse(data),\n     error => this.handleError(error)\n   )\n  }\n  handleResponse(data){\n\n    let _router = this.router;\n    this.Notify.confirm('Done!, Now login with new Password', {\n      buttons:[\n        {text: 'Okay', \n        action: toster =>{\n           _router.navigateByUrl('/login'),\n           this.Notify.remove(toster.id)\n          }\n      },\n      ]\n    })\n    \n  }\n\n  handleError(error){\n    this.error = error.error.errors;\n  }\n  ngOnInit() {\n  }\n\n}","<div class=\"mt-4 col-8 offset-2\">\n    <div class=\"card\">\n      <div class=\"card-header\">Redefinir senha</div>\n      <div class=\"card-body\">\n        <form #ResetPasswordForm=ngForm (ngSubmit)=\"onSubmit()\">\n  \n          <div class=\"form-group row\">\n            <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">E-mail</label>\n            <div class=\"col-sm-10\">\n              <input type=\"email\" name=\"email\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Email\" [(ngModel)]=\"form.email\" required>\n              <span class=\"text-danger\" [hidden]=\"!error.email\">{{error.email}}</span>\n            </div>\n          </div>\n  \n          <div class=\"form-group row\">\n            <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">Senha</label>\n            <div class=\"col-sm-10\">\n              <input type=\"password\" name=\"password\" class=\"form-control\" id=\"inputPassword3\" placeholder=\"Password\" [(ngModel)]=\"form.password\"\n                required>\n                <span class=\"text-danger\" [hidden]=\"!error.password\">{{error.password}}</span>\n            </div>\n          </div>\n          \n          <div class=\"form-group row\">\n            <label for=\"inputPassword4\" class=\"col-sm-2 col-form-label\">Repita senha</label>\n            <div class=\"col-sm-10\">\n              <input type=\"password\" name=\"password_confirmation\" class=\"form-control\" id=\"inputPassword4\" placeholder=\"Confirm Password\" [(ngModel)]=\"form.password_confirmation\"\n                required>\n                <span class=\"text-danger\" [hidden]=\"!error.password_confirmation\">{{error.password_confirmation}}</span>\n            </div>\n          </div>\n  \n          <div class=\"form-group row\">\n            <div class=\"col-sm-10 offset-2\">\n  \n              <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!ResetPasswordForm.valid\">Confirmar</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { JarwisService } from '../../services/jarwis.service';\nimport { TokenService } from '../../services/token.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  public form = {\n    email: null,\n    name: null,\n    password: null,\n    password_confirmation: null\n  };\n  public error:any = [];\n\n  constructor(\n    private Jarwis: JarwisService,\n    private Token: TokenService,\n    private router: Router\n  ) { }\n\n  onSubmit() {\n    this.Jarwis.signup(this.form).subscribe(\n      data => this.handleResponse(data),\n      error => this.handleError(error)\n    );\n  }\n  handleResponse(data) {\n    this.Token.handle(data.access_token);\n    this.router.navigateByUrl('/agendamentos');\n  }\n\n  handleError(error) {\n    this.error = error.error.errors;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"mt-4 col-8 offset-2\">\n  <div class=\"card\">\n    <div class=\"card-header\">Register Here</div>\n    <div class=\"card-body\">\n      <form #signupForm=ngForm (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group row\">\n          <label for=\"inputName3\" class=\"col-sm-2 col-form-label\">Name</label>\n          <div class=\"col-sm-10\">\n            <input type=\"text\" name=\"name\" class=\"form-control\" id=\"inputname3\" placeholder=\"Name\" [(ngModel)]=\"form.name\" required>\n            <div class=\"alert alert-danger\" [hidden]=\"!error.name\">\n              {{error.name}}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Email</label>\n          <div class=\"col-sm-10\">\n            <input type=\"email\" name=\"email\" class=\"form-control\" id=\"inputEmail3\" placeholder=\"Email\" [(ngModel)]=\"form.email\" required>\n            <div class=\"alert alert-danger\" [hidden]=\"!error.email\">\n              {{error.email}}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"inputPasswordConfirmation3\" class=\"col-sm-2 col-form-label\">Password</label>\n          <div class=\"col-sm-10\">\n            <input type=\"password\" name=\"password\" class=\"form-control\" id=\"inputPasswordConfirmation3\" placeholder=\"Confirm Password\"\n              [(ngModel)]=\"form.password\" required>\n            <div class=\"alert alert-danger\" [hidden]=\"!error.password\">\n              {{error.password}}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"inputPassword3\" class=\"col-sm-2 col-form-label\">Confirm Password</label>\n          <div class=\"col-sm-10\">\n            <input type=\"password\" name=\"password_confirmation\" class=\"form-control\" id=\"inputPassword3\" placeholder=\"Password\" [(ngModel)]=\"form.password_confirmation\"\n              required>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-sm-10 offset-2\">\n\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!signupForm.valid\">Sign Up</button>\n\n            <a routerLink=\"/login\" class=\"btn btn-info float-right\">Sign in</a>\n\n          </div>\n        </div>\n\n      </form>\n    </div>\n  </div>\n</div>","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Usuario, UsuarioService} from '../../services/usuario.service';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {CeUsuarioComponent} from '../ce/ce-usuario/ce-usuario.component';\n\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent implements OnInit {\n\n  usuarios: Usuario[];\n\n  displayedColumns: string[] = ['id', 'nome', 'email', 'actions'];\n  dataSource: MatTableDataSource<Usuario>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  isLoading = true;\n\n  constructor(\n    private UsuarioService: UsuarioService\n    ,public dialog: MatDialog\n    ) { }\n\n  ngOnInit(): void {\n    this.UsuarioService.getUsuarios()\n       .subscribe(\n        data => {\n          this.isLoading = false;\n          this.usuarios = data;\n          // Assign the data to the data source for the table to render\n          this.dataSource =  new MatTableDataSource(this.usuarios)\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        }, \n        error => this.isLoading = false\n    )\n  }\n  ngOnDestroy() {\n    this.usuarios = null;\n  }\n\n  addRowInTable(data){\n    this.usuarios.push(data[0]);\n    this.dataSource._updateChangeSubscription() \n  }\n  updateRowInTable(data) {\n    let i = this.usuarios.findIndex((d) => d.id == data[0].id);\n    if (i>=0) {\n      this.usuarios[i] = data[0] \n    }\n    this.dataSource._updateChangeSubscription()\n  }\n  delRowInTable(id) {\n    let i = this.usuarios.findIndex((d) => d.id == id);\n    if (i>=0) {\n      this.usuarios.splice(i,1)\n    }\n    this.dataSource._updateChangeSubscription()\n    this.UsuarioService.apagar(id);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  openModal(id?:number) {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n        id: id\n    };\n\n    const dialogRef = this.dialog.open(CeUsuarioComponent,dialogConfig);\n    \n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          if ( result[0].modo == 'editar' ) {\n            this.updateRowInTable(result);\n          } else {\n            this.addRowInTable(result);\n          }\n        }\n      }\n      );\n    }\n\n  apagar(id:number) {\n    this.UsuarioService.apagar(id);\n  }\n}\n","<div class=\"card card-center col-10\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal()\">Novo usuario</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"card card-center col-10\">\n    <div class=\"card-body\">\n        <mat-form-field>\n            <mat-label>Buscar</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\">\n        </mat-form-field>\n        \n        <table mat-table [dataSource]=\"dataSource\" matSort>\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n        </ng-container>\n        \n        <ng-container matColumnDef=\"nome\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Nome</th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>E-mail</th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n            <td mat-cell *matCellDef=\"let row\">\n            <button type=\"button\" class=\"btn btn-info btn-space\" (click)=\"openModal(row.id)\">Editar</button>\n            <button type=\"button\" class=\"btn btn-danger btn-space\" (click)=\"delRowInTable(row.id)\">Apagar</button>\n            </td>\n        </ng-container>\n        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n        </tr>\n        </table>\n        <mat-card *ngIf=\"isLoading\" \n        style=\"display: flex; justify-content: center; align-items: center\">\n        <mat-progress-spinner \n            color=\"primary\" \n            mode=\"indeterminate\">\n        </mat-progress-spinner>\n        </mat-card>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n    </div>\n</div>","export class GlobalConstants {\n    public static API_URL: string = 'http://barbeariaclub.local/api';\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AfterLoginService implements CanActivate {\n\n  constructor(private Token: TokenService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\n    return this.Token.loggedIn();\n  }\n}","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {map, catchError} from 'rxjs/operators';\nimport { SnotifyService } from 'ng-snotify';\nimport {GlobalConstants} from '../global-constants';\n\nexport interface Agendamento {\n  id: number,\n  descricao: string,\n  dataagendamento: Date,\n  cliente_id: number,\n  barbeiro_id: number,\n  empresa_id?: number,\n  user_id?: number\n}\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgendamentoService {\n\n  public agendamentos: Agendamento[] = [];\n  public NotifyAgendamentos: Agendamento[] = [];\n  public res:any;\n\n  constructor(\n    private _http: HttpClient,\n    private Notfiy:SnotifyService\n    ) {\n      this.getNotifyAgendamentos()\n  }\n\n  getNotifyAgendamentos(): void {\n    let tempForm = {\n      tempo:6\n    }\n\n    this._http.post(API_URL + '/agendamentos/find', tempForm).subscribe(\n      (data: any[]) => {\n        for(let d of data) {\n          if (d.cliente.nome) {\n            let sobrenome:string = ''\n            let Fone2:string = ''\n\n            if ( d.cliente.sobrenome ) {\n              sobrenome = d.cliente.sobrenome.substr(0,6)\n              if ( d.cliente.sobrenome.length > 6 ) {\n                sobrenome += '...'\n              } \n            } else {\n              sobrenome = ''\n            }\n\n            if (Fone2) {\n              Fone2 = ' | '+'Fone 2: '+d.cliente.fone2\n            }\n            \n            this.Notfiy.confirm('Fone 1: '+d.cliente.fone1 + Fone2, d.cliente.nome + ' ' + sobrenome, {\n              showProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              buttons: [\n                {text: 'Fechar', action: (toast) => {this.Notfiy.remove(toast.id); }, bold: false},\n              ]\n            });\n          }\n        }\n      }\n    )\n  }\n\n  /*\n    * explanation of observable response object\n    * \n    * resData = {\n    *      data: <object>,\n    *      statusCode: <number>,\n    *      response: <jwres>,\n    *      error: <undefined>\n    * }\n    * \n    * error = {\n    *      data: null,\n    *      statusCode: <number>,\n    *      response: <jwres>,\n    *      error: <jwres.error>\n    * }\n    */\n\n  getAgendamentos(params?:any): Observable<Agendamento[]> {\n    return this._http.post(API_URL + '/agendamentos/find', params)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        return throwError(error);\n      })\n      \n      );\n  }\n\n  postAgendamento(agendamento): Observable<Agendamento[]> {\n    let tipoForm:string;\n\n    if ( agendamento.id == null ) {\n      tipoForm = 'new'\n    } else { \n      tipoForm = 'edit'\n      //delete agendamento['cliente'];\n    }\n\n    return this._http.post(API_URL + '/agendamento/'+tipoForm, agendamento)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        console.log(error)\n        return throwError(error);\n      })\n      \n      );\n  }\n  \n  apagar(id: number) {\n    this._http.delete(API_URL + '/agendamento/' + id).subscribe()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private loggedIn = new BehaviorSubject<boolean>(this.Token.loggedIn());\n  authStatus = this.loggedIn.asObservable();\n\n  changeAuthStatus(value: boolean) {\n    this.loggedIn.next(value);\n  }\n\n  constructor(private Token: TokenService) { }\n}","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport {Observable, throwError} from 'rxjs';\nimport {map, catchError} from 'rxjs/operators';\nimport {GlobalConstants} from '../global-constants';\n\nexport interface Barbeiro {\n  id: string,\n  nome: string,\n  fone: string,\n  email: string\n}\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BarbeiroService {\n\n  constructor(private _http: HttpClient) {}\n\n  getBarbeiros(): Observable<Barbeiro[]> {\n    return this._http.post(API_URL + '/barbeiros',null)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        return throwError(error);\n      })\n      \n      );\n  }\n\n  post(barbeiro: Barbeiro): Observable<Barbeiro[]> {\n    let tipoForm:string;\n\n    if ( barbeiro.id == null ) {\n      tipoForm = 'store'\n    } else { \n      tipoForm = 'update'\n    }\n    \n    return this._http.post(API_URL + '/barbeiro/'+tipoForm, barbeiro)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        return throwError(error);\n      })\n      \n      );\n  }\n\n  apagar(id:number) {\n    this._http.delete(API_URL + '/barbeiro/' + id).subscribe()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BeforeLoginService implements CanActivate {\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\n    return !this.Token.loggedIn();\n  }\n  constructor(private Token: TokenService) { }\n\n}","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport {Observable, throwError} from 'rxjs';\nimport {map, catchError} from 'rxjs/operators';\nimport {GlobalConstants} from '../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\nexport interface Cliente {\n  id: number,\n  nome: string,\n  sobrenome: string,\n  apelido: string,\n  cpf: string,\n  fone1: string,\n  fone2: string,\n  email: string,\n}\n\nexport interface Endereco {\n  id: number,\n  logradouro: string,\n  numero: number,\n  complemento: string,\n  bairro: string,\n  municipio_id: number,\n  cep: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ClienteService {\n\n  public clientes: Cliente[] = [];\n  public res:any;\n\n  constructor(private _http: HttpClient) {}\n\n  getBuscaClientes(q): Observable<Cliente[]> {\n    return this._http.get(API_URL + '/clientes/buscar/'+q)\n    .pipe(\n        map((response: any) => {\n          return response; \n        }),\n        catchError(error => {\n          return throwError(error);\n        })\n      )\n  }\n\n  getClientes(): Observable<Cliente[]> {\n    return this._http.post(API_URL + '/clientes',null)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        return throwError(error);\n      })\n      \n      );\n  }\n\n  post(barbeiro: Cliente): Observable<Cliente[]> {\n    let tipoForm:string;\n\n    if ( barbeiro.id == null ) {\n      tipoForm = 'store'\n    } else { \n      tipoForm = 'update'\n    }\n    \n    return this._http.post(API_URL + '/cliente/'+tipoForm, barbeiro)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        console.log(error)\n        return throwError(error);\n      })\n      \n      );\n  }\n\n  apagar(id:any) {\n    this._http.delete(API_URL + '/cliente/' + id).subscribe()\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalConstants} from '../global-constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JarwisService {\n  private baseUrl:string = GlobalConstants.API_URL;\n\n  constructor(\n    private http: HttpClient,\n    private _http: HttpClient  \n  ) { }\n\n  signup(data) {\n    return this.http.post(`${this.baseUrl}/signup`, data)\n  }\n\n  login(data) {\n    return this.http.post(`${this.baseUrl}/login`, data)\n  }\n  \n  logout(): void {\n    this.http.post(`${this.baseUrl}/logout`, null).subscribe()\n  }\n\n  sendPasswordResetLink(data) {\n    return this.http.post(`${this.baseUrl}/sendPasswordResetLink`, data)\n  }\n  \n  changePassword(data) {\n    return this.http.post(`${this.baseUrl}/resetPassword`, data)\n  }\n}","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport {Observable, throwError} from 'rxjs';\nimport {map, catchError} from 'rxjs/operators';\nimport {GlobalConstants} from '../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\nexport interface Municipio {\n  id: number,\n  nome: string,\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MunicipioService {\n\n  public municipios: Municipio[] = [];\n\n  constructor(private _http: HttpClient) {}\n\n  getMunicipios(uf_id:any): Observable<Municipio[]> {\n    return this._http.get(API_URL + '/municipios/'+uf_id)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        return throwError(error);\n      })\n      \n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {GlobalConstants} from '../global-constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  private baseUrl:string = GlobalConstants.API_URL;\n\n  private iss = {\n    login: this.baseUrl+'/login',\n    signup: this.baseUrl+'/signup'\n  };\n\n  constructor(private _http: HttpClient ) { }\n  \n  \n  refreshToken() {\n    return this._http.post(`${this.baseUrl}/ufs`, null);\n  }\n\n  handle(token) {\n    this.set(token);\n  }\n\n  set(token) {\n    localStorage.setItem('token', token);\n  }\n  get() {\n    return localStorage.getItem('token');\n  }\n\n  remove() {\n    localStorage.removeItem('token');\n  }\n\n  isValid() {\n    const token = this.get();\n    if (token) {\n      const payload = this.payload(token);\n      if (payload) {\n        return Object.values(this.iss).indexOf(payload.iss) > -1 ? true : false;\n      }\n    }\n    return false;\n  }\n\n  payload(token) {\n    const payload = token.split('.')[1];\n    return this.decode(payload);\n  }\n\n  decode(payload) {\n    return JSON.parse(atob(payload));\n  }\n\n  loggedIn() {\n    return this.isValid();\n  }\n}","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport {GlobalConstants} from '../global-constants';\n\nconst API_URL:string = GlobalConstants.API_URL;\n\nexport interface Uf {\n  id: number,\n  nome: string,\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UfService {\n\n  public ufs: Uf[] = [];\n\n  constructor(\n    private _http: HttpClient\n  ) { \n    this._http.post(API_URL + '/ufs', null).subscribe(\n      (data: any[]) => {\n        for(let d of data) {\n          this.ufs.push(d);\n        }\n      }\n    )\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport {Observable, throwError} from 'rxjs';\nimport {map, catchError} from 'rxjs/operators';\nimport {GlobalConstants} from '../global-constants';\n\nexport interface Usuario {\n  id: string,\n  name: string,\n  email: string,\n  password: string\n}\n\nconst API_URL:string = GlobalConstants.API_URL;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  public usuarios: Usuario[] = [];\n  public userLogged: Usuario[] = [];\n\n  constructor(private _http: HttpClient) {}\n  \n  me(): void { \n    this.userLogged = []\n    this._http.get(API_URL + '/me').subscribe(\n      (data: any[]) => {\n        this.userLogged.push(data['user'])\n      })\n  }\n\n  getUsuarios(): Observable<Usuario[]> {\n    return this._http.post(API_URL + '/usuarios',null)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        return throwError(error);\n      })\n      \n      );\n  }\n\n  post(usuario: Usuario): Observable<Usuario[]> {\n    let tipoForm:string;\n\n    if ( usuario.id == null ) {\n      tipoForm = 'store'\n    } else { \n      tipoForm = 'update'\n    }\n    \n    return this._http.post(API_URL + '/usuario/'+tipoForm, usuario)\n    .pipe(\n      map((response: any) => {\n        return response; \n      }),\n      catchError(error => {\n        return throwError(error);\n      })\n      \n      );\n  }\n\n  apagar(id:any) {\n    this._http.delete(API_URL + '/usuario/' + id).subscribe();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}